         TITLE 'P D S  --  PDS HISTORY                       09/28/88'  00010000
*********************************************************************** 00020000
***      HISTORY SUBCOMMAND                                         *** 00030000
*********************************************************************** 00040000
*                                                                       00050000
         SPACE 1                                                        00060000
HISTORY  CSECT                                                          00070068
         USING *,R8                                                     00080000
         LA    R1,L530             ASSUME A NON-PARTITIONED DATA SET    00090000
         TM    DSORG,DS1DSGPO      CORRECT?                             00100000
         BZ    MSGNEW              YES, BRANCH                          00110000
         SPACE 1                                                        00120000
         OI    FLAGSGG,FOUTSUB     SUBCOMMAND GAINED CONTROL            00130000
         TM    FLAGSCC,RECFMU      LOAD MODULE LIBRARY?                 00140000
         BO    HIST020             YES, BRANCH                          00150000
         SPACE 1                                                        00160000
* BRANCH TO ATTRIB FOR SOURCE - EXTENDED ISPF STATS  "HIST : LONG"      00170090
         OI    FLAGSGG,FOUTSOME    ASSUME OUTPUT GENERATED    DRK SEP09 00180089
         L     R8,=A(ATTRIB)       ADDRESSABILITY             DRK SEP09 00190089
         BR    R8                  BRANCH                     DRK SEP09 00200089
         SPACE 1                                                        00210086
         MVC   INSERT#1(72),SPFSTAT2                                    00220000
         MVI   MTLEN,72                                                 00230000
         TM    FLAGSHH,FHEAD       HEADER WRITTEN YET?                  00240000
         BO    HIST000             YES, BRANCH                          00250000
         M$MSG L230$1                                                   00260000
         OI    FLAGSHH,FHEAD       NOW IT HAS BEEN WRITTEN              00270000
         OI    FLAGSGG,FOUTSOME    SOME OUTPUT WAS GENERATED            00280000
         SPACE 1                                                        00290000
HIST000  MVC   INSERT#1(72),BLANK128                                    00300000
         MVC   INSERT#1+1(8),DIRNAME                                    00310000
         TM    DIRFLAG,X'80'           ALIAS MEMBER?                    00320000
         BNO   *+10                    NO, BRANCH                       00330000
         MVC   INSERT#1+1+8(2),=C'-A'  YES, ADD A FLAG                  00340000
         LA    R2,DIRUSER          LOAD START OF USER AREA (FOR SSI)    00350000
         TM    DIRFLAG,X'0F'       SPF STATISTICS PRESENT?              00360000
         BNO   HIST010             NO, BRANCH                           00370000
         TM    DIRSPFCR,X'FE'      0C OF 0CYYDDDF ZEROS?      Y2K AUG97 00380000
         BNZ   HIST010             NO, BRANCH                 Y2K AUG97 00390000
         TM    DIRSPFCD,X'FE'      0C OF OTHER 0CYYDDDF ZERO? Y2K AUG97 00400000
         BNZ   HIST010             NO, BRANCH                 Y2K AUG97 00410000
         SPACE 1                                                        00420000
         LA    R2,INSERT#1-7                                            00430000
         SR    R1,R1                                                    00440000
         IC    R1,DIRSPFR          REVISION NUMBER FIRST                00450000
         CVD   R1,DOUBLE                                                00460000
         MVC   21(4,R2),=X'40212020'                                    00470000
         ED    21(4,R2),DOUBLE+6                                        00480000
         MVI   22(R2),C'.'                                              00490000
         IC    R1,DIRSPFV          VERSION NUMBER                       00500000
         CVD   R1,DOUBLE                                                00510000
         MVC   18(4,R2),=X'40212020'                                    00520000
         ED    18(4,R2),DOUBLE+6                                        00530000
         LA    R1,DIRSPFCR+1           POINT TO YYDDDF                  00540000
         LA    R15,FULLWORD+1                                           00550000
         BAS   R14,CONVDATE            CONVERT TO MMDDYY FORMAT         00560000
         MVC   FULLWORD(1),FULLWORD+3  CONVERT TO YYMMDD                00570000
         MVC   26(L'DATEMASK,R2),DATEMASK                               00580000
         ED    26(L'DATEMASK,R2),FULLWORD                               00590000
         OI    27(R2),X'F0'            UNSUPPRESS ZERO        Y2K AUG97 00600000
         LA    R1,DIRSPFCD+1           POINT TO YYDDDF                  00610000
         LA    R15,FULLWORD+1                                           00620000
         BAS   R14,CONVDATE            CONVERT TO MMDDYY FORMAT         00630000
         MVC   FULLWORD(1),FULLWORD+3  CONVERT TO YYMMDD                00640000
         MVC   36(L'DATEMASK,R2),DATEMASK                               00650000
         ED    36(L'DATEMASK,R2),FULLWORD                               00660000
         OI    37(R2),X'F0'            UNSUPPRESS ZERO        Y2K AUG97 00670000
         MVC   45(6,R2),=X'4021207A2020'                                00680000
         ED    45(6,R2),DIRSPFCT       TIME OF LAST CHANGE              00690000
         SR    R1,R1                                          DRK JAN98 00700000
         ICM   R1,B'0011',DIRSPFSI     CURRENT SIZE           DRK JAN98 00710000
         CVD   R1,DOUBLE                                                00720000
         MVC   51(6,R2),=X'402020202120'                                00730000
         ED    51(6,R2),DOUBLE+5                                        00740000
         SPACE 1                                                        00750000
         SR    R1,R1                                          DRK JAN98 00760000
         ICM   R1,B'0011',DIRSPFIN     INITIAL SIZE           DRK JAN98 00770000
         CVD   R1,DOUBLE                                                00780000
         MVC   57(6,R2),=X'402020202120'                                00790000
         ED    57(6,R2),DOUBLE+5                                        00800000
         SR    R1,R1                                          DRK JAN98 00810000
         ICM   R1,B'0011',DIRSPFMD     MODIFIED LINES         DRK JAN98 00820000
         CVD   R1,DOUBLE                                                00830000
         MVC   63(6,R2),=X'402020202120'                                00840000
         ED    63(6,R2),DOUBLE+5                                        00850000
         MVC   71(8,R2),DIRSPFID                                        00860000
         LA    R1,L230$1                                                00870000
         B     MSGNEW                  NO SSI FOR SPF-SAVED MEMBERS     00880000
         SPACE 1                                                        00890000
HIST010  LA    R1,L230$1                                                00900000
         CLC   ZERO,0(R2)              ZERO?                            00910000
         BE    MSGNEW                  YES, NO SSI                      00920000
         CLC   =F'-1',0(R2)            FFFFFFFF?                        00930000
         BE    MSGNEW                  YES, NO SSI                      00940000
         SPACE 1                                                        00950000
         MVC   INSERT#1+2+8+3(4),=C'SSI:'                               00960000
         UNPK  INSERT#1+2+8+3+5(9),0(5,R2)                              00970000
         TR    INSERT#1+2+8+3+5(8),TRTABLE                              00980000
         MVI   INSERT#1+2+8+3+5+8,X'40'                                 00990000
         B     MSGNEW                                                   01000000
         SPACE 3                                                        01010000
HIST020  OC    #ZAPOPT(4),#ZAPOPT        ANY ZAP, USER, TRAN OR LKED?   01020000
         BNZ   HIST021                   YES, BRANCH                    01030000
         OC    #ZAPOPT(4),=X'01010101'   NO, DEFAULT TO DO THEM ALL     01040000
         TM    FLAGSGG,FTRANCON          TRANSLATOR DATA OFF?           01050000
         BZ    HIST021                   NO, BRANCH                     01060000
         MVI   #TRANOPT,X'02'            YES, NO TRANSLATOR DATA        01070000
         SPACE 1                                                        01080000
HIST021  TM    DIRATTR+1,ATTRNE    RE-EDITABLE MODULE?         GP SEP18 01090099
         BO    HISTESD             NO, LET READESD HANDLE IT   GP SEP18 01100099
         TM    DS1SMSFG,DS1PDSE    PDSE DATASET?               GP SEP05 01110099
         BO    HIST024             YES, JUST DO IT             GP SEP05 01120099
HISTESD  DS    0H                                              GP SEP18 01130099
         L     R15,=A(READESD)     FORMAT THE ESD DATA                  01140099
         BASR  R14,R15             ANY ESD DATA?                        01150099
         B     *+8                 NO, BRANCH                           01160099
         B     HIST023             YES, BRANCH   (WAS HIST024) GP SEP18 01170099
         SPACE 1                                                        01180000
         TM    FLAGSHH,FDELAYM     DELAYED MESSAGE AVAILABLE?           01190099
         BNO   HIST022             NO, BRANCH                           01200000
         TM    PMEMMIN,X'80'       MEMBER LIST?                         01210000
         BO    *+12                YES, BRANCH                          01220000
         TM    FLAGSAA,FMEM#MEM    MEMBER GROUP?                        01230000
         BNO   HIST022             NO, BRANCH                           01240000
         CLI   #MODLEN,0           ANY FILTERING?                       01250000
         BH    NEWCMD              NO, BRANCH                           01260000
         M$ERRST MSGBLANK                                               01270000
         M$ERRST DELAYMSG                                               01280000
         XI    FLAGSHH,FDELAYM     MESSAGE WAS WRITTEN                  01290000
         SPACE 1                                                        01300000
HIST022  LA    R1,MSGTEXT1         MESSAGE IDENTIFIER                   01310000
         B     MSGNEW                                                   01320000
         SPACE 2                                                        01330000
*  FOR LOAD MODULES IN A PDS, SOME ESD ENTRIES PASSED ANY      GP SEP18 01340099
*  FILTERING THAT MAY HAVE BEEN APPLIED, SO SOME COMMAND       GP SEP18 01350099
*  RESPONSE IS REQUIRED, EVEN IF TO REPORT THAT THOSE SECTIONS GP SEP18 01360099
*  HAVE NO IDRS.  SO SET THE 'FOUTSOME' FLAG HERE, RATHER THAN GP SEP18 01370099
*  AFTER READIDR HAS BEEN CALLED AND EXITED VIA EITHER PATH.   GP SEP18 01380099
*  THIS WILL LET THE PDSE LOGIC PATH SET THE FLAG IF ANYTHING  GP SEP18 01390099
*  RELEVANT IS FOUND.                                          GP SEP18 01400099
HIST023  OI    FLAGSGG,FOUTSOME    SOME OUTPUT WAS GENERATED   GP SEP18 01410099
HIST024  L     R15,=A(READIDR)     FORMAT THE IDR DATA                  01420000
         BASR  R14,R15             IS IDR DATA AVAILABLE?               01430000
         B     NOHIST              NO, MESSAGE AND QUIT                 01440000
         B     HISTTRN$            YES, CONTINUE                        01450000
         SPACE 1                                                        01460000
NOHIST   CLI   #MODLEN,0           IS FILTERING ACTIVE?        GP SEP18 01470099
         BNE   NEWCMD              YES, SKIP THIS MESSAGE      GP SEP18 01480099
         SR    R6,R6                                                    01490099
         BAS   R4,HISTHDR                                               01500000
         LA    R1,L460             NO HISTORY AVAILABLE                 01510000
         B     MSGNEW                                                   01520000
         SPACE 3                                                        01530000
HISTHDR  TM    FLAGSHH,FDELAYM     ANY DELAYED HEADER?                  01540000
         BNO   HISTHDR2            NO, BRANCH                           01550000
         XI    FLAGSHH,FDELAYM     MESSAGE WAS WRITTEN                  01560000
         M$ERRST MSGBLANK                                               01570000
         M$ERRST DELAYMSG                                               01580000
HISTHDR2 TM    FLAGSCC,F1IDR       FIRST IDR RECORD?                    01590000
         BZR   R4                  NO, RETURN                           01600000
         NI    FLAGSCC,FF-F1IDR                                         01610000
         LTR   R1,R6               ANY SECOND HEADER?                   01620000
         BZR   R4                  NO, RETURN                           01630000
         M$MSG (R1)                INDIVIDUAL HISTORY TITLE             01640000
         BR    R4                                                       01650000
         EJECT                                                          01660000
*                                                                       01670000
*        FORMAT TRANSLATOR IDR DATA ENTRIES                             01680000
*                                                                       01690000
HISTTRN$ LA    R3,#IDRPTR          SCAN IDR CHAIN                       01700000
         USING IDRENTRY,R3                                              01710000
         OI    FLAGSCC,F1IDR                                            01720000
         CLI   #TRANOPT,X'02'      NO TRANSLATOR DATA?                  01730000
         BE    HISTCOB$            YES, BRANCH                          01740000
         SPACE 2                                                        01750000
HISTTRN  ICM   R3,B'1111',IDRLINK  END OF IDR CHAIN?                    01760000
         BZ    HISTCOB$            YES, BRANCH                          01770000
         CLI   IDRTYPE,IDRTRAN     TRANSLATOR ENTRY?                    01780000
         BNE   HISTTRN             NO, BRANCH                           01790000
         SPACE 2                                                        01800000
         LA    R2,#ESDPTR          START OF ESD CHAIN                   01810000
         USING ESDENTRY,R2                                              01820000
HISTTRN1 ICM   R2,B'1111',ESDLINK  END OF ESD CHAIN?                    01830000
         BZ    HISTTRN             YES, BRANCH                          01840000
         CLI   ESDTYPE,CODEPC      $PRIVATE ENTRY?                      01850000
         BE    HISTTRNP            YES, ALLOW THIS                      01860000
         CLI   ESDTYPE,CODESD      CSECT ENTRY?                         01870000
         BNE   HISTTRN1            NO, SKIP THIS                        01880000
HISTTRNP CLC   ESDID,IDRESDID      REQUESTED IDR RECORD?                01890000
         BNE   HISTTRN1            NO, BRANCH                           01900000
         SPACE 1                                                        01910000
         LA    R6,L060                                                  01920000
         BAS   R4,HISTHDR                                               01930000
         MVC   MSGTEXT1(136),MSGBL132                                   01940000
         SPACE 1                                                        01950000
         MVC   MSGTEXT1+4(8),ESDNAME                                    01960000
         MVC   MSGTEXT1+12(9),DATEMASK                                  01970000
         ED    MSGTEXT1+12(9),IDRDATE                                   01980000
         AIF   ('&ISODT'  NE 'YES').NOISOH1                   DRK NOV01 01990046
         SPACE 1                                                        02000046
         MVC   DOUBLE(8),MSGTEXT1+12+1   MM/DD/YY             DRK NOV01 02010046
         ICM   R0,B'1100',DOUBLE+6       YY OF MM/DD/YY       DRK NOV01 02020046
         MVC   DOUBLE+6(2),DOUBLE+3      DD TO ../../DD       DRK NOV01 02030048
         MVC   DOUBLE+3(2),DOUBLE        MM TO ../MM/DD       DRK NOV01 02040048
         STCM  R0,B'1100',DOUBLE         YY TO YY/MM/DD       DRK NOV01 02050048
         OI    DOUBLE+3,X'F0'            LEADIN BLANK IN MM   DRK NOV01 02060046
         MVC   MSGTEXT1+12+1(8),DOUBLE   YY/MM/DD             DRK NOV01 02070046
         SPACE 1                                                        02080046
.NOISOH1 ANOP                                                 DRK NOV01 02090046
         MVC   MSGTEXT1+24(10),IDRTDATA   TRANSLATOR 1                  02100000
         UNPK  DOUBLE(5),IDRTDATA+10(3)   VVMM PACKED                   02110000
         MVI   MSGTEXT1+36,C'V'                                         02120000
         MVC   MSGTEXT1+36+1(2),DOUBLE    VV                            02130000
         MVI   MSGTEXT1+40,C'M'                                         02140000
         MVC   MSGTEXT1+40+1(2),DOUBLE+2  MM                            02150000
         CLI   IDRLDATA,15                TWO TRANSLATORS?              02160000
         BL    HISTTRN3                   NO, BRANCH                    02170000
         SPACE 1                          YES                           02180000
         OI    IDRTDATA+27+2,X'0F'        FIX THE SIGN FIELD  DRK MAY99 02190000
         CLC   IDRTDATA+27+1(2),=X'000F'  XPEDITER TIMESTAMP? DRK JUN99 02200036
         BNE   HISTTRN2                   NO                  DRK MAY99 02210000
*        MVC   MSGTEXT1+48(9),TIMEMASK    YES, DISPLAY        DRK MAY99 02220000
*        ED    MSGTEXT1+48(9),IDRTDATA+25                     DRK MAY99 02230000
         B     HISTTRN3                                       DRK MAY99 02240000
TIMEMASK DC    X'4021207A20207A2020'      HH:MM:SS            DRK MAY99 02250000
         SPACE 1                                                        02260000
HISTTRN2 DS    0H                                             DRK MAY99 02270000
         OI    IDRTDATA+27+2,X'0F'        FIX THE SIGN FIELD            02280000
         LA    R15,FULLWORD               OUTPUT LOCATION               02290000
         LA    R1,IDRTDATA+27             SECOND YYDDD                  02300000
         BAS   R14,CONVDATE               CONVERT TO MMDDYY FORMAT      02310000
         MVC   MSGTEXT1+48(9),DATEMASK                                  02320000
         ED    MSGTEXT1+48(9),FULLWORD                                  02330000
         AIF   ('&ISODT'  NE 'YES').NOISOH2                   DRK NOV01 02340046
         SPACE 1                                                        02350046
         MVC   DOUBLE(8),MSGTEXT1+48+1   MM/DD/YY             DRK NOV01 02360046
         ICM   R0,B'1100',DOUBLE+6       YY OF MM/DD/YY       DRK NOV01 02370046
         MVC   DOUBLE+6(2),DOUBLE+3      DD TO ../../DD       DRK NOV01 02380048
         MVC   DOUBLE+3(2),DOUBLE        MM TO ../MM/DD       DRK NOV01 02390048
         STCM  R0,B'1100',DOUBLE         YY TO YY/MM/DD       DRK NOV01 02400048
         OI    DOUBLE+3,X'F0'            LEADIN BLANK IN MM   DRK NOV01 02410046
         MVC   MSGTEXT1+48+1(8),DOUBLE   YY/MM/DD             DRK NOV01 02420046
         SPACE 1                                                        02430046
.NOISOH2 ANOP                                                 DRK NOV01 02440046
         MVC   MSGTEXT1+60(10),IDRTDATA+15  TRANSLATOR 2                02450000
         UNPK  DOUBLE(5),IDRTDATA+25(3)     VVMM PACKED                 02460000
         MVI   MSGTEXT1+72,C'V'                                         02470000
         MVC   MSGTEXT1+72+1(2),DOUBLE      VV                          02480000
         MVI   MSGTEXT1+76,C'M'                                         02490000
         MVC   MSGTEXT1+76+1(2),DOUBLE+2    MM                          02500000
         SPACE 1                                                        02510000
HISTTRN3 M$ERRST MSGTEXT1                                               02520000
         B     HISTTRN1            NEXT IDR DATA RECORD THIS ESD ENTRY  02530000
         SPACE 3                                                        02540000
*                                                                       02550000
*        FORMAT SPECIFIC ATTRIBUTES FOR COBOL CSECTS                    02560000
*                                                                       02570000
HISTCOB$ LA    R3,#IDRPTR            SCAN IDR CHAIN                     02580000
         USING IDRENTRY,R3                                              02590000
         LA    R2,#ESDPTR            START OF ESD CHAIN                 02600000
         SPACE 2                                                        02610000
HISTCOBA ICM   R3,B'1111',IDRLINK    END OF IDR CHAIN?                  02620000
         BZ    HISTCOBB              YES, BRANCH                        02630000
         CLI   IDRTYPE,IDRTRAN       TRANSLATOR ENTRY?                  02640000
         BNE   HISTCOBA              NO, BRANCH                         02650000
         CLC   IDRTDATA(6),HISTCTR1  COBOL TRANSLATOR ID?               02660000
         BE    HISTCOBC              YES, BRANCH                        02670000
         CLC   IDRTDATA(6),HISTCTR2  COBOL TRANSLATOR ID?               02680000
         BE    HISTCOBC              YES, BRANCH                        02690055
         CLC   IDRTDATA(6),HISTCTR3  COBOL TRANSLATOR ID?     DRK MAY99 02700055
         BE    HISTCOBC              YES, BRANCH              DRK MAY99 02710055
         CLC   IDRTDATA(6),HISTCTR4  COBOL TRANSLATOR ID?     DRK JUN04 02720055
         BE    HISTCOBC              YES, BRANCH              DRK SEP11 02730092
         CLC   IDRTDATA(6),HISTCTR5  COBOL TRANSLATOR ID?     DRK SEP11 02740092
         BE    HISTCOBC              YES, BRANCH              DRK SEP11 02750092
         CLC   IDRTDATA(6),HISTCTR6  COBOL TRANSLATOR ID?     DRK JUN13 02760096
         BE    HISTCOBC              YES, BRANCH              DRK JUN13 02770096
         CLC   IDRTDATA(6),HISTCTR7  COBOL TRANSLATOR ID?     DRK MAY16 02780098
         BE    HISTCOBC              YES, BRANCH              DRK MAY16 02790098
         B     HISTCOBA              NO, BRANCH               DRK SEP11 02800092
         SPACE 2                                                        02810000
         USING ESDENTRY,R2                                              02820000
HISTCOBB ICM   R2,B'1111',ESDLINK    END OF ESD CHAIN?                  02830000
         BZ    HISTZAP$              YES, BRANCH                        02840000
         CLI   ESDTYPE,CODESD        CSECT ENTRY?                       02850000
         BNE   HISTCOBB              NO, SKIP THIS                      02860000
         CLC   ESDNAME(3),HISTLILB   COBOL ESD ENTRY NAME?              02870000
         BNE   HISTCOBB              NO, BRANCH                         02880000
         SPACE 2                                                        02890000
HISTCOBC LA    R3,#IDRPTR          SCAN IDR CHAIN                       02900000
         USING IDRENTRY,R3                                              02910000
         OI    FLAGSCC,F1IDR                                            02920000
         TM    DIRATTR,ATTREXEC    EXECUTABLE?                          02930000
         BNO   HISTZAP$            NO, IGNORE COBOL ATTRIBUTES          02940000
         OI    ##ADRPA#,$Q         QUIET MODE LOAD IS REQUIRED          02950000
         L     R2,RECOVER          PREVIOUS RECOVERY ADDRESS            02960000
         LA    R1,HISTCABE         RESUME ADDRESS                       02970000
         ST    R1,RECOVER          IN-LINE RECOVERY                     02980000
         STM   R2,R8,MSGTEXT2      SAVE REGISTERS                       02990000
         MVI   RECOVER,C'L'        LOAD RECOVERY FLAG                   03000000
         LOAD  EPLOC=DIRNAME,DCB=INDCB                                  03010000
         LR    R4,R0               ENTRY POINT ADDRESS OF MODULE        03020000
         SR    R1,R1               CLEAR THE TOP BYTE                   03030000
         ICM   R1,B'0111',DIREPA   ENTRY POINT OFFSET OF MODULE         03040000
         SR    R4,R1               START OF MODULE                      03050000
         ST    R2,RECOVER          RESET RECOVERY ADDRESS               03060000
         MVI   RECOVER,0           LOAD WORKED                          03070000
         NI    ##ADRPA#,FF-$Q      END OF QUIET MODE LOAD               03080000
         XC    MSGTEXT2(4),MSGTEXT2                                     03090000
         B     HISTCOB                                                  03100000
         SPACE 1                                                        03110000
HISTCABE LM    R2,R8,MSGTEXT2      RESTORE REGISTERS                    03120059
         ST    R2,RECOVER          RESTORE RECOVERY ADDRESS             03130000
         NI    ##ADRPA#,FF-$Q      END OF QUIET MODE LOAD               03140000
         B     HISTZAP$            LOAD DID NOT WORK                    03150000
         SPACE 2                                                        03160000
HISTCOB  ICM   R3,B'1111',IDRLINK  END OF IDR CHAIN?                    03170000
         BZ    HISTCOBZ            YES, BRANCH                          03180000
         CLI   IDRTYPE,IDRTRAN     TRANSLATOR ENTRY?                    03190000
         BNE   HISTCOB             NO, BRANCH                           03200000
         SPACE 2                                                        03210000
         LA    R2,#ESDPTR          START OF ESD CHAIN                   03220000
         USING ESDENTRY,R2                                              03230000
HISTCOB1 ICM   R2,B'1111',ESDLINK  END OF ESD CHAIN?                    03240000
         BZ    HISTCOBZ            YES, DONE                            03250000
         CLI   ESDTYPE,CODESD      CSECT ENTRY?                         03260000
         BNE   HISTCOB1            NO, SKIP THIS                        03270000
         SPACE 1                                                        03280000
         SR    R5,R5                                                    03290000
         ICM   R5,B'0111',ESDADDR         OFFSET TO THIS CSECT          03300000
         SR    R15,R15                                                  03310000
         ICM   R15,B'0111',ESDLEN         LENGTH OF CSECT               03320000
         CH    R15,=H'450'                POSSIBLY COBOL?               03330047
         BL    HISTCOB1                   NO, BRANCH                    03340000
         AR    R5,R4                      ADDRESS OF CSECT START        03350000
         LR    R0,R5                                                    03360000
         SRL   R0,24                      SHIFT OFF LOWER BYTES         03370000
         LTR   R0,R0                      31-BIT ADDRESS?               03380000
         BZ    HISTCOB9                   NO, BRANCH                    03390000
         LA    R14,HISTCOB3               31-BIT ADDRESSING             03400000
         O     R14,HISTMASK               HIGH-ORDER X'80'              03410000
         DC    X'0B0E'                    SWITCH ADDRESSING MODE        03420000
*        BSM   0,R14                      SWITCH ADDRESSING MODE        03430000
HISTCOB3 MVC   MSGTEXT2(140),0(R5)        MOVE TO 24 BIT STOR DRK AUG07 03440073
         AIF   ('&MVSLEV' LT 'MVS510').NOECOB1                 GP OCT18 03450099
         CLI   MSGTEXT2+4,1               ENTERPRISE COBOL?    GP OCT18 03460099
         BNE   HISTCOBN                   NO                   GP OCT18 03470099
         CLC   MSGTEXT2+5(3),HISTCCEE+1   ENTERPRISE COBOL?    GP OCT18 03480099
         BNE   HISTCOBN                   NO                   GP OCT18 03490099
         MVI   MSGTEXT2+4,0               YES, "COBOL FOR MVS" GP OCT18 03500099
         L     R14,12(,R5)                GET PPA1 OFFSET      GP OCT18 03510099
         ALR   R14,R5                     POINT TO PPA1        GP OCT18 03520099
         L     R14,4(,R14)                GET PPA2 OFFSET      GP OCT18 03530099
         ALR   R14,R5                     POINT TO PPA2        GP OCT18 03540099
         IC    R1,20(,R14)                LOAD PPA2 FLAGS      GP OCT18 03550099
         A     R14,12(,R14)               POINT TO TIMESTAMP   GP OCT18 03560099
         CLI   0(R14),C'2'                1ST DIGIT OF YEAR?   GP OCT18 03570099
         BNE   HISTCOBN                   NO, THAT'S ODD       GP OCT18 03580099
         MVC   MSGTEXT2+104(20),0(R14)    COPY TIMESTAMP+VRM   GP OCT18 03590099
         TMLL  R1,X'20'                   SERVICE PRESENT?     GP OCT18 03600099
         BZ    HSTSRVOK                   NO                   GP OCT18 03610099
         AH    R14,20(,R14)               YES, ADD ITS LENGTH  GP OCT18 03620099
         LA    R14,2+1(,R14)              AND INDICATOR'S + 1  GP OCT18 03630099
         NILL  R14,X'FFFE'                ALIGN TO HALFWORD    GP OCT18 03640099
HSTSRVOK MVC   MSGTEXT2+45(4),20+2+9(R14) COPY FLAG BYTES      GP OCT18 03650099
HISTCOBN EQU   *                                               GP OCT18 03660099
.NOECOB1 ANOP  ,                                               GP OCT18 03670099
         LA    R14,HISTCOB4               24-BIT ADDRESSING             03680000
         DC    X'0B0E'                    SWITCH ADDRESSING MODE        03690000
*        BSM   0,R14                      SWITCH ADDRESSING MODE        03700000
HISTCOB4 LA    R5,MSGTEXT2                POINT INTO STORAGE  DRK AUG07 03710073
HISTCOB9 LR    R1,R5                                                    03720000
         LA    R1,0(,R1)                                                03730000
         AR    R15,R5                     ADDRESS OF CSECT END          03740000
         CLC   0(2,R5),=X'0700'           PADDED NOP ENTRY POINT?       03750047
         BNE   HISTCEP                    NO, BRANCH                    03760000
         CLC   14(8,R5),BLANK128          PADDED ENTRY POINT?           03770000
         BNE   HISTCGOT                   NO, BRANCH                    03780000
         L     R5,22(,R5)                 GET THE REAL POINTER          03790000
         B     HISTCGOT                                                 03800000
HISTCEP  CLC   12(8,R5),BLANK128          ENTRY POINT CODING?           03810000
         BNE   HISTCGOT                   NO, BRANCH                    03820000
         L     R5,20(,R5)                 GET THE REAL POINTER          03830000
HISTCGOT LA    R5,0(,R5)                                                03840000
         CR    R5,R1                      IN THIS CSECT?                03850000
         BL    HISTCOB1                   NO, BRANCH                    03860000
         CR    R5,R15                     IN THIS CSECT?                03870000
         BH    HISTCOB1                   NO, BRANCH                    03880000
         SPACE 1                                                        03890000
HISTCGT2 MVC   INSERT#1(70),HIST2HDR      INITIALIZE THE HEADER LINE    03900000
         LA    R1,HISTCV2                 ASSUME C2 COMPILER            03910000
         CLC   13(4,R5),HISTCV2L          CORRECT?                      03920000
         BE    HISTCMSG                   YES, BRANCH                   03930000
         SPACE 1                                                        03940000
         LA    R1,HISTCMV                 ASSUME COBOL MVS    DRK MAY99 03950000
         CLC   4(4,R5),HISTCCEE           CORRECT?            DRK MAY99 03960000
         BNE   HISTCGT3                   NO                  DRK DEC02 03970053
         MVC   INSERT#1+29(5),=C'TIME '   MODIFY HEADER LINE  DRK MAY99 03980000
         MVC   INSERT#1+39(5),=C'NUMPR'   MODIFY HEADER LINE  DRK AUG07 03990070
         MVC   COBDATE(6),106(R5)         SAVE COBOL MVS DATE DRK DEC02 04000052
         MVC   COBTIME(4),112(R5)         SAVE COBOL MVS TIME DRK MAY99 04010052
         MVC   COBVERS(1),119(R5)         SAVE COBOL VERSION  DRK NOV18 04020099
         MVC   COBVERS+1(1),121(R5)       SAVE COBOL RELEASE  DRK NOV18 04030099
         MVC   WORKTMP(20),104(R5)        MOVE TIMESTAMP      DRK MAY99 04040052
         NC    WORKTMP(20),=20X'F0'       TURN OFF DIGITS     DRK MAY99 04050052
         CLC   WORKTMP(20),=20X'F0'       @TIMEVRS AREA?      DRK MAY99 04060052
         BE    HISTCMSG                   YES, COBOL MVS      DRK MAY99 04070052
         SPACE 1                                                        04080052
HISTCGT3 DS    0H                                                       04090053
         MVC   INSERT#1(70),HISTCHDR      INITIALIZE THE HEADER LINE    04100000
         LA    R1,HISTCVS                 ASSUME VS COMPILER            04110000
         CLC   20(4,R5),HISTCVSR          CORRECT?                      04120000
         BE    HISTCMSG                   YES, BRANCH                   04130000
         LA    R1,HISTCV4                 ASSUME V4 COMPILER            04140000
         CLC   20(4,R5),HISTCANS          CORRECT?                      04150000
         BNE   HISTCOB1                   NO, BRANCH                    04160000
         SPACE 1                                                        04170000
HISTCMSG MVI   MTLEN,70                   70 CHARACTER MESSAGE          04180000
         TM    FLAGSCC,F1IDR              A COBOL HEADER WRITTEN?       04190000
         BNO   HISTCCOM                   NO, BRANCH                    04200000
         XI    FLAGSCC,F1IDR              HEADER HAS BEEN WRITTEN       04210000
         TM    FLAGSHH,FDELAYM            ANY DELAYED HEADER?           04220000
         BNO   HISTCMS2                   NO, BRANCH                    04230000
         XI    FLAGSHH,FDELAYM            MESSAGE WAS WRITTEN           04240000
         M$ERRST MSGBLANK                                               04250000
         M$ERRST DELAYMSG                                               04260000
HISTCMS2 CLC   INSERT#1(20),HIST2HDR      COBOL V2?           DRK MAY99 04270000
         BE    HISTC210                   YES, BRANCH                   04280000
         M$MSG L250$1                                                   04290000
         MVC   INSERT#1(70),HISTCUND      INITIALIZE THE HEADER LINE    04300000
         M$MSG L250$1                                                   04310000
         B     HISTCGT2                   FIND THE COMPILER TYPE AGAIN  04320000
         SPACE 1                                                        04330000
HISTCCOM CLC   INSERT#1(20),HIST2HDR      COBOL V2?           DRK MAY99 04340000
         BE    HISTC220                   YES, BRANCH                   04350000
         MVC   INSERT#1+00(8),ESDNAME     SET THE CSECT NAME            04360000
         MVC   INSERT#1+09(3),0(R1)       SET THE COMPILER NAME         04370000
         AIF   ('&MVSLEV' LT 'MVS220').MVS22H                 DRK SEP04 04380060
         LA    R14,HISTA31A                                   DRK SEP04 04390059
         O     R14,HISTMASK               HIGH-ORDER X'80'    DRK SEP04 04400059
         BSM   0,R14                      31-BIT MODE         DRK SEP04 04410059
HISTA31A DS    0H                                             DRK SEP04 04420059
.MVS22H  ANOP                                                 DRK SEP04 04430060
         L     R6,60(,R5)                 TGT POINTER                   04440000
         CLC   X'1BC'(8,R6),HISTCOUT      SYSOUT?                       04450000
         BE    HISTCBIT                   YES, BRANCH                   04460000
         AIF   ('&MVSLEV' LT 'MVS220').MVS22I                 DRK SEP04 04470060
         LA    R14,HISTA24A                                   DRK SEP04 04480059
         BSM   0,R14                      24-BIT MODE         DRK SEP04 04490059
HISTA24A DS    0H                                             DRK SEP04 04500059
.MVS22I  ANOP                                                 DRK SEP04 04510060
         M$MSG L500                                                     04520000
         B     HISTCOB1                                                 04530000
         SPACE 1                                                        04540000
HISTCBIT CLI   INSERT#1+9+1,C'4'          V4 COMPILER?                  04550059
         BE    HISTCBI6                   YES, BRANCH                   04560000
         MVI   INSERT#1+9+2,C'2'          ASSUME LANGUAGE LEVEL 2       04570000
         TM    X'1C5'(R6),X'80'           CORRECT?                      04580000
         BO    *+8                        YES, BRANCH                   04590000
         MVI   INSERT#1+9+2,C'1'          MUST BE LANGUAGE LEVEL 1      04600000
         SPACE 1                                                        04610000
HISTCBI6 TM    X'48'(R6),X'08'            SYMDUMP?                      04620000
         BO    *+10                       YES, BRANCH                   04630000
         MVC   INSERT#1+52(05),BLANK128   NO, CLEAR THE DOC             04640000
         SPACE 1                                                        04650000
         TM    X'48'(R6),X'04'            FLOW?                         04660000
         BO    *+10                       YES, BRANCH                   04670000
         MVC   INSERT#1+19(04),BLANK128   NO, CLEAR THE DOC             04680000
         SPACE 1                                                        04690000
         TM    X'48'(R6),X'02'            STATE?                        04700000
         BO    *+10                       YES, BRANCH                   04710000
         MVC   INSERT#1+24(05),BLANK128   NO, CLEAR THE DOC             04720000
         SPACE 1                                                        04730000
         TM    X'49'(R6),X'10'            TEST?                         04740000
         BO    *+10                       YES, BRANCH                   04750000
         MVC   INSERT#1+30(04),BLANK128   NO, CLEAR THE DOC             04760000
         SPACE 1                                                        04770000
         TM    X'4A'(R6),X'80'            RESIDENT?                     04780000
         BZ    HISTCRS2                   YES, BRANCH (INVERSE TEST)    04790000
         MVC   INSERT#1+41(03),BLANK128   NO, CLEAR THE DOC             04800000
         OI    #TRANOPT,X'80'             MARK NORES FOR LATER          04810000
         B     HISTCEN0                                                 04820000
HISTCRS2 OI    #TRANOPT,X'40'             MARK RES FOR LATER            04830000
         SPACE 1                                                        04840000
HISTCEN0 TM    X'4A'(R6),X'40'            ENDJOB?                       04850000
         BO    HISTCEN2                   YES, BRANCH                   04860000
         MVC   INSERT#1+45(06),BLANK128   NO, CLEAR THE DOC             04870000
         B     HISTCOBJ                                                 04880000
HISTCEN2 OI    #TRANOPT,X'20'             MARK ENDJOB FOR LATER         04890000
         SPACE 1                                                        04900000
HISTCOBJ MVC   INSERT#1+57(03),BLANK128   CLEAR "OBJ"                   04910000
         TM    X'4A'(R6),X'20'            OBJ370?                       04920000
         BNO   *+10                       NO, BRANCH                    04930000
         MVC   INSERT#1+57(03),HISTC370   YES, ADD "370"                04940000
         SPACE 1                                                        04950000
         MVC   INSERT#1+61(10),BLANK128   CLEAR "OPTIMIZE "             04960000
         TM    X'48'(R6),X'01'            COBOL OPTIMIZED?              04970000
         BNO   HISTCCPX                   NO, BRANCH                    04980000
         MVC   INSERT#1+61(05),HISTCOPT   YES, ADD "COBOL"              04990000
         B     HISTCTWO                                                 05000000
         SPACE 1                                                        05010000
HISTCCPX CLC   X'48'(6,R5),HISTCAOP       CA-OPTIMIZER?       DRK DEC02 05020051
         BNE   *+4+6+4                    NO, BRANCH          DRK DEC02 05030051
         MVC   INSERT#1+61(06),HISTCAOP   YES, ADD "CA-OPT"   DRK DEC02 05040051
         B     HISTCPGT                                       DRK JUL04 05050056
         CLC   X'48'(5,R5),HISTCCAP       CAPEX?                        05060050
         BNE   HISTCTWO                   NO, BRANCH                    05070000
         MVC   INSERT#1+61(05),HISTCCAP   YES, ADD "CAPEX"              05080000
HISTCPGT L     R5,X'38'(,R5)              PGT POINTER                   05090056
         SH    R5,=H'8'                                                 05100000
         ICM   R5,B'1111',0(R5)           DTECT POSSIBLE?               05110000
         BZ    HISTCTWO                   NO, BRANCH                    05120000
         AR    R5,R6                      POINT TO OPTION BYTE          05130000
         TM    0(R5),X'60'                XCOUNT OR PFLOW?              05140000
         BZ    HISTCTWO                   YES, BRANCH                   05150000
         CLI   INSERT#1+63,C'-'           CA-OPT?             DRK JUL04 05160057
         BNE   *+4+6+4                    NO                  DRK JUL04 05170057
         MVC   INSERT#1+61(09),HISTCO$D   YES, ADD "OPT/DTECT"DRK JUL04 05180057
         B     HISTCTWO                                       DRK JUL04 05190058
         MVC   INSERT#1+61(09),HISTCC$D   NO, ADD "CAP/DTECT"           05200057
         SPACE 1                                                        05210000
HISTCTWO CLC   INSERT#1(2),HISTCVS        VS COMPILER?                  05220000
         BE    HISTCFIN                   NO, BRANCH                    05230000
         TM    X'4A'(R6),X'08'            COUNT?                        05240000
         BO    *+10                       YES, BRANCH                   05250000
         MVC   INSERT#1+13(05),BLANK128   NO, CLEAR THE DOC             05260000
         SPACE 1                                                        05270000
         TM    X'4A'(R6),X'10'            TRACE?                        05280000
         BO    *+10                       YES, BRANCH                   05290000
         MVC   INSERT#1+35(05),BLANK128   NO, CLEAR THE DOC             05300000
HISTCFIN DS    0H                                             DRK SEP04 05310059
         AIF   ('&MVSLEV' LT 'MVS220').MVS22J                 DRK SEP04 05320060
         LA    R14,HISTA24B                                   DRK SEP04 05330059
         BSM   0,R14                      24-BIT MODE         DRK SEP04 05340059
HISTA24B DS    0H                                             DRK SEP04 05350059
.MVS22J  ANOP                                                 DRK SEP04 05360060
         M$MSG L250$1                                                   05370059
         B     HISTCOB1                                                 05380000
         SPACE 3                                                        05390000
HISTC210 M$MSG L260$1                                                   05400000
         MVC   INSERT#1(70),HIST2UND      INITIALIZE THE HEADER LINE    05410000
         M$MSG L260$1                                                   05420000
         B     HISTCGT2                   FIND THE COMPILER TYPE AGAIN  05430000
         SPACE 1                                                        05440000
HISTC220 DS    0H                         COBOL V2                      05450000
         CLC   0(3,R1),=C'CEE'            COBOL FOR MVS?      DRK MAY99 05460000
         BE    HISTMV20                   YES                 DRK MAY99 05470000
         MVC   INSERT#1+00(8),ESDNAME     SET THE CSECT NAME            05480000
         MVC   INSERT#1+09(3),0(R1)       SET THE COMPILER NAME         05490000
         TM    47(R5),X'80'               TEST?                         05500000
         BO    *+10                       YES, BRANCH                   05510000
         MVC   INSERT#1+13(04),BLANK128   NO, CLEAR THE DOC             05520000
         SPACE 1                                                        05530000
         TM    46(R5),X'02'               SSRANGE?                      05540000
         BO    *+10                       YES, BRANCH                   05550000
         MVC   INSERT#1+18(06),BLANK128   NO, CLEAR THE DOC             05560000
         SPACE 1                                                        05570000
         TM    45(R5),X'02'               OPT?                          05580000
         BO    *+10                       YES, BRANCH                   05590000
         MVC   INSERT#1+25(03),BLANK128   NO, CLEAR THE DOC             05600000
         SPACE 1                                                        05610000
         TM    44(R5),X'01'               FDUMP?                        05620000
         BO    *+10                       YES, BRANCH                   05630000
         MVC   INSERT#1+29(05),BLANK128   NO, CLEAR THE DOC             05640000
         SPACE 1                                                        05650000
         TM    47(R5),X'04'               ZWB?                          05660000
         BO    *+10                       YES, BRANCH                   05670000
         MVC   INSERT#1+35(03),BLANK128   NO, CLEAR THE DOC             05680000
         SPACE 1                                                        05690000
         TM    46(R5),X'80'               PFDSN?                        05700000
         BO    *+10                       YES, BRANCH                   05710000
         MVC   INSERT#1+39(05),BLANK128   NO, CLEAR THE DOC             05720000
         SPACE 1                                                        05730000
         TM    47(R5),X'40'               TRUNC?                        05740000
         BO    *+10                       YES, BRANCH                   05750000
         MVC   INSERT#1+45(06),BLANK128   NO, CLEAR THE DOC             05760000
         SPACE 1                                                        05770000
         LA    R1,1                       ASSUME RES                    05780000
         TM    46(R5),X'20'               RES?                          05790000
         BO    *+10+4                     YES, BRANCH                   05800000
         MVC   INSERT#1+51(03),BLANK128   NO, CLEAR THE DOC             05810000
         LA    R1,2                       NORES                         05820000
         O     R1,MSGTEXT2                FLAG FOR LATER                05830000
         ST    R1,MSGTEXT2                SAVE FOR LATER                05840000
         SPACE 1                                                        05850000
         TM    46(R5),X'40'               RENT?                         05860000
         BO    *+10                       YES, BRANCH                   05870000
         MVC   INSERT#1+55(04),BLANK128   NO, CLEAR THE DOC             05880000
         SPACE 1                                                        05890000
         TM    44(R5),X'04'               DYNAM?                        05900000
         BO    *+10                       YES, BRANCH                   05910000
         MVC   INSERT#1+60(05),BLANK128   NO, CLEAR THE DOC             05920000
         SPACE 1                                                        05930000
         MVC   INSERT#1+66(4),HISTC31     DATA 31 ADDRESSING            05940000
         TM    44(R5),X'20'               DATA 31?                      05950000
         BO    *+10                       YES, BRANCH                   05960000
         MVC   INSERT#1+66(04),BLANK128   NO, CLEAR THE DOC             05970000
         SPACE 1                                                        05980000
         M$MSG L260$1                                                   05990000
         B     HISTCOB1                                                 06000000
         SPACE 1                                                        06010000
HISTMV20 DS    0H                         COBOL FOR MVS       DRK MAY99 06020000
         MVC   INSERT#1+00(8),ESDNAME     SET THE CSECT NAME            06030000
         MVC   INSERT#1+09(3),0(R1)       SET THE COMPILER NAME         06040000
         SPACE 1                                              DRK NOV18 06050099
         MVI   INSERT#1+09,C'E'           SET THE COMPILER NAME       " 06060099
         MVC   INSERT#1+10(2),COBVERS     SET THE COMPILER VER/REL    " 06070099
         TM    47+88(R5),X'80'            TEST?                         06080000
         BO    *+10                       YES, BRANCH                   06090000
         MVC   INSERT#1+13(04),BLANK128   NO, CLEAR THE DOC             06100000
         SPACE 1                                                        06110000
         TM    46+88(R5),X'02'            SSRANGE?                      06120000
         BO    *+10                       YES, BRANCH                   06130000
         MVC   INSERT#1+18(06),COBDATE    NO, (COMPILE DATE)  DRK DEC02 06140052
*        MVC   INSERT#1+18(06),BLANK128   NO, CLEAR THE DOC   DRK DEC02 06150052
         SPACE 1                                                        06160052
         TM    45+88(R5),X'02'            OPT?                          06170052
         BO    *+10                       YES, BRANCH                   06180052
         MVC   INSERT#1+25(03),BLANK128   NO, CLEAR THE DOC             06190052
         SPACE 1                                                        06200052
*        TM    44+88(R5),X'01'            FDUMP?              DRK MAY99 06210052
*        BO    *+10                       YES, BRANCH         DRK MAY99 06220052
*        MVC   INSERT#1+29(05),BLANK128   NO, CLEAR THE DOC   DRK MAY99 06230052
         MVC   INSERT#1+29(02),COBTIME    HH (COMPILE TIME)   DRK MAY99 06240052
         MVI   INSERT#1+31,C':'           :                   DRK MAY99 06250052
         MVC   INSERT#1+32(02),COBTIME+2  MM (COMPILE TIME)   DRK MAY99 06260052
         SPACE 1                                                        06270052
         TM    47+88(R5),X'04'            ZWB?                          06280052
         BO    *+10                       YES, BRANCH                   06290052
         MVC   INSERT#1+35(03),BLANK128   NO, CLEAR THE DOC             06300052
         SPACE 1                                                        06310052
         MVC   INSERT#1+39(05),HISTNPFD   ASSUME PFD          DRK AUG07 06320071
         TM    46+88(R5),X'80'            NUMPROC(PFD)?       DRK AUG07 06330070
         BO    HISTMV21                   YES, BRANCH         DRK AUG07 06340070
         SPACE 1                                              DRK AUG07 06350070
         MVC   INSERT#1+39(05),HISTNMIG   ASSUME MIG          DRK AUG07 06360071
         TM    48+88(R5),X'80'            NUMPROC(MIG)?       DRK AUG07 06370070
         BO    HISTMV21                   YES, BRANCH         DRK AUG07 06380070
         MVC   INSERT#1+39(05),HISTNNPF   NO, THEN NOPFD      DRK AUG07 06390071
         SPACE 1                                              DRK AUG07 06400070
HISTMV21 DS    0H                                             DRK AUG07 06410070
         MVC   INSERT#1+45(05),HISTTSTD   ASSUME STD          DRK AUG07 06420071
         TM    47+88(R5),X'40'            TRUNC(STD)?         DRK AUG07 06430070
         BO    HISTMV22                   YES, BRANCH         DRK AUG07 06440070
         SPACE 1                                              DRK AUG07 06450070
         MVC   INSERT#1+45(05),HISTTBIN   ASSUME BIN          DRK AUG07 06460071
         TM    48+88(R5),X'08'            TRUNC(BIN)?         DRK AUG07 06470070
         BO    HISTMV22                   YES, BRANCH         DRK AUG07 06480070
         MVC   INSERT#1+45(05),HISTTOPT   NO, THEN (OPT)      DRK AUG07 06490071
         SPACE 1                                              DRK AUG07 06500070
HISTMV22 DS    0H                                             DRK AUG07 06510070
         SPACE 1                                                        06520052
*        LA    R1,1                       ASSUME RES          DRK MAY99 06530052
*        TM    46+88(R5),X'20'            RES?                DRK MAY99 06540052
*        BO    *+10+4                     YES, BRANCH         DRK MAY99 06550052
*        MVC   INSERT#1+51(03),BLANK128   NO, CLEAR THE DOC   DRK AUG07 06560070
*        LA    R1,2                       NORES               DRK MAY99 06570052
*        O     R1,MSGTEXT2                FLAG FOR LATER      DRK MAY99 06580052
*        ST    R1,MSGTEXT2                SAVE FOR LATER      DRK MAY99 06590052
         SPACE 1                                                        06600052
         TM    46+88(R5),X'40'            RENT?                         06610052
         BO    *+10                       YES, BRANCH                   06620052
         MVC   INSERT#1+55(04),BLANK128   NO, CLEAR THE DOC             06630052
         SPACE 1                                                        06640052
         TM    44+88(R5),X'04'            DYNAM?                        06650052
         BO    *+10                       YES, BRANCH                   06660052
         MVC   INSERT#1+60(05),BLANK128   NO, CLEAR THE DOC             06670052
         SPACE 1                                                        06680052
         MVC   INSERT#1+66(4),HISTC31     DATA 31 ADDRESSING            06690052
         TM    44+88(R5),X'20'            DATA 31?                      06700052
         BO    *+10                       YES, BRANCH                   06710052
         MVC   INSERT#1+66(04),BLANK128   NO, CLEAR THE DOC             06720052
         SPACE 1                                                        06730052
         M$MSG L260$1                                                   06740052
         B     HISTCOB1                                                 06750052
         SPACE 1                                                        06760052
HISTCOBZ DELETE EPLOC=DIRNAME                                           06770052
         TM    MSGTEXT2+3,2+1             MIXED RES AND NORES?          06780000
         BNO   HISTZAP$                   NO, BRANCH                    06790000
         M$MSG L503                       YES, ERROR MESSAGE            06800000
         B     HISTZAP$                                                 06810000
         SPACE 2                                                        06820000
HISTC31  DC    C'31  '                                                  06830000
HISTNPFD DC    C'(PFD)'                                       DRK AUG07 06840071
HISTNMIG DC    C'(MIG)'                                       DRK AUG07 06850071
HISTNNPF DC    C'NOPFD'                                       DRK AUG07 06860071
HISTTSTD DC    C'(STD)'                                       DRK AUG07 06870071
HISTTBIN DC    C'(BIN)'                                       DRK AUG07 06880071
HISTTOPT DC    C'(OPT)'                                       DRK AUG07 06890071
HISTCTR1 DC    C'5740CB'   COBOL VS, COBOL V4                 DRK MAY99 06900000
HISTCTR2 DC    C'566895'   COBOL II, COBOL/370, COBOL FOR MVS DRK MAY99 06910097
HISTCTR3 DC    C'5648A2'   COBOL FOR OS/390                   DRK MAY99 06920000
HISTCTR4 DC    C'5655G5'   ENTERPRISE COBOL FOR Z/OS V3       DRK JUN04 06930092
HISTCTR5 DC    C'5655S7'   ENTERPRISE COBOL FOR Z/OS V4       DRK SEP11 06940092
HISTCTR6 DC    C'5655W3'   ENTERPRISE COBOL FOR Z/OS V5       DRK JUN13 06950096
HISTCTR7 DC    C'5655EC'   ENTERPRISE COBOL FOR Z/OS V6       DRK MAY16 06960098
HISTLILB DC    C'ILB'      COBOL SUBROUTINE NAME                        06970093
HISTCHDR DC    C'CSECT    VER COUNT FLOW STATE TEST TRACE '             06980000
         DC    C'RES ENDJOB SYMD OBJ OPTIMIZE  '                        06990000
HISTCUND DC    C'-----    --- ----- ---- ----- ---- ----- '             07000000
         DC    C'--- ------ ---- --- --------  '                        07010000
HIST2HDR DC    C'CSECT    VER TEST SSRANG OPT FDUMP ZWB '               07020000
         DC    C'PFDSN TRUNC RES RENT DYNAM DATA  '                     07030000
HIST2UND DC    C'-----    --- ---- ------ --- ----- --- '               07040000
         DC    C'----- ----- --- ---- ----- ----  '                     07050000
HISTCVS  DC    C'VS '                                                   07060000
HISTCV4  DC    C'V4 '                                                   07070000
HISTCV2  DC    C'C2 '                                                   07080000
HISTCMV  DC    C'CEE'                                         DRK MAY99 07090000
         DS    0F                                                       07100000
HISTMASK DC    XL4'80000000'                                            07110000
HISTCANS DC    C'ANS4'                                                  07120000
HISTCVSR DC    C'VSR1'                                                  07130000
HISTCV2L DC    C' C2 '                                                  07140000
HISTCCEE DC    X'00',C'CEE'                                   DRK MAY99 07150000
HISTCOUT DC    CL8'SYSOUT'                                              07160000
HISTC370 DC    C'370'                                                   07170000
HISTCOPT DC    C'COBOL'                                                 07180000
HISTCAOP DC    C'CA-OPT'                                      DRK DEC02 07190057
HISTCCAP DC    C'CAPEX'                                                 07200050
HISTCC$D DC    C'CAP/DTECT'                                             07210000
HISTCO$D DC    C'OPT/DTECT'                                   DRK JUL04 07220057
DIRNOED  EQU   B'00001000'           NOT EDITABLE             DRK JAN08 07230075
*PFSTAT2 DC    CL72'SPF STATS:  VER.MOD  CREATED   LAST MODIFIED  SIZE  07240067
SPFSTAT2 DC    CL72'MEMBER      VER.MOD  CREATED   LAST MODIFIED  SIZE X07250066
                INIT   MOD   ID'                                        07260000
         EJECT                                                          07270000
*                                                                       07280000
*        FORMAT AMASPZAP IDR DATA ENTRIES                               07290000
*                                                                       07300000
HISTZAP$ LA    R3,#IDRPTR          SCAN IDR CHAIN                       07310000
         USING IDRENTRY,R3                                              07320000
         OI    FLAGSCC,F1IDR                                            07330000
         MVI   MTLEN,8                                                  07340000
         TM    #TRANOPT,X'80'+X'40'+X'20'  ENDJOB WITH RES AND NORES?   07350000
         BNO   HISTZAP                     NO, BRANCH                   07360000
         M$MSG L502                                                     07370000
         SPACE 1                                                        07380000
HISTZAP  ICM   R3,B'1111',IDRLINK  END OF ESD CHAIN?                    07390000
         BZ    HISTUSR$            YES, BRANCH                          07400000
         CLI   IDRTYPE,IDRZAP      AMASPZAP ENTRY?                      07410000
         BNE   HISTZAP             NO, BRANCH                           07420000
         SPACE 1                                                        07430000
         LA    R2,#ESDPTR          START OF ESD CHAIN                   07440000
         USING ESDENTRY,R2                                              07450000
         SPACE 1                                                        07460000
HISTZAP1 ICM   R2,B'1111',ESDLINK  END OF ESD CHAIN?                    07470000
         BZ    HISTZAP3            YES, BRANCH                          07480000
         SPACE 1                                                        07490000
         CLI   ESDTYPE,CODEPC      $PRIVATE ENTRY?                      07500000
         BE    HISTZAPP            YES, BRANCH                          07510000
         CLI   ESDTYPE,CODESD      CSECT ENTRY?                         07520000
         BNE   HISTZAP1            NO, SKIP THIS                        07530000
HISTZAPP CLC   ESDID,IDRESDID      REQUESTED IDR RECORD?                07540000
         BNE   HISTZAP1            NO, BRANCH                           07550000
         SPACE 1                                                        07560000
HISTZAP2 LA    R6,L061                                                  07570000
         BAS   R4,HISTHDR                                               07580000
         MVC   MSGTEXT1(136),MSGBL132                                   07590000
         SPACE 1                                                        07600000
         MVC   MSGTEXT1+4(L'ESDNAME),ESDNAME                            07610000
         MVC   MSGTEXT1+8+L'ESDNAME(L'DATEMASK),DATEMASK                07620000
         ED    MSGTEXT1+8+L'ESDNAME(L'DATEMASK),IDRDATE                 07630000
         AIF   ('&ISODT'  NE 'YES').NOISOH3                   DRK NOV01 07640046
         SPACE 1                                                        07650046
         MVC   DOUBLE(8),MSGTEXT1+16+1   MM/DD/YY             DRK NOV01 07660046
         ICM   R0,B'1100',DOUBLE+6       YY OF MM/DD/YY       DRK NOV01 07670046
         MVC   DOUBLE+6(2),DOUBLE+3      DD TO ../../DD       DRK NOV01 07680048
         MVC   DOUBLE+3(2),DOUBLE        MM TO ../MM/DD       DRK NOV01 07690048
         STCM  R0,B'1100',DOUBLE         YY TO YY/MM/DD       DRK NOV01 07700048
         OI    DOUBLE+3,X'F0'            LEADIN BLANK IN MM   DRK NOV01 07710046
         MVC   MSGTEXT1+16+1(8),DOUBLE   YY/MM/DD             DRK NOV01 07720046
         SPACE 1                                                        07730046
.NOISOH3 ANOP                                                 DRK NOV01 07740046
         MVC   MSGTEXT1+12+L'ESDNAME+L'DATEMASK(L'IDRZDATA),IDRZDATA    07750000
         M$ERRST MSGTEXT1                                               07760000
         B     HISTZAP             NEXT IDR DATA RECORD THIS ESD ENTRY  07770000
         SPACE 1                                                        07780000
HISTZAP3 CLI   #MODLEN,0           ANY MODULE NAME SELECTION?           07790000
         BH    HISTZAP             YES, CANNOT DETERMINE MISSING ESD'S  07800000
         LA    R2,HISTZAP4-4       MESSAGE IF CSECT NAME UNKNOWN        07810000
         B     HISTZAP2            NEXT IDR DATA RECORD THIS ESD ENTRY  07820000
HISTZAP4 DC    C'?UNKNOWN'         UNKNOWN CSECT NAME                   07830000
         EJECT                                                          07840000
*                                                                       07850000
*        FORMAT THE USER-SUPPLIED IDR DATA RECORDS                      07860000
*                                                                       07870000
         SPACE 1                                                        07880000
HISTUSR$ LA    R3,#IDRPTR                                               07890000
         OI    FLAGSCC,F1IDR                                            07900000
         SPACE 1                                                        07910000
HISTUSR  ICM   R3,B'1111',IDRLINK  END OF IDR CHAIN?                    07920000
         BZ    HISTLKD$            YES, BRANCH                          07930000
         CLI   IDRTYPE,IDRUSER     USER IDR DATA RECORD?                07940000
         BNE   HISTUSR             NO, BRANCH                           07950000
         SPACE 1                                                        07960000
         LA    R2,#ESDPTR          ADDRESS OF ESD CHAIN                 07970000
         SPACE 1                                                        07980000
HISTUSR1 ICM   R2,B'1111',ESDLINK  END OF ESD CHAIN?                    07990000
         BZ    HISTUSR             YES, BRANCH                          08000000
         SPACE 1                                                        08010000
         CLI   ESDTYPE,CODEPC      $PRIVATE ENTRY?                      08020000
         BE    HISTUSRP            YES, BRANCH                          08030000
         CLI   ESDTYPE,CODESD      CSECT ENTRY?                         08040000
         BNE   HISTUSR1            NO, BRANCH                           08050000
HISTUSRP CLC   ESDID,IDRESDID      WANTED ESD RECORD?                   08060000
         BNE   HISTUSR1            NO, BRANCH                           08070000
         SPACE 1                                                        08080000
         LA    R6,L062                                                  08090000
         BAS   R4,HISTHDR                                               08100000
         MVC   MSGTEXT1(136),MSGBL132                                   08110000
         MVC   MSGTEXT1+4(L'ESDNAME),ESDNAME                            08120000
         MVC   MSGTEXT1+8+L'ESDNAME(L'DATEMASK),DATEMASK                08130000
         ED    MSGTEXT1+8+L'ESDNAME(L'DATEMASK),IDRDATE                 08140000
         AIF   ('&ISODT'  NE 'YES').NOISOH4                   DRK NOV01 08150046
         SPACE 1                                                        08160046
         MVC   DOUBLE(8),MSGTEXT1+16+1   MM/DD/YY             DRK NOV01 08170046
         ICM   R0,B'1100',DOUBLE+6       YY OF MM/DD/YY       DRK NOV01 08180046
         MVC   DOUBLE+6(2),DOUBLE+3      DD TO ../../DD       DRK NOV01 08190048
         MVC   DOUBLE+3(2),DOUBLE        MM TO ../MM/DD       DRK NOV01 08200048
         STCM  R0,B'1100',DOUBLE         YY TO YY/MM/DD       DRK NOV01 08210048
         OI    DOUBLE+3,X'F0'            LEADIN BLANK IN MM   DRK NOV01 08220046
         MVC   MSGTEXT1+16+1(8),DOUBLE   YY/MM/DD             DRK NOV01 08230046
         SPACE 1                                                        08240046
.NOISOH4 ANOP                                                 DRK NOV01 08250046
         SR    R1,R1                                                    08260000
         ICM   R1,B'0001',IDRLDATA ZERO BYTES?                          08270000
         BZ    HISTUSRS            YES, SKIP THE MOVE (LENGTH ZERO)     08280000
         SPACE 1                                                        08290000
         MVC   MSGTEXT1+12+L'ESDNAME+L'DATEMASK(*-*),IDRDATA  <<EXEC>>  08300000
         EX    R1,*-6                                                   08310000
         SPACE 1                                                        08320000
HISTUSRS M$ERRST MSGTEXT1                                               08330000
         B     HISTUSR1                                                 08340000
         DROP  R2,R3                                                    08350000
         EJECT                                                          08360000
*                                                                       08370000
*        FORMAT THE LINKAGE-EDITOR IDR DATA RECORD                      08380000
*                                                                       08390000
HISTLKD$ CLI   #LKEDOPT,X'01'           "LKED" REQUESTED?               08400000
         BNE   NEWCMD                   NO, BRANCH                      08410000
         SR    R1,R1                                                    08420000
         ICM   R1,B'0001',#LKEDLEN      ANY LKED NAME CHECK?            08430000
         BZ    HISTLKDG                 NO, BRANCH                      08440000
         BCTR  R1,0                     MACHINE LENGTH                  08450000
         CLC   #LKEDTXT(*-*),LKEDNAME   <<EXECUTED>>                    08460000
         EX    R1,*-6                   THIS LINKAGE EDITOR?            08470000
         BNE   NEWCMD                   NO, BRANCH                      08480000
HISTLKDG SR    R6,R6                                                    08490000
         BAS   R4,HISTHDR                                               08500000
         MVC   INSERT#1-1(9),DATEMASK                                   08510044
         ED    INSERT#1-1(9),LKEDDATE                                   08520044
         AIF   ('&ISODT'  NE 'YES').NOISOH5                   DRK NOV01 08530046
         SPACE 1                                                        08540046
         MVC   DOUBLE(8),INSERT#1-1+1    MM/DD/YY             DRK NOV01 08550046
         ICM   R0,B'1100',DOUBLE+6       YY OF MM/DD/YY       DRK NOV01 08560046
         MVC   DOUBLE+6(2),DOUBLE+3      DD TO ../../DD       DRK NOV01 08570048
         MVC   DOUBLE+3(2),DOUBLE        MM TO ../MM/DD       DRK NOV01 08580048
         STCM  R0,B'1100',DOUBLE         YY TO YY/MM/DD       DRK NOV01 08590048
         OI    DOUBLE+3,X'F0'            LEADIN BLANK IN MM   DRK NOV01 08600046
         MVC   INSERT#1-1+1(8),DOUBLE    YY/MM/DD             DRK NOV01 08610046
         SPACE 1                                                        08620046
.NOISOH5 ANOP                                                 DRK NOV01 08630046
         MVI   MTLEN+4,18+14            LENGTH OF THIS INSERT           08640000
         MVC   INSERT#2(10),LKEDNAME                                    08650000
         MVC   INSERT#2+10(2),=CL2' V'                                  08660000
         UNPK  INSERT#2+10+2(3),LKEDVVMM(2)                             08670000
         MVC   INSERT#2+10+2+2(2),=CL2' M'                              08680000
         UNPK  INSERT#2+10+2+2+2(3),LKEDVVMM+1(2)                       08690000
         MVI   INSERT#2+10+2+2+2+2,C' '                       DRK JUN99 08700037
         SPACE 1                                                        08710000
         CLC   LKEDTIME(4),=X'0000000F' ANY LINK EDIT TIME?   DRK JUL99 08720038
         BE    *+4+6+6+6                NO                    DRK MAY99 08730000
         MVC   INSERT#2+10+2+2+2+2(4),=CL4'  AT'              DRK MAY99 08740000
         MVC   INSERT#2+10+2+2+2+2+4(10),LKDMASK1             DRK MAY99 08750000
         ED    INSERT#2+10+2+2+2+2+4(10),LKEDTIME             DRK MAY99 08760000
         SPACE 1                                                        08770000
         M$MSG L064$2                         LINKAGE EDIT MESSAGE      08780000
         MVI   MTLEN+4,8                      LENGTH OF STANDARD INSERT 08790000
         B     NEWCMD                                                   08800000
LKDMASK1 DC    X'402120207A20207A2020'     HH:MM:SS           DRK MAY99 08810000
         TITLE 'P D S  --  PDS HISTORY IDR SCAN SUBROUTINE   09/28/88'  08820000
*                                                                       08830000
*        IDR SCAN SUBROUTINE                                            08840000
*                                                                       08850000
         SPACE 3                                                        08860000
READIDR  STM   R14,R12,ESDIDRSV    SAVE REGISTERS                       08870000
         LR    R8,R15              BASE FOR THIS SUBROUTINE             08880000
         USING READIDR,R8                                               08890000
         NI    FLAGSCC,255-FIDR    IDR DATA DOES NOT EXIST YET          08900099
         TM    DS1SMSFG,DS1PDSE    PDSE DATASET?              DRK AUG05 08910063
         AIF   ('&MVSLEV' LT 'MVS510').NOBAPI1                 GP SEP05 08920065
         BO    IDRBAPI0            YES, NEED BINDER API        GP SEP05 08930065
         AGO   .BAPIOK1                                        GP SEP05 08940065
.NOBAPI1 ANOP  ,                                               GP SEP05 08950065
         BO    SORTIDRZ            YES, LEAVE                 DRK AUG05 08960065
.BAPIOK1 ANOP  ,                                               GP SEP05 08970065
         LA    R6,IDRNORML         BRANCH ADDRESS IF NOT CONTINUED      08980000
         LA    R2,#IDRPTR          BASE FOR IDR LIST                    08990000
         USING IDRENTRY,R2                                              09000000
         MVC   STARTTR(3),DIRTTR   FIRST TTR                            09010000
         SPACE 2                                                        09020000
IDREXCP  L     R15,=V(EXCP)                                             09030000
         BASR  R14,R15                                                  09040000
         B     *+4(R15)            PROCESS RETURN CODE                  09050000
         B     IDREXCP1              00 - GOOD READ                     09060000
         B     LASTIDR               04 - END OF MEMBER                 09070000
         B     LASTIDR               08 - END OF DATA SET               09080000
         B     NEWCMD                12 - I/O ERROR                     09090000
         SPACE 1                                                        09100000
IDREXCP1 LR    R15,R0              START OF RECORD                      09110000
         TM    0(R15),X'50'        TEST SYM OR SCATTER RECORD?          09120000
         BM    IDREXCP             YES, SKIP IT                         09130000
         SPACE 1                                                        09140000
         CLI   0(R15),X'20'        CESD RECORD?                         09150000
         BE    IDREXCP             YES, SKIP                            09160000
         SPACE 1                                                        09170000
         CLI   0(R15),X'80'        IDR RECORD?                          09180000
         BNE   LASTIDR             NO, BRANCH                           09190000
         SPACE 1                                                        09200000
         LA    R3,3(,R15)          START OF IDR DATA                    09210000
         SR    R5,R5                                                    09220000
         IC    R5,1(,R15)          BYTE COUNT THIS RECORD               09230000
         LA    R5,0(R5,R15)        END OF BUFFER ADDRESS                09240000
         BR    R6                  BRANCH TO IDRNORML OR AS CONTINUED   09250000
         SPACE 2                                                        09260000
IDRNORML TM    2(R15),IDRLKED      LINKAGE EDITOR IDR RECORD?           09270000
         BO    LKEDIDR             YES, BRANCH                          09280000
         TM    2(R15),IDRTRAN      TRANSLATOR IDR RECORD?               09290000
         BO    TRANIDR             YES, BRANCH                          09300000
         TM    2(R15),IDRZAP       AMASPZAP IDR RECORD?                 09310000
         BO    ZAPIDR              YES, BRANCH                          09320000
         TM    2(R15),IDRUSER      USER-SUPPLIED IDR RECORD?            09330000
         BNO   NEXTIDR             NO, NEXT RECORD                      09340000
         EJECT                                                          09350000
*  USER-SUPPLIED IDR RECORDS:                                           09360000
* --  -- --+ --  --  --  -- -+ --  --  --  -- + --  --  --  --  -- ---* 09370000
*   0 - 1  |  2 - 4          |  5             |  6 - 6+COUNT          * 09380000
*   ESDID  |  IDENTIFY DATE  |  COUNT (0-40)  |  IDRDATA              * 09390000
* --  -- --+ --  --  --  -- -+ --  --  --  -- + --  --  --  --  -- ---* 09400000
         SPACE 1                                                        09410000
USERIDR  CLI   #USEROPT,0          "USERDATA"?                          09420000
         BE    NEXTIDR             NO, BRANCH                           09430000
         BAS   R14,GETIDR          GET A NEW IDR RECORD                 09440000
         ST    R1,IDRLINK                                               09450000
         LR    R2,R1               ADDRESS OF NEW RECORD                09460000
         SPACE 2                                                        09470000
         LR    R4,R5                                                    09480000
         SR    R4,R3               MACHINE LENGTH MOVED                 09490000
         CH    R4,=H'5'            CONTINUED USER HEADER?               09500000
         BNL   USER20              NO, BRANCH                           09510000
         MVC   IDRUPREF(*-*),0(R3) <<EXECUTED>>                         09520000
         EX    R4,*-6              MOVE IN DATA                         09530000
         BAS   R6,IDRCONT          GET THE CONTINUED RECORD AND RETURN  09540000
         SPACE 1                                                        09550000
         LA    R14,IDRUPREF+1(R4)  TARGET OF MOVE                       09560000
         LA    R15,5-1(,R3)        LENGTH BYTE ADDRESS-1 IF NOT SPLIT   09570000
         SR    R15,R4              AMOUNT WE ALREADY HAVE               09580000
         SR    R1,R1                                                    09590000
         IC    R1,0(,R15)          LENGTH BYTE                          09600000
         LA    R15,6-2(,R1)        MACHINE LENGTH OF RECORD -1          09610000
         SR    R15,R4              MACHINE LENGTH TO MOVE               09620000
         MVC   0(*-*,R14),0(R3)    <<EXECUTED>>                         09630000
         EX    R15,*-6             MOVE IT INTO THE RECORD              09640000
         B     USER30                                                   09650000
         SPACE 2                                                        09660000
USER20   SR    R15,R15                                                  09670000
         IC    R15,5(,R3)          LENGTH OF USER DATA AREA             09680000
         LA    R15,5(,R15)         MACHINE LENGTH FOR MOVE              09690000
         MVC   IDRUPREF(*-*),0(R3) <<EXECUTED>>                         09700000
         EX    R15,*-6             MOVE IT INTO THE RECORD              09710000
         SPACE 1                                                        09720000
USER30   LA    R4,1(,R15)          ACTUAL RECORD LENGTH                 09730000
         MVI   IDRTYPE,IDRUSER     USER IDR DATA IDENTIFIER             09740000
         MVC   IDRESDID,IDRUPREF   ADD THE CSECT ID                     09750000
         LA    R1,IDRUPREF+2       YYDDD IDR RECORD CREATED             09760000
         LA    R15,IDRDATE                                              09770000
         BAS   R14,CONVDATE        CONVERT TO MMDDYY FORMAT             09780000
         SR    R15,R15                                                  09790000
         IC    R15,IDRUPREF+5      LENGTH OF USER DATA AREA             09800000
         BCTR  R15,0                                                    09810000
         STC   R15,IDRLDATA                                             09820000
         SPACE 2                                                        09830000
USER40   BXLE  R3,R4,USERIDR                                            09840000
         EJECT                                                          09850000
         SR    R3,R5                                                    09860000
         BCTR  R3,0                ACTUAL REMAINING LENGTH              09870000
         LTR   R4,R3               CONTINUED DATA PORTION?              09880000
         BNP   NEXTIDR             NO, BRANCH                           09890000
         BAS   R6,IDRCONT          GET THE CONTINUED RECORD AND RETURN  09900000
         SPACE 1                                                        09910000
         SR    R14,R14                                                  09920000
         IC    R14,IDRLDATA        ORIGINAL LENGTH -1                   09930000
         LA    R14,IDRDATA+1(R14)  END OF DATA                          09940000
         SR    R14,R4              START POSITION FOR MOVE              09950000
         BCTR  R4,0                MACHINE LENGTH FOR MOVE              09960000
         MVC   0(*-*,R14),0(R3)    <<EXECUTED>>                         09970000
         EX    R4,*-6              MOVE IN THE REMAINDER                09980000
         LA    R4,1(,R4)           ACTUAL LENGTH OF LAST PORTION        09990000
         B     USER40                                                   10000000
         SPACE 4                                                        10010000
*  AMASPZAP IDR RECORDS:                                                10020000
* --  -- -+ --  --  -- + --  --  --  --  --  --  --  --  --  --  -- --* 10030000
*  0 - 1  |  2 - 4     |  5 - 12                                      * 10040000
*  ESDID  |  ZAP DATE  |  IDRDATA OR USER IDENTIFICATION              * 10050000
* --  -- -+ --  --  -- + --  --  --  --  --  --  --  --  --  --  -- --* 10060000
         SPACE 1                                                        10070000
ZAPIDR   CLI   #ZAPOPT,X'01'       "ZAP"?                               10080000
         BNE   NEXTIDR             NO, BRANCH                           10090000
         SR    R4,R4                                                    10100000
         NI    0(R3),X'3F'                                              10110000
         IC    R4,0(R3)            GET COUNT OF AMASPZAP ENTRIES        10120000
         LA    R3,1(R3)                                                 10130000
         LA    R4,1(R4)            JUMP COUNT FOR LOOP                  10140000
         B     ZAPIDR1                                                  10150000
         SPACE 2                                                        10160000
ZAPIDR2  BAS   R14,GETIDR                                               10170000
         ST    R1,IDRLINK                                               10180000
         LR    R2,R1                                                    10190000
         MVC   IDRESDID,0(R3)      MOVE ESDID TO IDR RECORD             10200000
         LA    R1,2(R3)            ADDRESS OF DATE OF RECORD            10210000
         LA    R15,IDRDATE                                              10220000
         BAS   R14,CONVDATE        CONVERT TO MMDDYY FORMAT             10230000
         SPACE 1                                                        10240000
         MVC   IDRZDATA,5(R3)      MOVE DATA TO IDR RECORD     GP SEP05 10250065
         MVI   IDRLDATA,8          SET LENGTH FOR COMPATIBILITY         10260000
         MVI   IDRTYPE,IDRZAP      INDICATE AMASPZAP ENTRY              10270000
         LA    R3,13(R3)           JUMP DATA ADDRESS                    10280000
         SPACE 1                                                        10290000
ZAPIDR1  BCT   R4,ZAPIDR2          IF ANOTHER ENTRY THIS RECORD         10300000
         B     NEXTIDR             READ NEXT IDR RECORD                 10310000
         EJECT                                                          10320000
*  TRANSLATOR IDR RECORDS:                                              10330000
* --  -- + --  -- + --  --  --  -- ---+ --  --  --  --  --  --  -- +--- 10340000
*  0 - 1 |  2 - 3 |  N - N+1          |  0    (0 IS 1 TRANSLATOR)  |    10350000
*  ESDID |  ...   |  X'80'+LAST ESDID |  FLAG (1 IS 2 TRANSLATORS) |    10360000
* --  -- + --  -- + --  --  --  -- ---+ --  --  --  --  --  --  -- +--- 10370000
*                                                                       10380000
*   --  --  -- --+ --  -- ---+ --  --  -- -+ --  --  --  --  --  -- --* 10390000
*    1 - 10      |  11 - 12  |  13 -15     |  16 - 30                 * 10400000
*    TRANSLATOR  |  VVMM     |  TRANS DATE |  OPTIONAL, SAME AS 1-15  * 10410000
*   --  --  -- --+ --  -- ---+ --  --  -- -+ --  --  --  --  --  -- --* 10420000
         SPACE 1                                                        10430000
TRANIDR  CLI   #TRANOPT,0          NOTRAN?                              10440000
         BE    NEXTIDR             YES, BRANCH                          10450000
         LR    R4,R5                                                    10460000
         SR    R4,R3               MACHINE LENGTH OK?                   10470000
         BM    NEXTIDR             NO, DONE WITH THIS RECORD            10480000
         BAS   R14,GETIDR                                               10490000
         ST    R1,IDRLINK          CHAIN ON A                           10500000
         LR    R2,R1                         NEW IDR RECORD             10510000
         SPACE 1                                                        10520000
         MVI   IDRTYPE,IDRTRAN     TRANSLATOR TYPE RECORD               10530000
         LTR   R4,R4               MACHINE LENGTH OK?                   10540000
         BP    TRAN20              YES, NOT SPLIT                       10550000
         MVC   IDRESDID(1),0(R3)   NO, ONLY ONE ESDID BYTE              10560000
         BAS   R6,IDRCONT          GET THE CONTINUED RECORD AND RETURN  10570000
         SPACE 1                                                        10580000
         MVC   IDRESDID+1(1),0(R3) SECOND BYTE OF ESDID                 10590000
         BCTR  R3,0                BACK UP THE INPUT POINTER BY ONE     10600000
         B     TRAN30                                                   10610000
         SPACE 2                                                        10620000
TRAN20   MVC   IDRESDID(2),0(R3)   ESDID FIELD                          10630000
         SPACE 1                                                        10640000
TRAN30   MVC   IDRUPREF(2),IDRESDID  ORIGINAL ESDID                     10650000
         NI    IDRESDID,FF-X'80'   TURN OFF THE HIGH-ORDER BIT          10660000
         TM    IDRUPREF,X'80'      LAST ESDID?                          10670000
         BO    TRAN50              YES, BRANCH                          10680000
         LA    R4,2                ESDID WIDTH                          10690000
         BXLE  R3,R4,TRANIDR       CONTINUE FOR ALL ESDID'S             10700000
         B     NEXTIDR             GET THE NEXT RECORD                  10710000
         SPACE 1                                                        10720000
TRAN50   LA    R3,2(,R3)                                                10730000
         LR    R4,R5                                                    10740000
         SR    R4,R3               FLAG BYTE INPUT?                     10750000
         BNM   TRAN60              YES, BRANCH                          10760000
         BAS   R6,IDRCONT          GET THE CONTINUED RECORD AND RETURN  10770000
         SPACE 1                                                        10780000
TRAN60   LA    R1,14               ASSUME ONE TRANSLATOR                10790000
         CLI   0(R3),0             CORRECT?                             10800000
         BE    *+8                 YES, BRANCH                          10810000
         LA    R1,29               NO, TWO TRANSLATORS                  10820000
         MVC   IDRTDATA(30),1(R3)  MOVE IN THE MAXIMUM LENGTH           10830000
         STC   R1,IDRLDATA         MACHINE LENGTH                       10840000
         LA    R4,2(,R1)           ACTUAL SEGMENT LENGTH                10850000
TRAN70   BXLE  R3,R4,TRAN80                                             10860000
         EJECT                                                          10870000
         LR    R4,R3                                                    10880000
         SR    R4,R5               BYTES LEFT +1                        10890000
         S     R4,=F'1'            ANY ACTUAL REMAINING BYTES?          10900000
         BNP   TRAN80              NO, BRANCH                           10910000
         BAS   R6,IDRCONT          GET THE CONTINUED RECORD AND RETURN  10920000
         SPACE 1                                                        10930000
         SR    R14,R14                                                  10940000
         IC    R14,IDRLDATA        ORIGINAL LENGTH -1                   10950000
         LA    R14,IDRTDATA+1(R14) END OF DATA                          10960000
         SR    R14,R4              START POSITION FOR MOVE              10970000
         BCTR  R4,0                MACHINE LENGTH FOR MOVE              10980000
         MVC   0(*-*,R14),0(R3)    <<EXECUTED>>                         10990000
         EX    R4,*-6              MOVE IN THE REMAINDER                11000000
         LA    R3,1(R3,R4)         POSITION FOR THE NEXT SEGMENT        11010000
         SPACE 2                                                        11020000
TRAN80   LA    R1,IDRTDATA+12      ADDRESS OF CREATION YYDDD            11030000
         LA    R15,IDRDATE                                              11040000
         BAS   R14,CONVDATE        CONVERT TO MMDDYY FORMAT             11050000
         LA    R1,#IDRPTR          SCAN IDR CHAIN                       11060000
         SPACE 1                                                        11070000
TRAN90   ICM   R1,B'1111',IDRLINK-IDRENTRY(R1)                          11080000
         BZ    TRANIDR                        DONE, BRANCH              11090000
         CLI   IDRTYPE-IDRENTRY(R1),IDRTRAN   TRANSLATOR TYPE?          11100000
         BNE   TRAN90                         NO, BRANCH                11110000
         CLI   IDRDATE-IDRENTRY(R1),0         ANY DATE YET?             11120000
         BNE   TRAN90                         YES, BRANCH               11130000
         MVC   IDRDATE-IDRENTRY(3+6+1+30,R1),IDRDATE                    11140000
         B     TRAN90                                                   11150000
         DROP  R2                                                       11160000
         SPACE 3                                                        11170000
*  LINKAGE EDITOR IDR RECORDS:                             APAR OW29593 11180000
*                                                             |         11190000
*                                                             V         11200000
* --  --  --  --  -- ---+ --  -- ---+ --  --  --  --  -- +--  --  -- -* 11210000
*  0 - 9                |  10 - 11  |  12 - 14           |  15-18     * 11220000
*  LINKAGE EDITOR NAME  |  VVMM     |  LINKAGE EDIT DATE |  LKED TIME * 11230000
* --  --  --  --  -- ---+ --  -- ---+ --  --  --  --  -- +--  --  -- -* 11240000
         SPACE 1                                                        11250000
LKEDIDR  OI    FLAGSCC,FIDR                                             11260000
         MVC   LKEDTIME(4),=X'0000000F' ASSUME NO TIME        DRK JUL99 11270038
         CLI   1(R15),X'15'        LKED TIME PRESENT?         DRK MAY99 11280000
         BL    *+4+6               NO                         DRK MAY99 11290000
         MVC   LKEDTIME(4),15(R3)  YES                        DRK MAY99 11300000
         LA    R1,12(R3)           ADDRESS OF DATE                      11310000
         LA    R15,LKEDDATE                                             11320000
         BAS   R14,CONVDATE        CONVERT TO MMDDYY FORMAT             11330000
         MVC   LKEDNAME(10),0(R3)  LINKAGE EDITOR NAME                  11340000
         MVC   LKEDVVMM(2),10(R3)  VV.MM IN HEX                         11350000
         SPACE 2                                                        11360000
NEXTIDR  LA    R6,IDRNORML         NOT A CONTINUED RECORD               11370000
         SPACE 1                                                        11380000
IDRCONT  B     IDREXCP             CONTINUED RECORD                     11390000
         EJECT                                                          11400000
LASTIDR  MVC   RLDCOUNT(1),3(R15)    SAVE THE FIRST RLD/CONTROL AMOUNT  11410000
         OC    #ZAPLEN(3),#ZAPLEN    ANY IDR FILTERING?                 11420000
         BZ    LASTIDRZ              NO, BRANCH                         11430000
         SPACE 2                                                        11440000
         USING IDRENTRY,R3                                              11450000
         SR    R4,R4                                                    11460000
         LA    R3,#IDRPTR            SCAN IDR CHAIN                     11470000
IDRFIL10 LR    R2,R3                 PREVIOUS ENTRY                     11480000
         ICM   R3,B'0111',IDRLINK+1  CURRENT ENTRY?                     11490000
         BZ    LASTIDRZ              NO, BRANCH                         11500000
         ICM   R4,B'0111',IDRLINK+1  NEXT ENTRY                         11510000
         SPACE 2                                                        11520000
         SR    R15,R15               COMPARE STRING LENGTH              11530000
         CLI   IDRTYPE,IDRTRAN       IDR TYPE:                          11540000
         BH    IDRFIL40                USER, BRANCH                     11550000
         BL    IDRFIL30                ZAP, BRANCH                      11560000
         LA    R1,#TRANTXT             TRANSLATOR                       11570000
         SPACE 1                                                        11580000
         ICM   R15,B'0001',#TRANLEN  ANY TRANSLATOR FILTERING?          11590000
         BZ    IDRFIL10              NO, BRANCH                         11600000
         CLI   IDRLDATA,15           ONE TRANSLATOR ONLY?               11610000
         BL    IDRFIL60              YES, BRANCH                        11620000
         BCTR  R15,0                 COMPARE MACHINE LENGTH             11630000
         CLC   IDRTDATA+15(*-*),#TRANTXT  <<EXECUTED>>                  11640000
         EX    R15,*-6                    THIS PL/S TRANSLATOR?         11650000
         BE    IDRFIL10                   YES, BRANCH                   11660000
         IC    R15,#TRANLEN          COMPARE STRING LENGTH (AGAIN)      11670000
         B     IDRFIL60              CHECK THE FIRST TRANSLATOR TOO     11680000
         SPACE 2                                                        11690000
IDRFIL30 IC    R15,#ZAPLEN           ZAP IDR RECORD                     11700000
         LA    R1,#ZAPTXT                                               11710000
         B     IDRFIL60                                                 11720000
         SPACE 2                                                        11730000
IDRFIL40 IC    R15,#USERLEN          USER IDR RECORD                    11740000
         LA    R1,#USERTXT                                              11750000
         SPACE 2                                                        11760000
IDRFIL60 S     R15,=F'1'             VALID MACHINE LENGTH?              11770000
         BM    IDRFIL10              NO, BRANCH                         11780000
         SPACE 1                                                        11790000
         CLC   IDRDATA(*-*),0(R1)    <<EXECUTED>>                       11800000
         EX    R15,*-6               PARTIAL NAME MATCH?                11810000
         BE    IDRFIL10              YES, BRANCH                        11820000
         SPACE 1                                                        11830000
         LR    R3,R2                 NO, UNCHAIN THE                    11840000
         ST    R4,IDRLINK                           CURRENT ENTRY       11850000
         B     IDRFIL10                                                 11860000
         EJECT                                                          11870000
LASTIDRZ LA    R3,#IDRPTR          PERFORM AN IDR RECORD SORT           11880000
         SPACE 2                                                        11890000
SORTIDR  ICM   R3,B'1111',IDRLINK                                       11900000
         BZ    SORTIDRZ                                                 11910000
         LR    R1,R3                                                    11920000
         SPACE 1                                                        11930000
SORTIDR2 ICM   R1,B'1111',IDRLINK-IDRENTRY(R1)    GET THE NEXT ENTRY    11940000
         BZ    SORTIDR                                                  11950000
         SPACE 1                                                        11960000
         SR    R14,R14                    CURRENT             Y2K NOV99 11970042
         SR    R15,R15                    NEXT                Y2K NOV99 11980042
         CLI   IDRDATE+2,X'&WIN19XX'      < 19XX WINDOW?      Y2K NOV99 11990042
         BNL   *+4+4                      NO,  THEN 19XX      Y2K NOV99 12000041
         ICM   R14,B'0001',=X'01'         YES, THEN 20XX      Y2K NOV99 12010042
         CLI   IDRDATE-IDRENTRY+2(R1),X'&WIN19XX' < 19XX?     Y2K NOV99 12020042
         BNL   *+4+4                      NO,  THEN 19XX      Y2K NOV99 12030042
         ICM   R15,B'0001',=X'01'         YES, THEN 20XX      Y2K NOV99 12040042
*        SORT BY DATE (DESCENDING ORDER):  CYYMMDD            Y2K NOV99 12050043
         CLR   R14,R15                            C:C         Y2K NOV99 12060042
         BH    SORTIDR2                           HIGH - NO SWITCH      12070000
         BL    SORTIDR3                           LOW  - SWITCH         12080042
         ICM   R0,B'1110',IDRDATE                 MMDDYY      Y2K NOV99 12090043
         CLM   R0,B'0010',IDRDATE-IDRENTRY+2(R1)  YY:YY       Y2K NOV99 12100041
         BH    SORTIDR2                           HIGH - NO SWITCH      12110041
         BL    SORTIDR3                           LOW  - SWITCH         12120042
         CLM   R0,B'1000',IDRDATE-IDRENTRY+0(R1)  MM:MM       Y2K NOV99 12130041
         BH    SORTIDR2                           HIGH - NO SWITCH      12140000
         BL    SORTIDR3                           LOW  - SWITCH         12150042
         CLM   R0,B'0100',IDRDATE-IDRENTRY+1(R1)  DD:DD       Y2K NOV99 12160041
         BNL   SORTIDR2                           HIGH/EQUAL - BRANCH   12170000
         SPACE 1                                                        12180000
SORTIDR3 XC    IDRSTART(LENIDR1),IDRSTART-IDRENTRY(R1)                  12190000
         XC    IDRSTART-IDRENTRY(LENIDR1,R1),IDRSTART                   12200000
         XC    IDRSTART(LENIDR1),IDRSTART-IDRENTRY(R1)                  12210000
         B     SORTIDR2                                                 12220000
         SPACE 1                                                        12230000
SORTIDRZ LM    R14,R12,ESDIDRSV    RESTORE REGISTERS                    12240000
         TM    FLAGSCC,FIDR        ANY IDR RECORDS?                     12250000
         BZR   R14                 NO, RETURN AT +0                     12260000
         B     4(,R14)             YES, RETURN AT +4                    12270000
         DROP  R3                                                       12280000
         SPACE 2                                                        12290000
GETIDR   CLC   ##SUBCOM(8),$ATTL     ATTRIB SUBCOMMAND?                 12300000
         BE    NEXTIDR               YES, IGNORE THE RECORD             12310000
         L     R0,=A(IF)             START OF IF SUBCOMMAND             12320000
         CLM   R0,B'0111',##ADRCMD+1 REALLY IF SUBCOMMAND?              12330000
         BE    GETIDRM               YES, BRANCH                        12340000
         CLC   ##SUBCOM(8),$MML      MEMLIST SUBCOMMAND?                12350000
         BE    NEXTIDR               YES, IGNORE THE RECORD             12360000
         CLC   ##SUBCOM(8),$ML       ML SUBCOMMAND?                     12370000
         BE    NEXTIDR               YES, IGNORE THE RECORD             12380000
GETIDRM  MVI   SUBPOOLT,21                                              12390000
         LA    R0,LENIDR                                                12400000
         ICM   R0,B'1000',SUBPOOLT   SUBPOOL 21                         12410000
         GETMAIN R,LV=(0)                                               12420000
         XC    0(LENIDR,R1),0(R1)                                       12430000
         OI    FLAGSCC,FIDR          IDR DATA EXISTS                    12440000
         BR    R14                                                      12450000
*HISTL450 DC    H'450'                                                  12460047
*HISTLX07 DC    X'0700'                                                 12470047
         AIF   ('&MVSLEV' LT 'MVS510').NOBAPI2                 GP SEP05 12480065
IDRBAPI0 L     R15,CVTPTR(,R0)                                 GP SEP05 12490065
         CLI   CVTDCB-CVT(R15),X'9B'                           GP SEP05 12500065
         BNE   SORTIDRZ              OS IS TOO OLD FOR THIS    GP SEP05 12510065
         TM    CVTOSLV1-CVT(R15),CVTH5510  ARBITRARY TEST      GP SEP05 12520065
         BNO   SORTIDRZ              OS IS TOO OLD FOR THIS    GP SEP05 12530065
         LA    R0,1                                            GP SEP05 12540065
         SLL   R0,31                 GET A HIGH BIT            GP SEP05 12550065
         LA    R15,IDRBAPI2          SET ADDRESS               GP SEP05 12560065
         OR    R15,R0                SET AMODE=31 FOR API      GP SEP05 12570065
         BSM   0,R15                 SET 31-BIT ADDRESSING     GP SEP05 12580065
IDRBAPI2 BAS   R14,IDRBAPI4                                    GP SEP05 12590065
         LA    R15,LASTIDR                                     GP SEP05 12600065
         BSM   0,R15                 SET 24-BIT ADDRESSING     GP SEP05 12610065
         SPACE 1                                               GP SEP05 12620065
IDRBAPI4 BAKR  R14,0                 SAVE STATUS               GP SEP05 12630065
         LHI   R0,IDRAPIWL                                     GP APR18 12640099
         GETMAIN RU,LV=(0),LOC=(31,64),SP=21                   GP SEP05 12650065
         LR    R13,R1                                          GP SEP05 12660065
         LR    R0,R1                                           GP SEP05 12670065
         LHI   R1,IDRAPIWL                                     GP APR18 12680099
         SR    R15,R15                                         GP SEP05 12690065
         MVCL  R0,R14                ZERO NEW STORAGE          GP SEP05 12700065
         USING IDRAPIWK,R13                                    GP SEP05 12710065
         MVC   4(4,R13),=CL4'F1SA'   FLAG LINKAGE STACK USAGE  GP JUN10 12720091
         SPACE 1                                               GP SEP05 12730065
         MVI   IDRBLDL+1,1           NEED BLDL FORMAT,         GP SEP05 12740065
         MVI   IDRBLDL+3,76           NOT STOW FORMAT          GP SEP05 12750065
         MVC   IDRBLDL+4(8),DIRNAME   FOR DESERV GET           GP SEP05 12760099
         BLDL  INDCB,IDRBLDL                                   GP SEP05 12770065
         LTR   R15,R15               ALL AS IT SHOULD BE?      GP SEP05 12780065
         BNZ   IDRBAPIX              NO, THAT'S STRANGE        GP SEP05 12790065
         SPACE 1                                               GP SEP05 12800065
         MVC   BNDDATA(ISITMGDL),ISITMGDS                      GP SEP05 12810065
         USING ISM,BNDDATA                                     GP SEP05 12820065
         ISITMGD DCB=INDCB,DATATYPE=YES,MF=(E,BNDDATA)         GP SEP05 12830065
         TM    ISMOFLG3,ISMDTPGM     PROGRAM OBJECT LIBRARY?   GP SEP05 12840065
         BNO   IDRBAPIX              NO, SKIP BINDER API CALLS GP SEP05 12850065
         SPACE 1                                               GP SEP05 12860065
         MVC   BNDDATA(DESRVGL),DESRVGS                        GP SEP05 12870080
         DESERV FUNC=GET,            GET A DIRECTORY ENTRY     GP JAN08+12880080
               AREAPTR=BNDCURSR,     RETURNED POINTER AREA     GP JAN08+12890080
               BYPASS_LLA=YES,       GET LATEST FROM DISK      GP JAN08+12900080
               CONN_ID=MODDEPTR,     SAVE FOR RELEASE          GP JAN08+12910080
               CONN_INTENT=HOLD,     COMPULSORY                GP JAN08+12920080
               DCB=INDCB,            SUPPLY OPEN BPAM DCB      GP JAN08+12930080
               PDSDE=IDRBLDL+4,      POINT TO BLDL RESULTS     GP JAN08+12940080
               RETCODE=BNDRETCD,     SUPPLY RETURN CODE AREA   GP JAN08+12950080
               RSNCODE=BNDRSNCD,     SUPPLY REASON CODE AREA   GP JAN08+12960080
               SUBPOOL=21,           SUPPLY SUBPOOL ID         GP JAN08+12970080
               MF=(E,BNDDATA,COMPLETE)                         GP JAN08 12980080
         ICM   R15,15,BNDRETCD       SUCCESS?                  GP JAN08 12990080
         BNZ   IDRBAPIX              NO, NO DATA TO LOOK AT    GP JAN08 13000080
         DESERV FUNC=RELEASE,        RELEASE THE CONNECTION    GP JAN08+13010080
               CONN_ID=MODDEPTR,       THAT WAS JUST ACQUIRED  GP JAN08+13020080
               DCB=INDCB,            SUPPLY OPEN BPAM DCB      GP JAN08+13030080
               MF=(E,BNDDATA,COMPLETE)                         GP JAN08 13040080
         L     R2,BNDCURSR           YES, POINT TO DESB        GP JAN08 13050080
         USING DESB,R2                                         GP JAN08 13060080
         LA    R3,DESB_DATA          POINT TO THE ACTUAL ENTRY GP JAN08 13070080
         USING SMDE,R3                                         GP JAN08 13080080
         SR    R4,R4                 CLEAR FOR INSERT          GP JAN08 13090080
         ICM   R4,3,SMDE_PMAR_OFF    GET OFFSET TO PMAR        GP JAN08 13100080
         ALR   R4,R3                 POINT TO PMAR SECTION     GP JAN08 13110080
         CLI   #MODLEN,0             IS FILTERING ACTIVE?      GP SEP18 13120099
         BNE   IDRDSRVX              YES, SKIP BIND DETAILS    GP SEP18 13130099
         USING PMAR,R4                                         GP JAN08 13140080
         CLI   PMAR_LVL,PMAR_PM2_VAL PROGRAM OBJECT LEVEL 1?   GP JAN08 13150080
         BL    IDRDSRVX              YES, DATE NOT AVAILABLE   GP JAN08 13160080
         USING PMARL,PMAR_END                                  GP JAN08 13170080
         MVC   LKEDTIME,PMARL_TIME   COPY BIND TIME            GP JAN08 13180080
         LA    R1,PMARL_DATE+1       POINT TO BIND DATE YYDDDF GP JAN08 13190080
         LA    R15,LKEDDATE          POINT TO OUTPUT FIELD     GP JAN08 13200080
         BAS   R14,CONVDATE          CONVERT TO MMDDYY FORMAT  GP JAN08 13210080
         MVC   LKEDNAME(2),=C'J='    INDICATE JOB NAME         GP JAN08 13220080
         MVC   LKEDNAME+2(8),PMARL_USER  COPY JOB NAME         GP JAN08 13230080
         MVC   LKEDVVMM(2),PMAR_LVL  PO AND BINDER VERSIONS    GP JAN08 13240080
         OI    FLAGSCC,FIDR          IDR DATA EXISTS           GP JAN08 13250080
IDRDSRVX DS    0H                    CLEAN UP DESERV STORAGE   GP JAN08 13260080
         L     R0,DESB_LEN           RETURNED BUFFER LENGTH    GP JAN08 13270080
         LR    R1,R2                 RETURNED BUFFER ADDRESS   GP JAN08 13280080
         FREEMAIN RU,LV=(0),A=(1),SP=21                        GP JAN08 13290080
         TM    IDRBLDL+27,DIRNOED    NOT EDITABLE?             GP JAN08 13300095
         BO    IDRBAPIX              YES, NE STUFF ALL DONE    GP JUN13 13310095
         DROP  R2,R3,R4              DESB, SMDE, PMAR+PMARL    GP JAN08 13320080
         SPACE 1                                               GP JAN08 13330080
         CLC   ##SUBCOM(8),$HIS      HISTORY SUBCOMMAND?       GP FEB20 13340099
         BE    IDRBAPIE              YES, COLLECT IT ALL       GP FEB20 13350099
         CLC   ##SUBCOM(3),$IFX      ALSO LET ALL OPERANDS OF  GP FEB20 13360099
         BE    IDRBAPIE                IF SUBCOMMAND WORK      GP FEB20 13370099
         CLC   LKEDNAME(2),=C'J='    GOT SOMETHING ALREADY?    GP FEB20 13380099
         BNE   IDRBAPIE              NO, SO PRESS ON           GP FEB20 13390099
         CLC   ##SUBCOM(8),$ATTL     ATTRIB SUBCOMMAND?        GP FEB20 13400099
         BNE   IDRBAPIX              NO, GOT ALL WE NEED       GP FEB20 13410099
         CLI   #LKEDOPT,X'01'        "LKED" REQUESTED?         GP FEB20 13420099
         BNE   IDRBAPIX              NO, GOT ALL WE NEED       GP FEB20 13430099
IDRBAPIE DS    0H                    ENTRY TO BINDER API USAGE GP SEP05 13440080
         LA    R0,8                                            GP APR18 13450099
         STH   R0,BNDDDNAM           SET DDNAME LENGTH         GP APR18 13460099
         MVC   BNDDDNAM+2(8),DDNAME  SET DDNAME                GP APR18 13470099
         STH   R0,BNDMEMBR           SET MEMBER LENGTH         GP APR18 13480099
         MVC   BNDMEMBR+2(8),DIRNAME SET MEMBER                GP APR18 13490099
         ICM   R0,15,IEWBIND         LOAD ISSUED?              GP APR18 13500099
         BNZ   IDRBNDLD              YES                       GP APR18 13510099
         LOAD  EPLOC=HIEWBIND        GET IEWBIND EPA           GP APR18 13520099
         ST    R0,IEWBIND            SAVE IEWBIND EPA          GP APR18 13530099
IDRBNDLD DS    0H                                              GP APR18 13540099
*        IEWBIND FUNC=STARTD,      START A BINDER DIALOG       GP APR18 13550099
*              VERSION=2,RETCODE=BNDRETCD,RSNCODE=BNDRSNCD,    GP APR18 13560099
*              DIALOG=DISTOKEN,                                GP APR18 13570099
*              MF=(E,BNDPARMS,COMPLETE)                        GP APR18 13580099
         XC    DIATOKEN,DIATOKEN                               GP APR18 13590099
         ST    R0,DIATOKEN         SET UP DIALOG TOKEN         GP APR18 13600099
         MVC   MODTOKEN,DIATOKEN      AND MODULE TOKEN         GP APR18 13610099
         LR    R15,R0              COPY THE EPA                GP APR18 13620099
         CALL  (15),(STARTDH,      FUNCTION CODE               GP APR18+13630099
               BNDRETCD,           RETURN CODE                 GP APR18+13640099
               BNDRSNCD,           REASON CODE                 GP APR18+13650099
               DIATOKEN,           DIALOG TOKEN                GP APR18+13660099
               HSTZERO,HSTZERO,HSTZERO),                       GP APR18+13670099
               VL,MF=(E,BNDPARMS)                              GP APR18 13680099
         CLC   BNDRETCD,=F'8'      MAJOR FAILURE?              GP APR18 13690099
         BH    IDRBAPIX            YES, GIVE UP                GP APR18 13700099
         SPACE 1                                               GP APR18 13710099
*        IEWBIND FUNC=CREATEW,     CREATE A WORKMOD            GP APR18 13720099
*              VERSION=2,RETCODE=BNDRETCD,RSNCODE=BNDRSNCD,    GP APR18 13730099
*              WORKMOD=MODTOKEN,DIALOG=DIATOKEN,INTENT=ACCESS, GP APR18 13740099
*              MF=(E,BNDPARMS,COMPLETE)                        GP APR18 13750099
         L     R15,DIATOKEN        GET IEWBIND ENTRY POINT     GP APR18 13760099
         CALL  (15),(CREATEWH,     FUNCTION CODE               GP APR18+13770099
               BNDRETCD,           RETURN CODE                 GP APR18+13780099
               BNDRSNCD,           REASON CODE                 GP APR18+13790099
               DIATOKEN,           DIALOG TOKEN                GP APR18+13800099
               MODTOKEN,           MODULE TOKEN                GP APR18+13810099
               HSTCODEA),          INTENT (ACCESS)             GP APR18+13820099
               VL,MF=(E,BNDPARMS)                              GP APR18 13830099
         SPACE 1                                               GP APR18 13840099
*        IEWBIND FUNC=INCLUDE,     INCLUDE A PROGRAM OBJECT    GP APR18 13850099
*              VERSION=2,RETCODE=BNDRETCD,RSNCODE=BNDRSNCD,    GP APR18 13860099
*              WORKMOD=MODTOKEN,INTYPE=NAME,                   GP APR18 13870099
*              DDNAME=BNDDDNAM,MEMBER=BNDMEMBR,                GP APR18 13880099
*              ATTRIB=NO,ALIASES=NO,                           GP APR18 13890099
*              MF=(E,BNDPARMS,COMPLETE)                        GP APR18 13900099
         L     R15,DIATOKEN        GET IEWBIND ENTRY POINT     GP APR18 13910099
         CALL  (15),(INCLUDEH,     FUNCTION CODE               GP APR18+13920099
               BNDRETCD,           RETURN CODE                 GP APR18+13930099
               BNDRSNCD,           REASON CODE                 GP APR18+13940099
               MODTOKEN,           MODULE TOKEN                GP APR18+13950099
               HSTCODEN,           INTYPE (NAME) (CONCAT OK)   GP APR18+13960099
               BNDDDNAM,           DDNAME                      GP APR18+13970099
               BNDMEMBR,           MEMBER                      GP APR18+13980099
               HSTZERO,HSTZERO,HSTZERO,0,                      GP APR18+13990099
               HSTCODEN,           ATTRIB                      GP APR18+14000099
               HSTCODEN),          ALIASES                     GP APR18+14010099
               VL,MF=(E,BNDPARMS)                              GP APR18 14020099
         CLC   BNDRETCD,=F'4'      MAJOR FAILURE?              GP APR18 14030099
         BH    IDRENDD             YES, GIVE UP                GP APR18 14040099
         USING IEWBMAP,BNDDATA     (USE IEWBUFF IN @MAP)       GP JUN13 14050095
         USING IEWBIDL,BNDDATA                                 GP SEP05 14060065
         USING IEWBIDU,BNDDATA                                 GP SEP05 14070065
         USING IEWBIDZ,BNDDATA                                 GP SEP05 14080065
         USING IEWBIDB,BNDDATA                                 GP SEP05 14090065
         LA    R2,#IDRPTR          ORIGIN FOR IDR CHAIN        GP SEP05 14100065
         USING IDRENTRY,R2                                     GP SEP05 14110065
         SPACE 1                                               GP SEP05 14120065
         CLC   ##SUBCOM(8),$ATTL   ATTRIB SUBCOMMAND?          GP SEP05 14130065
         BE    IDRZDONE            YES, JUST WANT BIND DATA    GP SEP05 14140065
** DON'T L     R0,=A(IF)           START OF IF SUBCOMMAND FEB20GP SEP05 14150099
** NEED  CLM   R0,7,##ADRCMD+1     REALLY IF SUBCOMMAND?  FEB20GP SEP05 14160099
** THIS  BE    IDRTRNCK            YES, PROCEED           FEB20GP SEP05 14170099
         CLC   ##SUBCOM(8),$MML    MEMLIST SUBCOMMAND?         GP SEP05 14180065
         BE    IDRZDONE            YES, JUST WANT BIND DATA    GP SEP05 14190065
         CLC   ##SUBCOM(8),$ML     ML SUBCOMMAND?              GP SEP05 14200065
         BE    IDRZDONE            YES, JUST WANT BIND DATA    GP SEP05 14210065
         SPACE 1                                               GP SEP05 14220065
IDRTRNCK CLI   #TRANOPT,X'01'      NO TRANSLATOR DATA?         GP SEP18 14230099
         BNE   IDRLDONE            YES, SKIP THIS CLASS        GP SEP18 14240099
         CLC   ##SUBCOM(8),$IFX    IF SUBCOMMAND?              GP FEB20 14250099
         BE    IDRLDONE            YES, IF IGNORANT OF COBOL   GP FEB20 14260099
         SPACE 1                                               GP JUN13 14270095
* - - - - TOP OF CODE BLOCK FOR PDSE COBOL ATTRIBUTE SUPPORT - GP JUN13 14280095
*                                                              GP JUN13 14290095
*  PROGRAM OBJECT (PO) LEVEL 1 CAN IMPLEMENT ALL LOAD MODULE   GP JUN13 14300095
*  FACILITIES IN A PDSE, INCLUDING SEGMENT OVERLAY PROGRAMS.   GP JUN13 14310095
*  ORIGINALLY AND FOR NUMEROUS YEARS, COPYING A LOAD MODULE    GP JUN13 14320095
*  FROM A PDS TO A PDSE RESULTED IN A LEVEL 1 PROGRAM OBJECT   GP JUN13 14330095
*  BEING CREATED IN THE PDSE.  BY ABOUT THE TIME OF THE SECOND GP JUN13 14340095
*  DECADE OF THE 21ST CENTURY, COPYING A NON-SEGMENT-OVERLAY   GP JUN13 14350095
*  PROGRAM FROM A PDS TO A PDSE RESULTED IN THE CREATION OF A  GP JUN13 14360095
*  LEVEL 2 PROGRAM OBJECT WHICH IS THE SAME LEVEL AS THE       GP JUN13 14370095
*  LINK EDIT OF A CONVENTIONAL OBJECT DECK DIRECTLY INTO A     GP JUN13 14380095
*  PDSE HAS DONE PRETTY MUCH ALL ALONG.  THE EXACT TIME OF     GP JUN13 14390095
*  THIS CHANGE PROBABLY CORRESPONDS TO A SPECIFIC RELEASE      GP JUN13 14400095
*  OF Z/OS SUCH AS V1R10 OR V1R11 OR THEREABOUTS.              GP JUN13 14410095
*                                                              GP JUN13 14420095
*  AS OF Z/OS 2.3, COPYING A SEGMENT OVERLAY LOAD MODULE       GP APR18 14430099
*  TO A PDSE STILL YIELDED A LEVEL 1 PROGRAM OBJECT.           GP APR18 14440099
*                                                              GP JUN13 14450095
*  THE BINDER FAST DATA ACCESS BINDER API CALLS HAVE NOW       GP APR18 14460099
*  BEEN REPLACED BY FULL DIALOG API CALLS BECAUSE OF THE       GP APR18 14470099
*  GREATER CAPACITY OF THE DIALOG API TO TRANSFORM DATA        GP APR18 14480099
*  STRUCTURES OF ONE VERSION ON DASD TO STRUCTURES OF A        GP APR18 14490099
*  DIFFERENT VERSION AS REQUESTED BY THE BUFFER SPECIFIC-      GP APR18 14500099
*  ATIONS SET UP BY THE API CALLER.  HENCE, A SINGLE API       GP APR18 14510099
*  LOGIC PATH CAN NOW BE USED TO PROCESS PROGRAM OBJECTS       GP APR18 14520099
*  OF ANY LEVEL.                                               GP APR18 14530099
*                                                              GP JUN13 14540095
         XC    BNDCURSR,BNDCURSR   FIRST CALL FOR THIS CLASS   GP JUN13 14550095
IDRMREDO EQU   *                                               GP JUN13 14560095
         L     R1,=A(READESD)      ADDRESS CODE THAT ALREADY   GP JUN13 14570095
         USING READESD,R1            HAS USABLE STATIC DATA    GP JUN13 14580095
         LA    R5,CLS_MAP          POINT TO CLASS NAME         GP APR18 14590099
         MVC   IEWBMAP(MAPH_LENG),MAPI_INIT_VALUES             GP JUN13 14600095
         DROP  R1                  READESD                     GP JUN13 14610095
*        IEWBIND FUNC=GETD,        MODULE MAP DATA             GP APR18 14620099
*              VERSION=2,RETCODE=BNDRETCD,RSNCODE=BNDRSNCD,    GP APR18 14630099
*              WORKMOD=MODTOKEN,CLASS=CLS_MAP,                 GP APR18 14640099
*              AREA=BNDDATA,CURSOR=BNDCURSR,COUNT=BNDCOUNT,    GP APR18 14650099
*              MF=(E,BNDPARMS,COMPLETE)                        GP APR18 14660099
         L     R15,DIATOKEN        GET IEWBIND ENTRY POINT     GP APR18 14670099
         CALL  (15),(GETDH,        FUNCTION CODE               GP APR18+14680099
               BNDRETCD,           RETURN CODE                 GP APR18+14690099
               BNDRSNCD,           REASON CODE                 GP APR18+14700099
               MODTOKEN,           MODULE TOKEN                GP APR18+14710099
               (R5),               CLASS                       GP APR18+14720099
               HSTZERO,                                        GP APR18+14730099
               BNDDATA,            AREA                        GP APR18+14740099
               BNDCURSR,           CURSOR                      GP APR18+14750099
               BNDCOUNT),          COUNT                       GP APR18+14760099
               VL,MF=(E,BNDPARMS)                              GP APR18 14770099
         CLC   BNDRETCD,=F'8'      ANY DATA?                   GP JUN13 14780095
         BNL   IDRMDONE            NO, THIS BIT NOW DONE       GP JUN13 14790095
         LA    R6,IEWBMAP+MAPH_LENG                            GP JUN13 14800095
         USING MAP_ENTRY,R6                                    GP JUN13 14810095
         ICM   R5,15,BNDCOUNT      GET RETURNED RECORD COUNT   GP JUN13 14820095
         BNP   IDRMDONE            NO ENTRIES WERE RETURNED    GP JUN13 14830095
IDRMLOOP EQU   *                                               GP JUN13 14840095
         TM    IDR_FLGS,$B_TXT     LOOKING FOR B_TEXT?         GP JUN13 14850095
         BO    IDRMSYM             NO, IN THE THICK OF IT      GP JUN13 14860095
         CLI   MAP_TYPE,C'C'       CLASS ENTRY?                GP JUN13 14870095
         BNE   IDRMNEXT            NO, FLUSH THIS ENTRY        GP JUN13 14880095
         CLI   MAP_NAME_CHARS+1,6  6 CHARS IN CLASS NAME?      GP JUN13 14890095
         BNE   IDRMNEXT            NO, FLUSH THIS ENTRY        GP JUN13 14900095
*  OLD COBOL WILL BE B_TEXT WHILE NEW COBOL WILL BE C_CODE.    GP OCT18 14910099
*  SCAN FIRST OF EITHER OF THESE TWO THAT ARE ENCOUNTERED,     GP OCT18 14920099
*  AND CREATE ESDLINK ELEMENTS FOR DISCOVERED SECTIONS.        GP OCT18 14930099
*  THE FIRST CLASS ENCOUNTERED WILL CONTAIN THE ENTRY POINT.   GP OCT18 14940099
         L     R14,MAP_NAME_PTR    POINT TO THE CLASS NAME     GP JUN13 14950095
         CLC   =C'B_TEXT',0(R14)   IS CLASS B_TEXT?            GP JUN13 14960095
         BE    IDRCODE             NO, FLUSH THIS ENTRY        GP OCT18 14970099
         CLC   =C'C_CODE',0(R14)   IS CLASS C_CODE?            GP OCT18 14980099
         BNE   IDRMNEXT            NO, FLUSH THIS ENTRY        GP JUN13 14990095
IDRCODE  EQU   *                   GOT LOADABLE CODE CLASS     GP JUN13 15000099
         OI    IDR_FLGS,$B_TXT     YES, ON TO NEXT PHASE       GP JUN13 15010095
         B     IDRMNEXT            GO GET FIRST SECTION        GP JUN13 15020095
IDRMSYM  EQU   *                   GOT ENTRY IN B_TEXT CLASS   GP JUN13 15030095
         CLI   MAP_TYPE,C'C'       NEXT CLASS ENTRY?           GP JUN13 15040095
         BE    IDRMDONE            YES, END OF B_TEXT CLASS    GP JUN13 15050095
         CLI   MAP_TYPE,C'E'       END OF MODULE MAP?          GP JUN13 15060095
         BE    IDRMDONE            YES, END OF DATA            GP JUN13 15070095
         CLI   MAP_TYPE,C'S'       SECTION ENTRY?              GP JUN13 15080095
         BNE   IDRMNEXT            NO, NOT INTERESTED          GP JUN13 15090095
         LH    R15,MAP_NAME_CHARS  GET CSECT NAME LENGTH       GP JUN13 15100095
         L     R14,MAP_NAME_PTR    GET CSECT NAME ADDRESS      GP JUN13 15110095
         STM   R14,R15,IDRDBL      SAVE CSECT NAME DETAILS     GP JUN13 15120095
         SR    R1,R1               CLEAR FOR INSERT            GP SEP18 15130099
         IC    R1,#MODLEN          GET FILTER LENGTH           GP SEP18 15140099
         CR    R1,R15              FILTER LONGER THAN NAME?    GP SEP18 15150099
         BH    IDRMNEXT            YES, DISCARD THIS ENTRY     GP SEP18 15160099
         LR    R15,R1              COPY LENGTH                 GP SEP18 15170099
         LA    R0,#MODTXT          POINT TO FILTER VALUE       GP SEP18 15180099
         CLCL  R14,R0              THIS NAME OF INTEREST?      GP SEP18 15190099
         BNE   IDRMNEXT            NO, DISCARD THIS ENTRY      GP SEP18 15200099
         BAS   R14,IDRGETID        CREATE ESDENTRY FOR SECTION GP JUN13 15210095
* FUTURE CLC   ##SUBCOM(8),$IFX    IF SUBCOMMAND?              GP FEB20 15220099
* USE ?? BE    IDRMNEXT            YES, NOT GENERATING OUTPUT  GP FEB20 15230099
         OI    FLAGSGG,FOUTSOME    SOME OUTPUT WAS GENERATED   GP SEP18 15240099
         SPACE 1                                               GP JUN13 15250095
IDRMNEXT A     R6,MAPH_ENTRY_LENG  POINT TO NEXT RETURNED ENTRYGP JUN13 15260095
         BCT   R5,IDRMLOOP         PROCESS NEXT ENTRY          GP JUN13 15270095
         ICM   R0,15,BNDRETCD      MORE DATA TO FETCH?         GP APR18 15280099
         BZ    IDRMREDO            YES, GO REQUEST MORE        GP APR18 15290099
         DROP  R6                  MAP_ENTRY                   GP JUN13 15300095
IDRMDONE EQU   *                                               GP JUN13 15310095
         NI    IDR_FLGS,255-$B_TXT CLEAR B_TEXT STATUS FLAG    GP JUN13 15320095
* - - - - END OF CODE BLOCK FOR PDSE COBOL ATTRIBUTE SUPPORT - GP JUN13 15330095
         XC    BNDCURSR,BNDCURSR   FIRST CALL FOR THIS CLASS   GP SEP05 15340065
IDRLREDO EQU   *                                               GP SEP05 15350065
         MVC   IEWBIDL(IDLH_LENG),IDLI_INIT_VALUES             GP SEP05 15360065
*        IEWBIND FUNC=GETD,        LANGUAGE IDR DATA           GP APR18 15370099
*              VERSION=2,RETCODE=BNDRETCD,RSNCODE=BNDRSNCD,    GP APR18 15380099
*              WORKMOD=MODTOKEN,CLASS=CLS_IDRL,                GP APR18 15390099
*              AREA=BNDDATA,CURSOR=BNDCURSR,COUNT=BNDCOUNT,    GP APR18 15400099
*              MF=(E,BNDPARMS,COMPLETE)                        GP APR18 15410099
         L     R15,DIATOKEN        GET IEWBIND ENTRY POINT     GP APR18 15420099
         CALL  (15),(GETDH,        FUNCTION CODE               GP APR18+15430099
               BNDRETCD,           RETURN CODE                 GP APR18+15440099
               BNDRSNCD,           REASON CODE                 GP APR18+15450099
               MODTOKEN,           MODULE TOKEN                GP APR18+15460099
               CLS_IDRL,           CLASS                       GP APR18+15470099
               HSTZERO,                                        GP APR18+15480099
               BNDDATA,            AREA                        GP APR18+15490099
               BNDCURSR,           CURSOR                      GP APR18+15500099
               BNDCOUNT),          COUNT                       GP APR18+15510099
               VL,MF=(E,BNDPARMS)                              GP APR18 15520099
         CLC   BNDRETCD,=F'8'      MAJOR FAILURE?              GP SEP05 15530065
         BH    IDRBDONE            YES, GIVE UP                GP SEP05 15540065
         BE    IDRLDONE            NO, BUT NO DATA             GP SEP05 15550065
         LA    R6,IEWBIDL+IDLH_LENG                            GP SEP05 15560065
         USING IDL_ENTRY,R6                                    GP SEP05 15570065
         ICM   R5,15,BNDCOUNT      GET RETURNED RECORD COUNT   GP SEP05 15580065
         BNP   IDRLDONE            NO ENTRIES WERE RETURNED    GP SEP05 15590065
IDRLLOOP EQU   *                                               GP SEP05 15600065
         LH    R15,IDL_RESIDENT_CHARS                          GP SEP05 15610065
         L     R14,IDL_RESIDENT_PTR                            GP SEP05 15620065
         STM   R14,R15,IDRDBL      SAVE SECTION NAME DETAILS   GP SEP05 15630099
         SR    R1,R1               CLEAR FOR INSERT            GP AUG18 15640099
         IC    R1,#MODLEN          GET FILTER LENGTH           GP AUG18 15650099
         CR    R1,R15              FILTER LONGER THAN NAME?    GP AUG18 15660099
         BH    IDRLNEXT            YES, DISCARD THIS ENTRY     GP AUG18 15670099
         LR    R15,R1              COPY LENGTH                 GP AUG18 15680099
         LA    R0,#MODTXT          POINT TO FILTER VALUE       GP AUG18 15690099
         CLCL  R14,R0              THIS NAME OF INTEREST?      GP AUG18 15700099
         BNE   IDRLNEXT            NO, DISCARD THIS ENTRY      GP AUG18 15710099
         BAS   R14,GETIDR          ACQUIRE NEW ELEMENT         GP SEP05 15720099
         ST    R1,IDRLINK          CHAIN IT                    GP SEP05 15730099
         LR    R2,R1                                           GP SEP05 15740099
         BAS   R14,IDRGETID        CONVERT NAME TO ESDID       GP SEP05 15750065
         MVC   IDRESDID,IDRDBL     MOVE ESDID TO IDR RECORD    GP SEP05 15760065
         PACK  IDRDBL,IDL_DATE_PROCESSED                       GP SEP05 15770065
         LA    R1,IDRDBL+5         ADDRESS OF DATE OF RECORD   GP SEP05 15780065
         LA    R15,IDRDATE                                     GP SEP05 15790065
         BAS   R14,CONVDATE        CONVERT TO MMDDYY FORMAT    GP SEP05 15800065
         MVC   IDRTDATA(10),IDL_PID_ID    COPY PROCESSOR ID    GP SEP05 15810065
         PACK  IDRDBL(2),IDL_VERSION(3)                        GP SEP05 15820065
         PACK  IDRDBL+1(2),IDL_MOD_LEVEL(3)                    GP SEP05 15830065
         MVC   IDRTDATA+10(2),IDRDBL      VV.MM IN HEX         GP SEP05 15840065
         MVI   IDRLDATA,14         INDICATE ONE TRANSLATOR     GP SEP05 15850065
         MVI   IDRTYPE,IDRTRAN     TRANSLATOR TYPE RECORD      GP SEP05 15860065
         CLC   ##SUBCOM(8),$IFX    IF SUBCOMMAND?              GP FEB20 15870099
         BE    IDRLNEXT            YES, NOT GENERATING OUTPUT  GP FEB20 15880099
         OI    FLAGSGG,FOUTSOME    SOME OUTPUT WAS GENERATED   GP SEP18 15890099
IDRLNEXT A     R6,IDLH_ENTRY_LENG  POINT TO NEXT RETURNED ENTRYGP SEP05 15900099
         BCT   R5,IDRLLOOP         PROCESS NEXT ENTRY          GP SEP05 15910065
         ICM   R0,15,BNDRETCD      MORE DATA TO FETCH?         GP APR18 15920099
         BZ    IDRLREDO            YES, GO REQUEST MORE        GP APR18 15930099
         DROP  R6                  IDL_ENTRY                   GP SEP05 15940065
IDRLDONE EQU   *                                               GP SEP05 15950065
         CLI   #USEROPT,0          "USERDATA"?                 GP SEP18 15960099
         BE    IDRUDONE            NO, SKIP THIS CALL          GP SEP18 15970099
         XC    BNDCURSR,BNDCURSR   FIRST CALL FOR THIS CLASS   GP SEP05 15980065
IDRUREDO EQU   *                                               GP SEP05 15990065
         MVC   IEWBIDU(IDUH_LENG),IDUI_INIT_VALUES             GP SEP05 16000065
*        IEWBIND FUNC=GETD,        USER IDR DATA               GP APR18 16010099
*              VERSION=2,RETCODE=BNDRETCD,RSNCODE=BNDRSNCD,    GP APR18 16020099
*              WORKMOD=MODTOKEN,CLASS=CLS_IDRU,                GP APR18 16030099
*              AREA=BNDDATA,CURSOR=BNDCURSR,COUNT=BNDCOUNT,    GP APR18 16040099
*              MF=(E,BNDPARMS,COMPLETE)                        GP APR18 16050099
         L     R15,DIATOKEN        GET IEWBIND ENTRY POINT     GP APR18 16060099
         CALL  (15),(GETDH,        FUNCTION CODE               GP APR18+16070099
               BNDRETCD,           RETURN CODE                 GP APR18+16080099
               BNDRSNCD,           REASON CODE                 GP APR18+16090099
               MODTOKEN,           MODULE TOKEN                GP APR18+16100099
               CLS_IDRU,           CLASS                       GP APR18+16110099
               HSTZERO,                                        GP APR18+16120099
               BNDDATA,            AREA                        GP APR18+16130099
               BNDCURSR,           CURSOR                      GP APR18+16140099
               BNDCOUNT),          COUNT                       GP APR18+16150099
               VL,MF=(E,BNDPARMS)                              GP APR18 16160099
         CLC   BNDRETCD,=F'8'      MAJOR FAILURE?              GP SEP05 16170065
         BH    IDRBDONE            YES, GIVE UP                GP SEP05 16180065
         BE    IDRUDONE            NO, BUT NO DATA             GP SEP05 16190065
         LA    R6,IEWBIDU+IDUH_LENG                            GP SEP05 16200065
         USING IDU_ENTRY,R6                                    GP SEP05 16210065
         ICM   R5,15,BNDCOUNT      GET RETURNED RECORD COUNT   GP SEP05 16220065
         BNP   IDRUDONE            NO ENTRIES WERE RETURNED    GP SEP05 16230065
IDRULOOP EQU   *                                               GP SEP05 16240065
         LH    R15,IDU_RESIDENT_CHARS                          GP SEP05 16250065
         L     R14,IDU_RESIDENT_PTR                            GP SEP05 16260065
         STM   R14,R15,IDRDBL      SAVE SECTION NAME DETAILS   GP SEP05 16270099
         SR    R1,R1               CLEAR FOR INSERT            GP AUG18 16280099
         IC    R1,#MODLEN          GET FILTER LENGTH           GP AUG18 16290099
         CR    R1,R15              FILTER LONGER THAN NAME?    GP AUG18 16300099
         BH    IDRUNEXT            YES, DISCARD THIS ENTRY     GP AUG18 16310099
         LR    R15,R1              COPY LENGTH                 GP AUG18 16320099
         LA    R0,#MODTXT          POINT TO FILTER VALUE       GP AUG18 16330099
         CLCL  R14,R0              THIS NAME OF INTEREST?      GP AUG18 16340099
         BNE   IDRUNEXT            NO, DISCARD THIS ENTRY      GP AUG18 16350099
         BAS   R14,GETIDR          ACQUIRE NEW ELEMENT         GP SEP05 16360099
         ST    R1,IDRLINK          CHAIN IT                    GP SEP05 16370099
         LR    R2,R1                                           GP SEP05 16380099
         BAS   R14,IDRGETID        CONVERT NAME TO ESDID       GP SEP05 16390065
         MVC   IDRESDID,IDRDBL     MOVE ESDID TO IDR RECORD    GP SEP05 16400065
         PACK  IDRDBL,IDU_CREATE_DATE                          GP SEP05 16410065
         LA    R1,IDRDBL+5         ADDRESS OF DATE OF RECORD   GP SEP05 16420065
         LA    R15,IDRDATE                                     GP SEP05 16430065
         BAS   R14,CONVDATE        CONVERT TO MMDDYY FORMAT    GP SEP05 16440065
         LH    R15,IDU_DATA_CHARS                              GP SEP05 16450065
         LA    R14,IDU_DATA                                    GP SEP05 16460065
         LA    R0,C' '                                         GP SEP05 16470065
         SLL   R0,24                                           GP SEP05 16480065
         OR    R15,R0                                          GP SEP05 16490065
         LA    R0,IDRDATA                                      GP SEP05 16500065
         LA    R1,L'IDRDATA                                    GP SEP05 16510065
         MVCL  R0,R14              COPY USER IDENTIFY DATA     GP SEP05 16520065
         LA    R1,IDRDATA+1                                    GP SEP05 16530065
         SR    R0,R1                                           GP SEP05 16540065
         STC   R0,IDRLDATA         SET DATA MACHINE LENGTH     GP SEP05 16550065
         MVI   IDRTYPE,IDRUSER     USER IDR DATA IDENTIFIER    GP SEP05 16560065
         CLC   ##SUBCOM(8),$IFX    IF SUBCOMMAND?              GP FEB20 16570099
         BE    IDRUNEXT            YES, NOT GENERATING OUTPUT  GP FEB20 16580099
         OI    FLAGSGG,FOUTSOME    SOME OUTPUT WAS GENERATED   GP SEP18 16590099
IDRUNEXT A     R6,IDUH_ENTRY_LENG  POINT TO NEXT RETURNED ENTRYGP SEP05 16600099
         BCT   R5,IDRULOOP         PROCESS NEXT ENTRY          GP SEP05 16610065
         ICM   R0,15,BNDRETCD      MORE DATA TO FETCH?         GP APR18 16620099
         BZ    IDRUREDO            YES, GO REQUEST MORE        GP APR18 16630099
         DROP  R6                  IDU_ENTRY                   GP SEP05 16640065
IDRUDONE EQU   *                                               GP SEP05 16650065
         CLI   #ZAPOPT,X'01'       "ZAP"?                      GP SEP18 16660099
         BNE   IDRZDONE            NO, SKIP THIS CALL          GP SEP18 16670099
         XC    BNDCURSR,BNDCURSR   FIRST CALL FOR THIS CLASS   GP SEP05 16680065
IDRZREDO EQU   *                                               GP SEP05 16690065
         MVC   IEWBIDZ(IDZH_LENG),IDZI_INIT_VALUES             GP SEP05 16700065
*        IEWBIND FUNC=GETD,        ZAP IDR DATA                GP APR18 16710099
*              VERSION=2,RETCODE=BNDRETCD,RSNCODE=BNDRSNCD,    GP APR18 16720099
*              WORKMOD=MODTOKEN,CLASS=CLS_IDRZ,                GP APR18 16730099
*              AREA=BNDDATA,CURSOR=BNDCURSR,COUNT=BNDCOUNT,    GP APR18 16740099
*              MF=(E,BNDPARMS,COMPLETE)                        GP APR18 16750099
         L     R15,DIATOKEN        GET IEWBIND ENTRY POINT     GP APR18 16760099
         CALL  (15),(GETDH,        FUNCTION CODE               GP APR18+16770099
               BNDRETCD,           RETURN CODE                 GP APR18+16780099
               BNDRSNCD,           REASON CODE                 GP APR18+16790099
               MODTOKEN,           MODULE TOKEN                GP APR18+16800099
               CLS_IDRZ,           CLASS                       GP APR18+16810099
               HSTZERO,                                        GP APR18+16820099
               BNDDATA,            AREA                        GP APR18+16830099
               BNDCURSR,           CURSOR                      GP APR18+16840099
               BNDCOUNT),          COUNT                       GP APR18+16850099
               VL,MF=(E,BNDPARMS)                              GP APR18 16860099
         CLC   BNDRETCD,=F'8'      MAJOR FAILURE?              GP SEP05 16870065
         BH    IDRBDONE            YES, GIVE UP                GP APR18 16880099
         BE    IDRZDONE            NO, BUT NO DATA             GP SEP05 16890065
         LA    R6,IEWBIDZ+IDZH_LENG                            GP SEP05 16900065
         USING IDZ_ENTRY,R6                                    GP SEP05 16910065
         ICM   R5,15,BNDCOUNT      GET RETURNED RECORD COUNT   GP SEP05 16920065
         BNP   IDRZDONE            NO ENTRIES WERE RETURNED    GP SEP05 16930065
IDRZLOOP EQU   *                                               GP SEP05 16940065
         LH    R15,IDZ_RESIDENT_CHARS                          GP SEP05 16950065
         L     R14,IDZ_RESIDENT_PTR                            GP SEP05 16960065
         STM   R14,R15,IDRDBL      SAVE SECTION NAME DETAILS   GP SEP05 16970099
         SR    R1,R1               CLEAR FOR INSERT            GP AUG18 16980099
         IC    R1,#MODLEN          GET FILTER LENGTH           GP AUG18 16990099
         CR    R1,R15              FILTER LONGER THAN NAME?    GP AUG18 17000099
         BH    IDRZNEXT            YES, DISCARD THIS ENTRY     GP AUG18 17010099
         LR    R15,R1              COPY LENGTH                 GP AUG18 17020099
         LA    R0,#MODTXT          POINT TO FILTER VALUE       GP AUG18 17030099
         CLCL  R14,R0              THIS NAME OF INTEREST?      GP AUG18 17040099
         BNE   IDRZNEXT            NO, DISCARD THIS ENTRY      GP AUG18 17050099
         BAS   R14,GETIDR          ACQUIRE NEW ELEMENT         GP SEP05 17060099
         ST    R1,IDRLINK          CHAIN IT                    GP SEP05 17070099
         LR    R2,R1                                           GP SEP05 17080099
         BAS   R14,IDRGETID        CONVERT NAME TO ESDID       GP SEP05 17090065
         MVC   IDRESDID,IDRDBL     MOVE ESDID TO IDR RECORD    GP SEP05 17100065
         PACK  IDRDBL,IDZ_DATE                                 GP SEP05 17110065
         LA    R1,IDRDBL+5         ADDRESS OF DATE OF RECORD   GP SEP05 17120065
         LA    R15,IDRDATE                                     GP SEP05 17130065
         BAS   R14,CONVDATE        CONVERT TO MMDDYY FORMAT    GP SEP05 17140065
         MVC   IDRZDATA,IDZ_ZAP_DATA                           GP SEP05 17150065
         MVI   IDRLDATA,8          SET LENGTH                  GP SEP05 17160065
         MVI   IDRTYPE,IDRZAP      INDICATE AMASPZAP ENTRY     GP SEP05 17170065
         OI    FLAGSGG,FOUTSOME    SOME OUTPUT WAS GENERATED   GP SEP18 17180099
IDRZNEXT A     R6,IDZH_ENTRY_LENG  POINT TO NEXT RETURNED ENTRYGP SEP05 17190099
         BCT   R5,IDRZLOOP         PROCESS NEXT ENTRY          GP SEP05 17200065
         ICM   R0,15,BNDRETCD      MORE DATA TO FETCH?         GP APR18 17210099
         BZ    IDRZREDO            YES, GO REQUEST MORE        GP APR18 17220099
         DROP  R6                  IDZ_ENTRY                   GP SEP05 17230065
IDRZDONE EQU   *                                               GP SEP05 17240065
         CLI   #LKEDOPT,X'01'      "LKED" REQUESTED?           GP SEP18 17250099
         BNE   IDRBDONE            NO, SKIP THIS CALL          GP SEP18 17260099
         CLI   #MODLEN,0           ANY FILTER ACTIVE?          GP SEP18 17270099
         BE    IDRBCALL            NO, PROCEED                 GP SEP18 17280099
         L     R0,#ESDPTR          ANY ESD CHAIN ENTRIES?      GP SEP18 17290099
         O     R0,#IDRPTR          ANY IDR CHAIN ENTRIES?      GP SEP18 17300099
         BZ    IDRBDONE            NO, SKIP THIS CALL          GP SEP18 17310099
IDRBCALL EQU   *                                               GP SEP18 17320099
         XC    BNDCURSR,BNDCURSR   FIRST CALL FOR THIS CLASS   GP SEP05 17330065
         MVC   IEWBIDB(IDBH_LENG),IDBI_INIT_VALUES             GP SEP05 17340065
*        IEWBIND FUNC=GETD,        BINDER IDR DATA             GP APR18 17350099
*              VERSION=2,RETCODE=BNDRETCD,RSNCODE=BNDRSNCD,    GP APR18 17360099
*              WORKMOD=MODTOKEN,CLASS=CLS_IDRB,                GP APR18 17370099
*              AREA=BNDDATA,CURSOR=BNDCURSR,COUNT=BNDCOUNT,    GP APR18 17380099
*              MF=(E,BNDPARMS,COMPLETE)                        GP APR18 17390099
         L     R15,DIATOKEN        GET IEWBIND ENTRY POINT     GP APR18 17400099
         CALL  (15),(GETDH,        FUNCTION CODE               GP APR18+17410099
               BNDRETCD,           RETURN CODE                 GP APR18+17420099
               BNDRSNCD,           REASON CODE                 GP APR18+17430099
               MODTOKEN,           MODULE TOKEN                GP APR18+17440099
               CLS_IDRB,           CLASS                       GP APR18+17450099
               HSTZERO,                                        GP APR18+17460099
               BNDDATA,            AREA                        GP APR18+17470099
               BNDCURSR,           CURSOR                      GP APR18+17480099
               BNDCOUNT),          COUNT                       GP APR18+17490099
               VL,MF=(E,BNDPARMS)                              GP APR18 17500099
         CLC   BNDRETCD,=F'8'      MAJOR FAILURE?              GP SEP05 17510065
         BH    IDRBDONE            YES, GIVE UP                GP SEP05 17520065
         BE    IDRBDONE            NO, BUT NO DATA             GP SEP05 17530065
         LA    R6,IEWBIDB+IDBH_LENG                            GP SEP05 17540065
         USING IDB_ENTRY,R6                                    GP SEP05 17550065
         ICM   R5,15,BNDCOUNT      GET RETURNED RECORD COUNT   GP SEP05 17560065
         BNP   IDRBDONE            NO ENTRIES WERE RETURNED    GP SEP05 17570065
         PACK  LKEDTIME(4),IDB_TIME_BOUND                      GP SEP05 17580065
         PACK  IDRDBL,IDB_DATE_BOUND                           GP SEP05 17590065
         LA    R1,IDRDBL+5         ADDRESS OF DATE             GP SEP05 17600065
         LA    R15,LKEDDATE                                    GP SEP05 17610065
         BAS   R14,CONVDATE        CONVERT TO MMDDYY FORMAT    GP SEP05 17620065
         MVC   LKEDNAME,IDB_BINDER_ID                          GP SEP05 17630065
         PACK  IDRDBL(2),IDB_VERSION(3)                        GP SEP05 17640065
         PACK  IDRDBL+1(2),IDB_RELEASE(3)                      GP SEP05 17650065
         MVC   LKEDVVMM(2),IDRDBL  VV.MM IN HEX                GP SEP05 17660065
         OI    FLAGSCC,FIDR        IDR DATA EXISTS             GP SEP05 17670065
         DROP  R6                  IDB_ENTRY                   GP SEP05 17680065
IDRBDONE EQU   *                                               GP SEP05 17690065
         DROP  R2                  IDRENTRY                    GP SEP05 17700065
*        IEWBIND FUNC=DELETEW,     DELETE THE WORKMOD          GP APR18 17710099
*              VERSION=2,RETCODE=BNDRETCD,RSNCODE=BNDRSNCD,    GP APR18 17720099
*              WORKMOD=MODTOKEN,PROTECT=NO,                    GP APR18 17730099
*              MF=(E,BNDPARMS,COMPLETE)                        GP APR18 17740099
         L     R15,DIATOKEN        GET IEWBIND ENTRY POINT     GP APR18 17750099
         CALL  (15),(DELETEWH,     FUNCTION CODE               GP APR18+17760099
               BNDRETCD,           RETURN CODE                 GP APR18+17770099
               BNDRSNCD,           REASON CODE                 GP APR18+17780099
               MODTOKEN,           MODULE TOKEN                GP APR18+17790099
               HSTCODEN),          PROTECT                     GP APR18+17800099
               VL,MF=(E,BNDPARMS)                              GP APR18 17810099
         SPACE 1                                               GP APR18 17820099
*  END THE DIALOG                                              GP APR18 17830099
IDRENDD  EQU   *                                               GP APR18 17840099
*        IEWBIND FUNC=ENDD,        END THE BINDER DIALOG       GP APR18 17850099
*              VERSION=2,RETCODE=BNDRETCD,RSNCODE=BNDRSNCD,    GP APR18 17860099
*              DIALOG=DIATOKEN,PROTECT=NO,                     GP APR18 17870099
*              MF=(E,BNDPARMS,COMPLETE)                        GP APR18 17880099
         L     R15,DIATOKEN        GET IEWBIND ENTRY POINT     GP APR18 17890099
         CALL  (15),(ENDDH,        FUNCTION CODE               GP APR18+17900099
               BNDRETCD,           RETURN CODE                 GP APR18+17910099
               BNDRSNCD,           REASON CODE                 GP APR18+17920099
               DIATOKEN,           DIALOG TOKEN                GP APR18+17930099
               HSTCODEN),          PROTECT                     GP APR18+17940099
               VL,MF=(E,BNDPARMS)                              GP APR18 17950099
*        DELETE EPLOC=HIEWBIND     DISCARD IEWBIND             GP APR18 17960099
         SPACE 1                                               GP SEP05 17970065
IDRBAPIX LR    R1,R13                                          GP SEP05 17980065
         LHI   R0,IDRAPIWL                                     GP APR18 17990099
         FREEMAIN RU,LV=(0),A=(1),SP=21                        GP SEP05 18000065
         PR    ,                   BACK TO THE 370 WORLD       GP SEP05 18010065
         SPACE 2                                               GP SEP05 18020065
IDRGETID BAKR  R14,0                                           GP SEP05 18030065
         LM    R14,R15,IDRDBL      GET NAME ADDRESS AND LENGTH GP SEP05 18040065
         CHI   R15,4               IS THE NAME LENGTH 4?       GP APR18 18050099
         BNE   BIDRNMLD            NO, GO LOAD THE NAME        GP APR18 18060099
         CLI   0(R14),0            IS IT A FULLWORD NUMBER?    GP APR18 18070099
         BNE   BIDRNMLD            NO, GO LOAD THE NAME        GP APR18 18080099
         MVC   IDRDBL+6(2),2(R14)  YES, COPY IT (S0C4 SAFETY)  GP APR18 18090099
         UNPK  IDRDBL(5),IDRDBL+6(3)                           GP APR18 18100099
         TR    IDRDBL(4),TRTABLE   MAKE IT HEX                 GP APR18 18110099
         MVC   IDRDBL+4(4),IDRDBL                              GP APR18 18120099
         MVC   IDRDBL(4),BIDR$PRV  TIDY UP THE NAME            GP APR18 18130099
         B     BIDRNMOK                                        GP APR18 18140099
BIDRNMLD EQU   *                                               GP APR18 18150099
         LA    R0,C' '                                         GP SEP05 18160065
         SLL   R0,24                                           GP SEP05 18170065
         OR    R15,R0                                          GP SEP05 18180065
         LA    R0,IDRDBL                                       GP SEP05 18190065
         LA    R1,8                                            GP SEP05 18200065
         MVCL  R0,R14              COPY CSECT NAME             GP SEP05 18210065
BIDRNMOK EQU   *                                               GP APR18 18220099
         LA    R2,#ESDPTR          ROOT OF ESD CHAIN           GP SEP05 18230065
         SR    R3,R3               RESET ESDID                 GP SEP05 18240065
         USING ESDENTRY,R2                                     GP SEP05 18250065
IDRESDLP LA    R3,1(,R3)           INCREMENT ESDID             GP SEP05 18260065
         ICM   R0,15,ESDLINK       POINT TO THE NEXT ESD       GP SEP05 18270065
         BZ    IDRNEWID            NOT FOUND IN CHAIN          GP SEP05 18280065
         LR    R2,R0               POINT TO NEXT ESD           GP SEP05 18290065
         CLC   ESDNAME,IDRDBL      NAME MATCH?                 GP SEP05 18300065
         BNE   IDRESDLP            NO, CHECK NEXT              GP SEP05 18310065
         B     IDRESDOK            YES, FOUND IT               GP SEP05 18320065
IDRNEWID LA    R0,LENESD                                       GP SEP05 18330065
         ICM   R0,B'1000',SUBPOOLT SUBPOOL 21                  GP SEP05 18340065
         GETMAIN R,LV=(0)                                      GP SEP05 18350065
         XC    0(LENESD,R1),0(R1)                              GP SEP05 18360065
         ST    R1,ESDLINK                                      GP SEP05 18370065
         LR    R2,R1                                           GP SEP05 18380065
         MVC   ESDNAME,IDRDBL                                  GP SEP05 18390065
         STH   R3,ESDID                                        GP SEP05 18400065
* - - - - TOP OF CODE BLOCK FOR PDSE COBOL ATTRIBUTE SUPPORT - GP JUN13 18410095
         TM    IDR_FLGS,$B_TXT     HAVE B_MAP CLASS ENTRY?     GP JUN13 18420095
         BNO   IDRESDOK            NO, NO SECTION DETAILS      GP JUN13 18430095
         USING MAP_ENTRY,R6                                    GP JUN13 18440095
         ICM   R0,15,MAP_QUANTITY  GET ITS SIZE                GP JUN13 18450095
         STCM  R0,7,ESDLEN         SET ITS SIZE                GP JUN13 18460095
         ICM   R0,15,MAP_OFFSET    GET ITS OFFSET              GP JUN13 18470095
         STCM  R0,7,ESDADDR        SAVE MODULE OFFSET          GP JUN13 18480095
         DROP  R6                  MAP_ENTRY                   GP JUN13 18490095
* - - - - END OF CODE BLOCK FOR PDSE COBOL ATTRIBUTE SUPPORT - GP JUN13 18500095
IDRESDOK STH   R3,IDRDBL                                       GP SEP05 18510065
         PR    ,                                               GP SEP05 18520065
         DROP  R2                  ESDENTRY                    GP SEP05 18530065
         SPACE 2                                               GP SEP05 18540065
         DROP  R13                 IDRAPIWK                    GP SEP05 18550065
         SPACE 2                                               GP SEP05 18560065
BIDR$PRV DC    CL4'$PRV'           NUMBERED $PRIVATE PREFIX    GP APR18 18570099
HSTCODEA DC    C'A'                                            GP APR18 18580099
HSTCODEN DC    C'N'                                            GP APR18 18590099
HSTZERO  DC    F'0'                ZERO                        GP APR18 18600099
STARTDH  DC    Y(01,2)             VERSION 2 - STARTDIALOG     GP APR18 18610099
CREATEWH DC    Y(10,2)             VERSION 2 - CREATEWORKMOD   GP APR18 18620099
INCLUDEH DC    Y(40,2)             VERSION 2 - INCLUDE         GP APR18 18630099
GETDH    DC    Y(61,2)             VERSION 2 - GETDATA         GP APR18 18640099
DELETEWH DC    Y(15,2)             VERSION 2 - DELETEWORKMOD   GP APR18 18650099
ENDDH    DC    Y(05,2)             VERSION 2 - ENDDIALOG       GP APR18 18660099
HIEWBIND DC    CL8'IEWBIND '                                   GP APR18 18670099
CLS_IDRL DC    H'6',CL6'B_IDRL'                                GP SEP05 18680065
CLS_IDRU DC    H'6',CL6'B_IDRU'                                GP SEP05 18690065
CLS_IDRZ DC    H'6',CL6'B_IDRZ'                                GP SEP05 18700065
CLS_IDRB DC    H'6',CL6'B_IDRB'                                GP SEP05 18710065
         SPACE 1                                               GP SEP05 18720065
ISITMGDS ISITMGD DCB=0,DATATYPE=YES,MF=L                       GP SEP05 18730065
ISITMGDL EQU   *-ISITMGDS                                      GP SEP05 18740065
DESRVGS  DESERV FUNC=GET,MF=L                                  GP JAN08 18750080
DESRVGL  EQU   *-DESRVGS                                       GP JAN08 18760080
         SPACE 1                                               GP SEP05 18770065
         IEWBUFF FUNC=MAPBUF,BYTES=30720,TYPE=IDRB,VERSION=2   GP APR18 18780099
         IEWBUFF FUNC=MAPBUF,BYTES=30720,TYPE=IDRZ,VERSION=2   GP APR18 18790099
         IEWBUFF FUNC=MAPBUF,BYTES=30720,TYPE=IDRU,VERSION=2   GP APR18 18800099
         IEWBUFF FUNC=MAPBUF,BYTES=30720,TYPE=IDRL,VERSION=2   GP APR18 18810099
         SPACE 2                                               GP SEP05 18820065
***  IDRAPIWK  DSECT MOVED TO @MAP  ***                        GP APR18 18830099
         DC    0D'0'               BACK TO FETCHABLE CODE      GP SEP05 18840065
         SPACE 1                                               GP SEP05 18850065
.NOBAPI2 ANOP  ,                                               GP SEP05 18860065
