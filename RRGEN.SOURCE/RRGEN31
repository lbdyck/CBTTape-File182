**********************************************************************
*  MODULE - RRGEN.                                                   *
*           THIS IS THE MODIFIED VERSION OF RRGEN. THE ORIGINAL      *
*           SOURCE IS IN MEMBER RRGEN ON THIS PDS. THIS VERSION HAS  *
*           BEEN MODIFIED IN THE CALLGEN SECTION. THE MODIFICATION   *
*           WAS TO CHANGE A BALR INSTRUCTION TO A BASSM TO FACILITATE*
*           THE CALLING OF 31 BIT PROGRAMS (I.E. COBOL2). ALSO       *
*           2 INSTRUCTIONS WERE INSERTED AFTER THE BASSM TO INSURE   *
*           THAT THE ADDRESSING MODE WAS SET BACK TO 24 BIT BEFORE   *
*           EXECUTION CONTINUES.                                     *
*                                  MODIFIED BY ALAN SCOTT   07/15/94 *
*                                              CA SERVICES, INC.     *
**********************************************************************
IORTNS   START                                                          00000010
         USING SELF,R12                                                 00000020
         EJECT                                                          00000030
COUNTS   DS    0F                                                       00000040
USERBASE EQU   *                                                        00000050
         USING *,R5                                                     00000060
         DS    CL8192                                                   00000070
         ORG   *-8192                                                   00000080
PRCNT    DC    PL4'0'                                                   00000090
IN1CNT   DC    PL4'0'                                                   00000100
IN2CNT   DC    PL4'0'                                                   00000110
IN3CNT   DC    PL4'0'                                                   00000120
O1CNT    DC    PL4'0'                                                   00000130
O2CNT    DC    PL4'0'                                                   00000140
O3CNT    DC    PL4'0'                                                   00000150
CRDCNT   DC    PL4'0'                                                   00000160
PCHCNT   DC    PL4'0'                                                   00000170
IN1MOD   DC    1F'0'         * THESE WILL                               00000180
IN2MOD   DC    1F'0'         *   CONTAIN THE                            00000190
IN3MOD   DC    1F'0'         *     ADDRESS OF                           00000200
OT1MOD   DC    1F'0'         *       THE I/O MODULE                     00000210
OT2MOD   DC    1F'0'         *         AFTER LOAD                       00000220
OT3MOD   DC    1F'0'         *                                          00000230
PRTMOD   DC    1F'0'         *                                          00000240
RDCDMOD  DC    1F'0'         *                                          00000250
         DS    0D                                                       00000260
         DC    XL8'00'                                                  00000270
CVDWORD  DC    XL8'00'                                                  00000280
RTCD     DC    CL8'00000000' 1ST J= RETURN CODE / LAST 4 = WORKAREA     00000290
DATE6    DC    CL6'YYMMDD'                                              00000300
DATE9    DC    CL9'DD MMM YY'                                           00000310
DATE5    DC    CL5'YYDDD'                                               00000320
         DS    0D                                                     * 00000330
INXWK    DC    XL8'00'                                                * 00000340
INX1     DC    CL4'0000'                                             ** 00000350
INX2     DC    CL4'0000'                                             ** 00000360
IOMOD    DC    A(IORTNS)                                                00000370
AUGSUM   DS    CL9                                                      00000380
ADDEND   DS    CL9                                                      00000390
EXITSK   DC    S(USERR)                                                 00000400
         DS    CL40                                                     00000410
FCON     DC    XL2'FFFF'                                                00000420
CON2     DC    XL2'02'                                                  00000430
ONE      DC    PL1'1'                                                   00000440
FIELD8   DC    CL8' '                                                   00000450
FIELD16  DC    CL16' '                                                  00000460
RESULT   DC    CL30' '                                                  00000470
         DS    0F                                                       00000480
USERR    EQU   *              (EXIT EXECUTED WITHOUT ENTER)             00000490
         LA    R15,9(0,0)        SET RETURN CODE TO 09-EXIT W/O ENTER   00000500
         B     RETURN                                                   00000510
RETURN   EQU   *              * RETURN                                  00000520
         L     R13,4(0,13)    *  CONTROL                                00000530
         RETURN (14,12),T,RC=(15)                                       00000540
EOJRTN   EQU   *    THIS RTN SHOULD LOAD EOJ MODULE TO PRT TOTALS       00000550
         LOAD  EPLOC=EOJMOD       LOAD EOJ MOD  TO PRT TOTALS           00000560
         LR    R15,R0             LOAD 15 WITH EOJMOD EP LOCATION       00000570
         BALR  R14,R15            BR TO EOJ MOD                         00000580
         PACK  CVDWORD,RTCD(4)     PACK RETURN CODE                     00000590
         CVB   R15,CVDWORD         CONVERT RETURN CODE TO BINARY IN R15 00000600
         B     RETURN                                                   00000610
EOJMOD   DC    CL8'RREOJMOT'                                            00000620
BADPARMS EQU   *  THIS RTN HANDLES BAD PARAMETERS = RETURNS WITH '900'  00000630
         LA    R15,8(0,0)        SET RETURN CODE TO 08-PARAMETER ERROR  00000640
         B     RETURN                                                   00000650
* NOTE: USED FOR RRGENSRT LOGIC                                         00000660
         DS    0F                                                       00000670
SRT4     DC    XL4'04'   SORT ENTRY POINT + 4  'RELEASE'                00000680
SRT8     DC    XL4'08'                    + 8  'SORT   '                00000690
SRT12    DC    XL4'0C'                    + 12 'RETURN '                00000700
SORTBR   L     R15,SRT8   LOAD SORT ENTRY POINT ADR + 8                 00000710
         BR    R15        GO TO INPUT EXIT RTN                          00000720
INPROC   B     *+0        TO BE FILLED IN WITH TAG ADR OF INPUT AND     00000730
OUTPROC  B     *+0         OUTPUT PROCEDURES BEFORE PASSING CONTROL     00000740
*                          TO USER . POINTED TO IN CALL LOGIC GENERATED 00000750
*                          FOR RRGENSRT                                 00000760
         EJECT                                                          00000770
USERCODE DS    0D                                                       00000780
         ORG                                                            00000790
         EJECT                                                          00000800
SELF     DS    CL1772                                                   00000810
CARDID   DS    CL10                                                     00000820
CARD     DS    CL80                                                     00000830
PRTID    DS    CL11                                                     00000840
PRTAREA  DS    CL133                                                    00000850
PUNCHID  DS    CL10                                                     00000860
PCHREC   DS    CL80                                                     00000870
CONS     DC    8CL250' '                                                00000880
         EJECT                                                          00000890
         DS    0D                                                       00000900
OURCODE  DS    CL8192                                                   00000910
         ORG   *-8192                                                   00000920
         USING *,R6,R7,R2                                               00000930
         SAVE  (2,12),T,*                                               00000940
         LR    R6,15       SET BASE 12 TO OURCODE                       00000950
HERE     L     R7,BR7                                                   00000960
         LA    R9,TAGTAB                                                00000970
         L     R5,BR5                                                   00000980
         L    R12,=A(SELF)                                              00000990
         ST    13,SYSAVE+4                                              00001000
         LA    13,SYSAVE                                                00001010
         MVC   CARDID(4),=CL4'CARD'                                     00001020
         MVC   PUNCHID(5),=CL5'PUNCH'                                   00001030
         MVC   PRTID(7),=CL7'PRINTER'                                   00001040
         MVI   PRTAREA-1,X'40'                                          00001050
         OPEN  (INCARD,INPUT,PRINTER,OUTPUT)                            00001060
         BAL   R14,DATERTN                                              00001070
         MVC   DATE+6(9),DATEDMY   PUT SYS DATE IN TO HDR               00001080
         BAL   R14,PRTHDR                                               00001090
         B     RDPARM                                                   00001100
BR5      DC    A(IORTNS)                                                00001110
BR7      DC    A(OURCODE+4096)                                          00001120
BR13     DC    A(SYSAVE)                                                00001130
         EJECT                                                          00001140
MLRTN    EQU   *                                                        00001150
ML01     CLI   CARD+23,C'-'             Q. A-ADR INDEXED                00001160
         BNE   ML02                       NO                            00001170
         MVC   AXIND,CARD+24              YES-SAVE INDEX NUMBER         00001180
         MVC   CARD+23(9),CARD+25            -SHIFT TO ELIM DASH + INX  00001190
ML02     CLI   CARD+28,C'-'             O. B-ADR INDEXED                00001200
         BNE   ML03                       NO                            00001210
         MVC   BXIND,CARD+29              YES-SAVE INDEX NUMBER         00001220
ML03     LA    R8,OPCODE+304   POINT 8 TO MIDPOINT OF TABLE             00001230
         LA    R5,0                     LOAD 5 WITH 0                   00001240
         LA    R4,6            LOAD 4 WITH TALLY CT OF 6                00001250
ML04     CLC   CARD+6(5),0(R8)     Q. OPCODE = TABLE                    00001260
         BE    ML08                       YES                           00001270
         BCT   R4,ML05                 Q. NO-IS SEARCH FINI             00001280
ML04A    MVI   OPERR,C'E'                YES SET OPERATION ERR          00001290
         MVI   NOGOSW,C'1'               TURN ON NO GO SWITCH.          00001300
         B     PARPRT                                                   00001310
ML05     BH    ML06                    Q. CARD OP > TABLE //YES ADD     00001320
         S     R8,OPADRS(R5)       //NO SUB FROM TABLE ADR              00001330
         B     ML07                                                     00001340
ML06     A     R8,OPADRS(R5)                                            00001350
ML07     LA    R5,4(R5)                   BUMP REG 5 BY 4               00001360
         B     ML04                       GO COMPARE AGAIN              00001370
ML08     MVC   OP(2),10(R8)        MOVE OPCODE+MASK TO INST             00001380
         MVC   CONTROL(3),5(R8)    MOVE CONTROL INFO                    00001390
         MVC   ADR1(4),12(R8)                                           00001400
         MVC   ML09+2(2),8(R8)     SETUP BRANCH TO APPRO OP CODE        00001410
ML09     B     ML09     *RTN & BRANCH TO IT                             00001420
OPCODE   DS    0F                                                       00001430
         DC    CL5'ADD  '          ADD                                  00001440
         DC    CL3'016'                                                 00001450
         DC    S(SIZERTN)                                               00001460
         DC    XL2'FA00'                                                00001470
         DC    S(ADRRTN)                                                00001480
         DC    S(ADDRTN)                                                00001490
         DC    CL5'AP   '          AP                                   00001500
         DC    CL3'016'                                                 00001510
         DC    S(SIZERTN2)                                              00001520
         DC    XL2'FA00'                                                00001530
         DC    S(ADRRTN)                                                00001540
         DC    S(APRTN)                                                 00001550
         DC    CL8'CALL    '       CALL                                 00001560
         DC    S(CALLRTN)                                               00001570
         DC    XL2'0000'                                                00001580
         DS    CL4                                                      00001590
         DC    CL5'COM  '          COM                                  00001600
         DC    CL3'256'                                                 00001610
         DC    S(SIZERTN)                                               00001620
         DC    XL2'D500'                                                00001630
         DC    S(ADRRTN)                                                00001640
         DC    S(COMRTN)                                                00001650
         DC    CL5'CONS '          CONS                                 00001660
         DC    CL3'040'                                                 00001670
         DC    S(SIZERTN)                                               00001680
         DC    XL2'0000'                                                00001690
         DC    S(AADRRTN)                                               00001700
         DC    S(CONSRTN)                                               00001710
         DC    CL5'CP   '          CP                                   00001720
         DC    CL3'016'                                                 00001730
         DC    S(SIZERTN2)                                              00001740
         DC    XL2'F900'                                                00001750
         DC    S(ADRRTN)                                                00001760
         DC    S(CPRTN)                                                 00001770
         DC    CL5'CVBZ'          CVBZ                                  00001780
         DC    CL3'016'                                                 00001790
         DC    S(SIZERTN2)                                              00001800
         DC    XL2'FFFF'                                                00001810
         DC    S(ADRRTN)                                                00001820
         DC    S(CVBZNRTN)                                              00001830
         DC    CL5'CVZB'          CVZB                                  00001840
         DC    CL3'016'                                                 00001850
         DC    S(SIZERTN2)                                              00001860
         DC    XL2'FFFF'                                                00001870
         DC    S(ADRRTN)                                                00001880
         DC    S(CVBINRTN)                                              00001890
         DC    CL5'DVD  '          DIVIDE                               00001900
         DC    CL3'015'                                                 00001910
         DC    S(SIZERTN2)                                              00001920
         DC    XL2'FFFF'                                                00001930
         DC    S(ADRRTN)                                                00001940
         DC    S(DVDRTN)                                                00001950
         DC    CL8'ENTER   '       ENTER                                00001960
         DC    S(ENTRTN)                                                00001970
         DC    XL2'47F0'                                                00001980
         DS    CL4                                                      00001990
         DC    CL8'EXIT    '       EXIT                                 00002000
         DC    S(EXRTN)                                                 00002010
         DS    CL6                                                      00002020
         DC    CL8'GE      '        GE                                  00002030
         DC    S(BRRTN)                                                 00002040
         DC    XL2'4780'                                                00002050
         DS    CL4                                                      00002060
         DC    CL8'GH      '        GH                                  00002070
         DC    S(BRRTN)                                                 00002080
         DC    XL2'4720'                                                00002090
         DS    CL4                                                      00002100
         DC    CL8'GL      '        GL                                  00002110
         DC    S(BRRTN)                                                 00002120
         DC    XL2'4740'                                                00002130
         DS    CL4                                                      00002140
         DC    CL8'GNE     '        GNE                                 00002150
         DC    S(BRRTN)                                                 00002160
         DC    XL2'4770'                                                00002170
         DS    CL4                                                      00002180
         DC    CL8'GO      '       GO                                   00002190
         DC    S(BRRTN)                                                 00002200
         DC    XL2'47F0'                                                00002210
         DS    CL4                                                      00002220
         DC    CL5'MOVE '          MOVE                                 00002230
         DC    CL3'900'                                                 00002240
         DC    S(SIZERTN)                                               00002250
         DC    XL2'D200'                                                00002260
         DC    S(ADRRTN)                                                00002270
         DC    S(MOVERTN)                                               00002280
         DC    CL5'MPY  '          MULTIPLY                             00002290
         DC    CL3'015'                                                 00002300
         DC    S(SIZERTN2)                                              00002310
         DC    XL2'FFFF'                                                00002320
         DC    S(ADRRTN)                                                00002330
         DC    S(MPYRTN)                                                00002340
         DC    CL5'MVN  '          MVN                                  00002350
         DC    CL3'256'                                                 00002360
         DC    S(SIZERTN)                                               00002370
         DC    XL2'D100'                                                00002380
         DC    S(ADRRTN)                                                00002390
         DC    S(MVNRTN)                                                00002400
         DC    CL5'MVO  '          MVO                                  00002410
         DC    CL3'016'                                                 00002420
         DC    S(SIZERTN2)                                              00002430
         DC    XL2'F100'                                                00002440
         DC    S(ADRRTN)                                                00002450
         DC    S(MVORTN)                                                00002460
         DC    CL5'MVZ  '          MVZ                                  00002470
         DC    CL3'256'                                                 00002480
         DC    S(SIZERTN)                                               00002490
         DC    XL2'D300'                                                00002500
         DC    S(ADRRTN)                                                00002510
         DC    S(MVZRTN)                                                00002520
         DC    CL5'NC   '          NC                                   00002530
         DC    CL3'256'                                                 00002540
         DC    S(SIZERTN)                                               00002550
         DC    XL2'D400'                                                00002560
         DC    S(ADRRTN)                                                00002570
         DC    S(NCRTN)                                                 00002580
         DC    CL5'OC   '          OC                                   00002590
         DC    CL3'256'                                                 00002600
         DC    S(SIZERTN)                                               00002610
         DC    XL2'D600'                                                00002620
         DC    S(ADRRTN)                                                00002630
         DC    S(OCRTN)                                                 00002640
         DC    CL5'PACK '          PACK                                 00002650
         DC    CL3'016'                                                 00002660
         DC    S(SIZERTN2)                                              00002670
         DC    XL2'F200'                                                00002680
         DC    S(ADRRTN)                                                00002690
         DC    S(PACKRTN)                                               00002700
         DC    CL8'PRINT   '       PRINT                                00002710
         DC    S(PRTRTN)                                                00002720
         DC    XL2'0000'                                                00002730
         DS    CL4                                                      00002740
         DC    CL8'READ    '       READ                                 00002750
         DC    S(RDRTN)                                                 00002760
         DC    XL2'0000'                                                00002770
         DS    CL4                                                      00002780
         DC    CL5'SP   '          SP                                   00002790
         DC    CL3'016'                                                 00002800
         DC    S(SIZERTN2)                                              00002810
         DC    XL2'FB00'                                                00002820
         DC    S(ADRRTN)                                                00002830
         DC    S(SPRTN)                                                 00002840
         DC    CL5'SUB  '          SUB                                  00002850
         DC    CL3'016'                                                 00002860
         DC    S(SIZERTN)                                               00002870
         DC    XL2'FB00'                                                00002880
         DC    S(ADRRTN)                                                00002890
         DC    S(SUBRTN)                                                00002900
         DC    CL8'TPM     '       TPM                                  00002910
         DC    S(TPMRTN)                                                00002920
         DC    XL2'4720'                                                00002930
         DS    CL4                                                      00002940
         DC    CL5'TRANS'     TRANS                                     00002950
         DC    CL3'256'                                                 00002960
         DC    S(SIZERTN)                                               00002970
         DC    XL2'DC00'                                                00002980
         DC    S(ADRRTN)                                                00002990
         DC    S(TRRTN)                                                 00003000
         DC    CL8'TRZ     '       TRZ                                  00003010
         DC    S(BRRTN)                                                 00003020
         DC    XL2'4780'                                                00003030
         DS    CL4                                                      00003040
         DC    CL5'UNPK '          UNPK                                 00003050
         DC    CL3'016'                                                 00003060
         DC    S(SIZERTN2)                                              00003070
         DC    XL2'F300'                                                00003080
         DC    S(ADRRTN)                                                00003090
         DC    S(UNPKRTN)                                               00003100
         DC    CL8'UTC     '       UTC                                  00003110
         DC    S(BRRTN)                                                 00003120
         DC    XL2'47F0'                                                00003130
         DS    CL4                                                      00003140
         DC    CL8'WRITE   '       WRITE                                00003150
         DC    S(WRTRTN)                                                00003160
         DC    XL2'0000'                                                00003170
         DS    CL4                                                      00003180
         DC    CL5'XC   '          XC                                   00003190
         DC    CL3'256'                                                 00003200
         DC    S(SIZERTN)                                               00003210
         DC    XL2'D700'                                                00003220
         DC    S(ADRRTN)                                                00003230
         DC    S(XCRTN)                                                 00003240
         DC    CL5'XCONS'          XCONS                                00003250
         DC    CL3'020'                                                 00003260
         DC    S(SIZERTN)                                               00003270
         DC    XL2'0000'                                                00003280
         DC    S(AADRRTN)                                               00003290
         DC    S(XCONSRTN)                                              00003300
         DC    3CL16'ZZZZZZZZZZZZZZZZ'                                  00003310
OPADRS   DS    0F            * THIS TABLE IS USED TO BINARY             00003320
         DC    XL4'A0'        * SEARCH THE OPCODE TABLE  * DECIMAL 160  00003330
         DC    XL4'50'        *                                     80  00003340
         DC    XL4'20'        *                                     32  00003350
         DC    XL4'10'        *                                     16  00003360
         DC    XL4'10'             *                         *DEC 16    00003370
         EJECT                                                          00003380
IN1      DC    CL6'ITAPE1'                                              00003390
ADRA      DC   XL2'7000'     LHE ADR OF REC AREA                        00003400
         DC    F'0'                     SIZE OF REC AREA                00003410
         DC    F'0'                     BLOCK FACTOR                    00003420
         DC    F'0'                     BLOCK SIZE                      00003430
         DS    CL20                     STORAGE FOR CARD COL 22 THRU 41 00003440
IN2      DC    CL6'ITAPE2'                                              00003450
ADRB      DC   XL2'8000'                                                00003460
         DS    CL32                                                     00003470
IN3      DC    CL6'ITAPE3'                                              00003480
ADRC      DC   XL2'9000'                                                00003490
         DS    CL32                                                     00003500
DK1      DC    CL6'DISK1 '                                              00003510
ADRD     DC    H'0'                                                     00003520
         DS    CL32                                                     00003530
DK2      DC    CL6'DISK2 '                                              00003540
ADRE     DC    H'0'                                                     00003550
         DS    CL32                                                     00003560
OUT1     DC    CL6'OTAPE1'                                              00003570
ADRJ     DC    XL2'B000'                0 + R 10                        00003580
         DS    CL32                                                     00003590
OUT2     DC    CL6'OTAPE2'                                              00003600
ADRK     DC    XL2'B384'      900 DECIMAL + R 10                        00003610
         DS    CL32                                                     00003620
OUT3     DC    CL6'OTAPE3'                                              00003630
ADRL     DC    XL2'B708'     1800 DECIMAL + R 10                        00003640
         DS    CL32                                                     00003650
         DS    0F                      *FORMAT AABBBBBB                 00003660
AINXAR   DC    6XL4'FFFFFFFF'                                    ****** 00003670
BINXAR   DC    6XL4'FFFFFFFF'                                    ****** 00003680
INSHOLD  DS    0XL80                   * WHERE  A= SIZE OF INST-1       00003690
         DC    10XL8'FFFFFFFFFFFFFFFF' *        B= INSTRUCTION          00003700
XIND     DS    0CL2      INDEXING INDICATOR                             00003710
AXIND    DC    XL1'00'   00=NO INDEXING ON A-ADR F1= INX1 F2=INX2 ***** 00003720
BXIND    DC    XL1'00'   00=NO INDEXING ON B-ADR F1= INX1 F2=INX2 ***** 00003730
**** INSTUCTION BUILD AREA                                              00003740
         DS    0F                                                       00003750
SSINST   DS    0CL6      OP/L1L2/B1D1/B2D2 OR OP/LENGTH/B1D1/B2D2       00003760
RXINST   DS    0CL4      OP/M1X1/B1D1                                   00003770
OP       DS    CL1                                                      00003780
LEN      DS    CL1       L1L1L2L2 OR LLLLLLLL OR MMMMXXXX               00003790
B1D1     DS    0CL2      BBBBDDDD/DDDDDDDD                              00003800
B1       DS    CL1                                                      00003810
D1       DS    CL1                                                      00003820
B2D2     DS    0CL2      BBBBDDDD/DDDDDDDD                              00003830
B2       DS    CL1                                                      00003840
D2       DS    CL1                                                      00003850
**                       EXECUTING THE GENERATED CODE. IF = 1 PROGRAM   00003860
LOCERR   DC    CL1' '   *ERROR FLAGS * SPACE=NO ERROR                   00003870
OPERR    DC    CL1' '   *               E   =ERROR                      00003880
SIZEERR  DC    CL1' '                                                   00003890
ADRERR   DC    CL1' '                                                   00003900
NOGOSW   DC    CL1'0'   * THIS SW IS SET IF AN ERROR IS FOUND IN A      00003910
**                       PARAMETER DURING GENERATION. IS CKED BEFORE    00003920
**                       IS ABORTED.                                    00003930
CONTROL  DS    0CL9                                                     00003940
SZEDIT   DS    CL3       EDIT CRITERIA FOR SIZE RTN.                    00003950
ADR1     DS    CL2                                                      00003960
ADR2     DS    CL2                                                      00003970
ISCON    DC    CL3'IS '                                                 00003980
ISRCON   DC    CL3'ISR'                                                 00003990
EOJCON   DC    CL3'EOJ'                                                 00004000
ENDUSER  DC    A(USERBASE+8192)                                         00004010
CENDUSER DC    A(USERBASE+8192)                                         00004020
BDLIST   DC    XL2'6FFF'                                                00004030
         EJECT                                                          00004040
         DS    0F                                                       00004050
RDPARM   EQU   *                                                        00004060
******** THIS  ROUTINE READS INPUT PARAMETERS.                          00004070
         GET   INCARD,CARD                                              00004080
         CLI   CARD,C'T'    Q. IS THERE A TAG                           00004090
         BNE   NOTAG     NO                                             00004100
         PUT   PRINTER,PRTAREA    YES SPACE 1 LINE                      00004110
NOTAG    MVC   PRTAREA+18(80),CARD                                      00004120
         CLI   CARD,C'*'           Q. IS THIS A REMARK                  00004130
         BNE   NOREMARK              NO                                 00004140
         PUT   PRINTER,PRTAREA+1        YES PRINT IT                    00004150
         MVC   PRTAREA(133),PRTAREA-1   CLEAR REMARK OUT OF PRT AREA    00004160
         B     RDPARM                   GO READ NEXT RECORD             00004170
NOREMARK MVC   AXIND(2),=XL2'0000'  TURN INDEX IND OFF                  00004180
IOSWITCH BC    15,IOCK01          * THIS INS NOP AFTER LAST IO PARM.    00004190
NONIO    CLC   CARD(4),=CL4'STOP'                                       00004200
         BE    PAREND                                                   00004210
         CLC   CARD(4),=C'    '                                         00004220
         BE    MLRTN                                                    00004230
         BAL   R14,TAGRTN                                               00004240
         B     MLRTN                                                    00004250
IOCK01   MVI   IOSWITCH+1,X'00'                                         00004260
         L     R11,RECAR                                                00004270
         LH    R10,USERBD                                               00004280
         B     NONIO                                                    00004290
RECAR    DC    A(USERCODE)                                              00004300
USERBD   DC    S(USERCODE)                                              00004310
         EJECT                                                          00004320
PARPRT   EQU   *                                                        00004330
*******  THIS ROUTINE PRINTS THE INPUT CARD AND THE MACHINE CODE ****** 00004340
*** GENERATED FOR THE PARAMETER. THE MACHINE CODE AND ITS MACHINE ***** 00004350
*** ADDRESS WILL BE PRINTED IN HEXIDECIMAL.                      ****** 00004360
         MVI   PARM01C+1,X'00'   TURN OFF PRT BYPASS SW                 00004370
         LA    R3,AINXAR                ***********************  ****** 00004380
         CLC   AINXAR(2),FFCON        *SET UP INSTRUCTION HOLD*  ****** 00004390
         BE    PARPRT01               * AREA FOR PARAMETER    *  ****** 00004400
         CLC   BINXAR(2),FFCON        * PRINT ROUTINE.        *  ****** 00004410
         BNE   PARPRTR                * INSTUCTIONS START AT  *  ****** 00004420
         MVC   BINXAR(80),INSHOLD     *  INSHOLD IF NO INDEXES*  ****** 00004430
         B     PARPRTR                *     IF INDEXING       *  ****** 00004440
PARPRT01 LA    R3,BINXAR              *  INSTRUCTIONS WILL BE *  ****** 00004450
         CLC   BINXAR(2),FFCON        *  IN AINXAR OR BINXAR  *  ****** 00004460
         BNE   PARPRTR                  *      OR                 ***** 00004470
         LA    R3,INSHOLD               *     BOTH                ***** 00004480
PARPRTR  LA    R5,8(0)                                                  00004490
         CLC   LOCERR(4),=CL4'    '                                     00004500
         BNE   PARMERR                                                  00004510
         CLC   0(2,R3),FFCON                                            00004520
         BE    PARM02                                                   00004530
PARM01   MVC   HEXHLD(6),FFCON                                          00004540
         ST    R11,HEXHLD         STORE ACTUAL INST ADR                 00004550
         BAL   R14,HEXRTN         GO CONVERT TO HEX PRINT A=C1          00004560
         MVC   PRTAREA+111(6),CONVHEX+2      ACT ADR TO PRT LINE        00004570
         STH   R10,HEXHLD                                               00004580
         C     R11,ENDUSER      Q. OUT OF MEM FOR GEN USER INSTRUCTIONS 00004590
         BL    PARM01A                 NO                               00004600
         LA    R15,10(0,0)     YES-SET RETURN CODE TO 10-OUT OF MEMORY  00004610
         LA    R5,USERBASE         LOAD R5 SO THE RETURN RTN CAN BE USE 00004620
         B     RETURN               GO TO RETURN                        00004630
PARM01A  MVC   0(6,R11),2(R3)      MOVE INST TO USERCODE                00004640
         LA    R8,1(0)                                                  00004650
         MVI   0(R3),X'00'                                              00004660
         AH    R8,0(R3)                                                 00004670
         AR    R10,R8                                                   00004680
PARM01B  AR    R11,R8                                                   00004690
         BAL   R14,HEXRTN                                               00004700
         MVC   PRTAREA+103(4),CONVHEX                                   00004710
PARM01C  NOP   PARM02A    BYPASS PRINTING EXCEPT 1ST LINE               00004720
PARM02   PUT   PRINTER,PRTAREA+1                                        00004730
         MVI   PARM01C+1,X'F0'  TURN ON SW                              00004740
PARM02A  MVC   PRTAREA(133),PRTAREA-1                                   00004750
         MVC   0(2,R3),FFCON                                            00004760
         AR    R3,R5                                                    00004770
         CLC   0(2,R3),FFCON                                            00004780
         BNE   PARM01                                                   00004790
         B     RDPARM                                                   00004800
PARMERR  MVI   NOGOSW,C'1'                                              00004810
         CLC   LOCERR(1),=C'E'                                          00004820
         BE    ERR01                                                    00004830
         CLC   OPERR(1),=C'E'                                           00004840
         BE    ERR02                                                    00004850
         CLC   SIZEERR(1),=C'E'                                         00004860
         BE    ERR03                                                    00004870
         MVC   PRTAREA+1(13),=CL13'ADDRESS ERROR'                       00004880
ERREXIT  MVC   LOCERR(4),=C'    '                                       00004890
         MVI   AINXAR,X'FF'                                      ****** 00004900
         MVC   AINXAR+1(127),AINXAR                              ****** 00004910
         B     PARM02                                                   00004920
ERR01    MVC   PRTAREA+1(14),=CL14'LOCATION ERROR'                      00004930
         B     ERREXIT                                                  00004940
ERR02    MVC   PRTAREA+1(15),=CL15'OPERATION ERROR'                     00004950
         B     ERREXIT                                                  00004960
ERR03    MVC   PRTAREA+1(10),=CL10'SIZE ERROR'                          00004970
         B     ERREXIT                                                  00004980
         EJECT                                                          00004990
BXRTN    EQU   *                                                 ****** 00005000
*******  THIS  ROUTINE ALTERS THE CODE THAT ALLOWS INDEXING FOR  ****** 00005010
**@****  ADDRESS AT B1D1. THE CODE TO PACK THE INDEX FIELD,       ***** 00005020
*******  CONVERT INDEX TO BINARY AND ADD THE INDEX TO THE BASE   ****** 00005030
*******  IS PLACED IN LINE. R3= B ADDR IND REG,R2='A'ADDR INX.   ****** 00005040
         XR    R4,R4         *CLEAR REG 4.                       ****** 00005050
         IC    R4,B1D1       *GET REAL BASE REG.                 ****** 00005060
         SRL   R4,4(0)       *MOVE BASE REG TO LOW DIGIT OF R4.   ***** 00005070
         MVZ   B1D1(1),=X'30'                                        ** 00005080
         STC   R4,INSTIX3+3  *BASE REG TO ADD REG INS.            ***** 00005090
         MVZ   INSTIX3+3(1),=X'30' *B INDEX REG   TO ADD REG INS.****** 00005100
         MVZ   INSTIX2+3(1),=X'30' *B INDEX REG TO CVB INS.      ****** 00005110
         CLI   BXIND,X'F1'   *'B' ADDR NEED INX1 2               ****** 00005120
         BNE   BXRTN02        NO                                 ****** 00005130
ABXCOM   MVC   BINXAR(8),INSTIX1  * PACK INX1 INS TO HOLD AREA.  ****** 00005140
BXRTN01  MVC   BINXAR+8(6),INSTIX2 * CVB INS TO HOLD AREA.       ****** 00005150
         MVC   BINXAR+16(4),INSTIX3 * AR INS TO HOLD AREA.        ***** 00005160
         BR    R14                    RETURN                     ****** 00005170
BXRTN02  MVC   BINXAR(8),INSTIX4   * PACK INX2 INS TO HOLD AREA. ****** 00005180
         CLI   BXIND,X'F2'        *B ADR NEED IN2                ****** 00005190
         BE    BXRTN01                                           ****** 00005200
         MVI   ADRERR,C'E'                                        ***** 00005210
         B     PARPRT                                            ****** 00005220
AXRTN    EQU   *                                                  ***** 00005230
***  THIS RTN INDEXES THE ADDRESS AT B2D2.                        ***** 00005240
         XR    R4,R4         * CLEAR REG 4                        ***** 00005250
         IC    R4,B2D2       * GET REAL BASE                      ***** 00005260
         SRL   R4,4(0)       * BASE REG TO LOW DIGIT OF R4.       ***** 00005270
         STC   R4,INSTIX3+3  * BASE REG TO AR INS.                ***** 00005280
         MVZ   B2D2(1),=X'20'                                        ** 00005290
         MVZ   INSTIX3+3(1),=X'20' 'A' INX REG TO AR INS.         ***** 00005300
         MVZ   INSTIX2+3(1),=X'20' 'A' INX REG TO CVB INS.        ***** 00005310
         CLI   AXIND,X'F1'        *'A' ADDR NEED INX1.?           ***** 00005320
         BNE   AXRTN02                                            ***** 00005330
         MVC   AINXAR(8),INSTIX1   * PK INX1 INS TO HOLD AREA.    ***** 00005340
AXRTN01  MVC   AINXAR+8(6),INSTIX2  * CVB INS TO HOLD AREA.       ***** 00005350
         MVC   AINXAR+16(4),INSTIX3  * AR INS TO HOLD AREA.       ***** 00005360
         BR    R14                                                ***** 00005370
AXRTN02  MVC   AINXAR(8),INSTIX4      * PK INX2 INS TO HOLD AREA. ***** 00005380
         CLI   AXIND,X'F2'                                        ***** 00005390
         BE    AXRTN01                                            ***** 00005400
         MVI   ADRERR,C'E'                                        ***** 00005410
         B     PARPRT                                             ***** 00005420
INSTIX1  DC    XL2'05'                                            ***** 00005430
         PACK  INXWK(8),INX1(4)                                   ***** 00005440
INSTIX2  DC    XL2'03'                                            ***** 00005450
         CVB   R2,INXWK                                           ***** 00005460
INSTIX3  DC    XL2'01'                                            ***** 00005470
         AR    R2,R3                                              ***** 00005480
INSTIX4  DC    XL2'05'                                            ***** 00005490
         PACK  INXWK(8),INX2(4)                                   ***** 00005500
         EJECT                                                          00005510
PRTHDR   EQU   *                                                        00005520
******* THIS ROUTINE PRINTS THE HEADER AND RESTORES THE LINE COUNT.**** 00005530
         ST    R14,HDRSAVE                                              00005540
         MVC   PRTAREA(133),PRTAREA-1                                   00005550
         MVI   PRTAREA,X'89'                                            00005560
         PUT   PRINTER,PRTAREA+1                                        00005570
         MVC   PRTAREA+1(132),HEADER1                                   00005580
         MVI   PRTAREA,X'09'                                            00005590
         PUT   PRINTER,PRTAREA+1                                        00005600
         MVC   PRTAREA+1(132),HEADER2                                   00005610
         MVI   PRTAREA,X'19'                                            00005620
         PUT   PRINTER,PRTAREA+1                                        00005630
         MVC   PRTAREA(133),PRTAREA-1                                   00005640
         MVI   LINECT,X'3E'                                             00005650
         PUT   PRINTER,PRTAREA+1         SPACE ATER HDRS                00005660
         L     R14,HDRSAVE                                              00005670
         BR    R14                                                      00005680
HDRSAVE  DS    F'0'                                                     00005690
         DS    0F                                                       00005700
PKONE    DC    PL2'1'                                                   00005710
PAGECT   DC    PL2'+0'                                                  00005720
HEADER1  DS    0CL132                                                   00005730
DATE     DC    CL20'DATE                '                               00005740
         DC    CL31'360 GENERATOR PARAMETER LISTING'                    00005750
         DC    CL53' '                                                  00005760
         DC    CL10'ADDRESS   '                                         00005770
         DC    CL18' '                                                  00005780
HEADER2  DS    0CL132                                                   00005790
         DC    CL17'ERROR FLAGS     /'                                  00005800
         DC    CL29'LOC    OP    SIZE   ADDRESS  '                      00005810
         DC    CL32'      CONSTANTS OR REMARKS      '                   00005820
         DC    CL33'                     BASE/DISP   '                  00005830
         DC    CL21'ACTUAL               '                              00005840
LINECT   DS    CL1                                                      00005850
         DS    0F                                                       00005860
         EJECT                                                          00005870
HEXRTN   EQU   *                                                        00005880
**** THIS ROUTINE CONVERTS THE SIX BYTE FIELD AT HEXHLD. ONE BYTE ***** 00005890
***** AT HEXHLD IS CONVERTED TO ITS TWO BYTE HEX EQUIVILANT FOR   ***** 00005900
*****  PRINTING. ('A' AT HEXHLD =  'C1' AT CONVHEX. CNVCNT IS     ***** 00005910
***** USED TO BUMP THE ADDRESS COUNTERS (R10 AND R11) AFTER INS   ***** 00005920
*****  IS MOVED TO USER AREA.                                     ***** 00005930
         UNPK  CONVHEX(13),HEXHLD(7)    UNPACK HEXHLD                   00005940
         CLC   CONVHEX+8(4),FFCON      Q. DATA = 6 POS9                 00005950
         BNE   HEX01                    A.YES                           00005960
         CLC   CONVHEX+4(4),FFCON      Q. DATA = 4 POS                  00005970
         BNE   HEX02                    A.YES                           00005980
         MVI   CNVCNT,X'03'                                             00005990
         B     HEX03                                                    00006000
HEX01    MVI   CNVCNT,X'0B'                                             00006010
         B     HEX03                                                    00006020
HEX02    MVI   CNVCNT,X'07'                                             00006030
HEX03    TR    CONVHEX(12),HEXTAB       CONVERT TO HEX FOR PRINT.       00006040
         MVC   HEXHLD(6),FFCON               CLEAR HEXHOLD              00006050
         BR    R14                                                      00006060
         DS    0F                                                       00006070
HEXHLD   DC    XL7'FFFFFFFFFFFF04'                                      00006080
         DC    CL1' '                                                   00006090
CONVHEX  DC    XL12'00'                                                 00006100
CNVCNT   DC    XL1'00'                                                  00006110
PACK1    DC    PL2'1'                                                   00006120
PAGECNT  DC    PL2'0'                                                   00006130
LINECNT  DC    H'56'                                                    00006140
         EJECT                                                          00006150
BRRTN    EQU   *                                                        00006160
**** THIS ROUTINE HANDLES GENERATION OF TAG ADDRESSES FOR BRANCH ****** 00006170
***** INSTRUCTIONS. THIS ROUTINE PLACES A '2' IN REG5 FOR TGRTN. ****** 00006180
         LA    R4,2(0)                                                  00006190
         BAL   R14,TGRTN                                                00006200
         MVC   INSHOLD+2(4),RXINST                                      00006210
         MVI   INSHOLD+1,X'03'                                          00006220
         B     PARPRT                                                   00006230
         EJECT                                                          00006240
TPMRTN   EQU   *                                                        00006250
**** THIS RTN HANDLES GENERATION OF A&B ADRS FOR TPM INST. THIS  ****** 00006260
***** RTN GENERATES TWO INST.(BH&BL),PLACES A'2'IN R4 IF'A'ADR OF****** 00006270
***** TPM AND A'6'IN R4 IF'B'ADR OF TPM.                         ****** 00006280
         LA    R4,2(0)                                                  00006290
         BAL   R14,TGRTN                                                00006300
         MVI   INSHOLD+1,X'03'                                          00006310
         MVC   INSHOLD+2(4),RXINST                                      00006320
         LA    R4,6(0)                                                  00006330
         MVC   0(4,R11),INSHOLD+2      * MOVE 1 BR IN LINE              00006340
         MVC   OP(2),=XL2'4740'                                         00006350
         MVC   CARD+19(4),CARD+24                                       00006360
         BAL   R14,TGRTN                                                00006370
         MVI   INSHOLD+9,X'03'                                          00006380
         MVC   INSHOLD+10(4),RXINST                                     00006390
         MVC   INSHOLD+2(4),0(R11) * MOVE IT BACK / TGRTN MAY CHG IT    00006400
         B     PARPRT                                                   00006410
         EJECT                                                          00006420
SIZERTN  EQU   *                                                        00006430
**** THIS ROUTINE VALIDATES SIZE ENTRY ACCORDING TO CONTROL INFO.****** 00006440
***** THE SIZE IS PASSED TO CONVERSION RTN RIGHT JUSTIFIED IN    ****** 00006450
****** SIZEWK.                                                   ****** 00006460
         MVC   SIZEWK,SZZERO                                            00006470
         CLC   CARD+13(1),=C' '        Q. SIZE 1 POS.                   00006480
         BE    SZ01                     A.YES                           00006490
         CLC   CARD+14(1),=C' '        Q. SIZE 2 POS                    00006500
         BE    SZ02                     A.YES                           00006510
         CLC   CARD+15(1),=C' '        Q. SIZE TOO BIG                  00006520
         BNE   SZERR                    A.YES                           00006530
         MVC   SIZEWK+1(3),CARD+12      MOVE 3 POS SIZE TO SIZEWK.      00006540
         B     SZ03                                                     00006550
SZ01     MVC   SIZEWK+3(1),CARD+12      MOVE 1 POS SIZE TO SIZEWK.      00006560
         B     SZ03                                                     00006570
SZ02     MVC   SIZEWK+2(2),CARD+12      MOVE 2  POS SIZE TO SIZEWK.     00006580
SZ03     CLC   SZEDIT(3),SIZEWK+1      Q. SIZE GREATER THAN MAX.        00006590
         BL    SZERR                    A.YES                           00006600
         BAL   R14,CNVRTN               PERFORM CONVERSION RTN.         00006610
         C     R3,FFCON                Q. CONVERSION GOOD.              00006620
         BE    SZERR                    A.NO                            00006630
         C     R3,ZERO                 Q. SIZE = ZERO.                  00006640
         BE    SZERR                    A.YES                           00006650
         BCTR  R3,0                     DECREMENT SIZE BY 1.            00006660
         ST    R3,SIZEHLD               HOLD IN SIZE HOLD.              00006670
         MVC   SZEXIT+2(2),ADR1         MOVE NEXT RTN ADR TO BR.        00006680
SZEXIT   B     SZEXIT                   BRANCH TO NEXT RTN.             00006690
SZERR    MVI   SIZEERR,C'E'             SET SIZE ERROR FLAG.            00006700
         MVI   NOGOSW,C'1'                                              00006710
         B     PARPRT                   GO PRT PARMETER.                00006720
         DS    0D                                                       00006730
SIZWK    DC    CL4'0000'                                                00006740
SIZEWK   DC    CL4'0000'                                                00006750
FFCON    DC    XL8'FFFFFFFFFFFFFFFF'                                    00006760
SIZEHLD  DC    XL4'00'                                                  00006770
SZZERO   DC    CL4'0000'                                                00006780
         EJECT                                                          00006790
SIZERTN2 EQU   *                                                        00006800
* THIS RTN HANDLES INST WITH  TWO SIZE ENTRIES  EG 4,6                  00006810
         DS    0F                                                       00006820
         MVC   HOLDSZ,CARD+12      SAVE SIZE FIELD                      00006830
         MVC   SZ2RTNEX+2(2),ADR1  SAVE ADR OF WHERE SIZE RTN GOES NEXT 00006840
         MVC   ADR1,SZRETRN1       MAKE SIZE RTN COME BACK AFTER 1ST    00006850
         MVI   CARD+12,X'40'       * CLEAR                              00006860
         MVC   CARD+13(5),CARD+12  *  SIZE FIELD                        00006870
         CLI   HOLDSZ+1,C','       Q. 1 POS SIZE                        00006880
         BNE   SZ2RTN9        NO                                        00006890
         MVC   CARD+12(1),HOLDSZ       YES- MOVE 1 POS SIZE BK TO CARD  00006900
         MVC   HOLDSZ2(3),HOLDSZ+2      SAVE SECOND SIZE                00006910
         B     SIZERTN                  PERFORM SIZE RTN                00006920
SZ2RTN3  MVC   HLDSZRS,SIZEHLD          SAVE SIZE FROM SIZE RTN         00006930
         MVC   ADR1,SZRETRN2            CHG RETURN IN SIZE RTN          00006940
         MVC   CARD+12(3),HOLDSZ2       MOVE SECOND SIZE TO SIZE FIELD  00006950
         B     SIZERTN        GO CONVERT SECOND SIZE                    00006960
SZ2RTN6  SLA   R3,4(0)                  MOVE RESULTS TO TOP OF BYTE     00006970
         ST    R3,SIZEHLD               STORE SHIFTED RESULTS           00006980
         OC    SIZEHLD+3(1),HLDSZRS+3   PUT SIZES TOGETHER              00006990
SZ2RTNEX B     *+0                                                      00007000
SZ2RTN9  CLI   HOLDSZ+2,C','     Q. 2 POS SIZE                          00007010
         BNE   SZERR                 NO-SIZE ERROR                      00007020
         MVC   CARD+12(2),HOLDSZ     MOVE 2 POS SIZE TO SIZE FIELD      00007030
         MVC   HOLDSZ2(3),HOLDSZ+3   SAVE 2ND SIZE                      00007040
         B     SIZERTN               PERFORM SIZE RTN/RETURN TO SZ2RTN3 00007050
SZRETRN1 DC    S(SZ2RTN3)                                               00007060
SZRETRN2 DC    S(SZ2RTN6)                                               00007070
HOLDSZ   DS    CL6                                                      00007080
HLDSZRS  DS    1F                                                       00007090
HOLDSZ2  DC    CL6'      '                                              00007100
         DS    0F                                                       00007110
         EJECT                                                          00007120
ADRRTN   MVC   ADRWK,CARD+24            MOVE B-ADR TO WORK AREA         00007130
         BAL   R14,ADR01                PERFORM ADR CONVERSION          00007140
         STH   R4,B1D1                                                  00007150
         CLI   BXIND,X'00'                                           ** 00007160
         BE    *+8                                                   ** 00007170
         BAL   R14,BXRTN                                             ** 00007180
AADRRTN  MVC   ADRWK,CARD+19            MOVE A-ADR TO WORK AREA         00007190
         BAL   R14,ADR01                PERFORM ADR CONVERSION          00007200
         STH   R4,B2D2                                                  00007210
         CLI   AXIND,X'00'                                           ** 00007220
         BE    *+8                                                   ** 00007230
         BAL   R14,AXRTN                                             ** 00007240
         MVC   ADRRTNX+2(2),ADR2        SET UP TO BR TO INST GEN RTN    00007250
         L     R2,OUR8192 LOAD BASE FOR I/O IN CASE THEY USE ADRRTN     00007260
ADRRTNX  B     ADRRTNX                  BRANCH TO APPRO RTN             00007270
ADR01    ST    R14,ADRSV                SAVE RETURN ADR                 00007280
         CLC   ADRWK(2),=C'CD'       Q. ADDRESS CD                      00007290
         BNE   ADR05                     NO                             00007300
         LH    R4,ADRCD                  YES-LOAD REG 4 WITH CD ADDRESS 00007310
ADR03    MVC   SIZEWK+2(2),ADRWK+2       MOVE RELATIVE ADR TO SIZE WK   00007320
         BAL   R14,CNVRTN                                               00007330
         C     R3,FFCON              Q. WAS ADR VALID                   00007340
         BE    ADR27                    NO                              00007350
         CLC   ADRWK+2(2),=C'80'     Q. YES-IS RELATIVE > 80            00007360
         BH    ADR27                    YES- INVALID                    00007370
ADR04    N     R4,=X'0000FFFF'                                          00007380
         AR    R4,R3                    NO - ADD RELATIVE ADR TO LHE    00007390
         B     ADR0X                    GO EXIT RTN                     00007400
ADR05    CLI   ADRWK,C'P'            Q. ADR  P OR PC                    00007410
         BNE   ADR09                    NO- GO CK FOR OTHER ADRS        00007420
         CLI   ADRWK+1,C'C'          Q. YES - IS IT PC                  00007430
         BNE   ADR07                    NO- MUST BE PRINT               00007440
         LH    R4,ADRPC                 YES- LOAD REG 4 WITH PUNCH ADR  00007450
         B     ADR03                    GO VALIDATE                     00007460
ADR07    LH    R4,ADRPT                 LOAD REG 4 WITH PRINT ADR       00007470
         MVC   SIZEWK+1(3),ADRWK+1      MOVE RELATIVE ADR TO SIZE WORK  00007480
         BAL   R14,CNVRTN                VALIDATE AND CONVERT TO BINARY 00007490
         C     R3,FFCON         Q. WAS ADR VALID                        00007500
         BE    ADR27               NO-                                  00007510
         CLC   ADRWK+1(3),=C'132' Q. IS RELATIVE > 132                  00007520
         BH    ADR27                 YES- INVALID                       00007530
         B     ADR04                 NO-VALID-PREPARE TO EXIT           00007540
ADR09    CLC   ADRWK,=C'SELF'     Q. IS IT SELF ADR                     00007550
         BNE   ADR11                 NO                                 00007560
         BAL   R14,SELF01            YES-PEFORM SELF RTN                00007570
         B     ADR0X                 GO EXIT RTN                        00007580
ADR11    CLC   ADRWK,=C'DATE'     Q. IS IT DATE ADR                     00007590
         BNE   ADR13                 NO                                 00007600
         CLI   CARD+12,C'9'        Q. WANT DD MMM YY                    00007610
         BNE   ADR11A                 NO                                00007620
         LH    R4,DATEAL9             YES- LOAD IT'S ADR                00007630
         B     ADR0X                                                    00007640
ADR11A   CLI   CARD+12,C'5'        Q. WANT YYDDD                        00007650
         BNE   ADR11B                 NO - ASSUME HE WANTS YYMMDD       00007660
         LH    R4,DATEJU5             YES- LOAD IT'S ADR                00007670
         B     ADR0X                                                    00007680
ADR11B   LH    R4,DATENU6             LOAD ADR OF  YYMMDD               00007690
         B     ADR0X                 GO EXIT RTN                        00007700
ADR13    CLI   ADRWK,C'2'      Q. IS IT THE WORK AREA ADR (2000-5999)   00007710
         BL    ADR13A             NO- CK CONS                           00007720
         LH    R4,ADRWORK            YES-LOAD ADR OF WORK               00007730
         MVC   SIZEWK,ADRWK       MOVE REL ADR TO SIZE WORK             00007740
         BAL   R14,CNVRTN         VALIDATE & CONVERT TO BINARY          00007750
         C     R3,FFCON        Q. WAS IT VALID                          00007760
         BE    ADR27              NO                                    00007770
         CLC   ADRWK,=C'5999'     Q. UNDER 5999                         00007780
         BH    ADR27              NO-INVALID                            00007790
         L     R2,BIN2000        * MAKE RELATIVE TO *                   00007800
         SR    R3,R2                 * ZERO *                           00007810
         B     ADR04              YES-VALID PREPARE TO EXIT             00007820
ADR13A   CLI   ADRWK,C'0'      Q. IS IT THE CONS AREA ADR (0000-1999)   00007830
         BL    ADR15                 NO-CK RECORD AREA                  00007840
         LH    R4,ADRCON             YES- LOAD ADR OF CONS              00007850
         MVC   SIZEWK,ADRWK          MOVE RELATIVE ADR TO SIZE WORK     00007860
         BAL   R14,CNVRTN             VALIDATE AND CONVERT TO BINARY    00007870
         C     R3,FFCON     Q. WAS ADR VALID                            00007880
         BE    ADR27             NO                                     00007890
         CLC   ADRWK,=C'1999'     Q. ADR UNDER 2000                     00007900
         BH    ADR27                 NO-INVALID                         00007910
         B     ADR04                 YES-VALID-PREPARE TO EXIT          00007920
ADR15    CLI   ADRWK,C'A'            Q. INP1 REC AREA (A)               00007930
         BL    ADR27                    NO < A = INVALID                00007940
         BE    ADR17                    YES-PUT IN ADDR OF A            00007950
ADR15A   CLI   ADRWK,C'E'            Q. DSK2 REC AREA (E)               00007960
         BH    ADR21                    NO-GO CK FOR J,K + L            00007970
         BE    ADR18                    YES-PUT IN ADR OF E             00007980
         CLI   ADRWK,C'C'            Q. INP3 REC AREA (C)               00007990
         BH    ADR19                    > MEANS IT MUST BE (E)          00008000
         BL    ADR20                    < MEANS IT MUST BE (B)          00008010
         LH    R4,ADRC                  LOAD REG 4 WITH C ADR           00008020
         B     ADR24                    GO VALIDATE LENGTH              00008030
ADR17    LH    R4,ADRA                  LOAD REG 4 WITH A ADR           00008040
         B     ADR24                    GO VALIDATE LENGTH              00008050
ADR18    LH    R4,ADRD                                  D               00008060
         B     ADR24                    GO VALIDATE LENGTH              00008070
ADR19    LH    R4,ADRE                                  E               00008080
         B     ADR24                    GO VALIDATE LENGTH              00008090
ADR20    LH    R4,ADRB                                  B               00008100
         B     ADR24                    GO VALIDATE LENGTH              00008110
ADR21    CLI   ADRWK,C'J'            Q. OUT1 REC AREA (J)               00008120
         BL    ADR28                                                 ** 00008130
         BE    ADR23                    YES-PUT IN ADR OF (J)           00008140
         CLI   ADRWK,C'L'            Q. OUT3 REC AREA (L)               00008150
         BH    ADR31         > CK TO SEE IF RTCD OR RSXX(RESULTOF X//)  00008160
         BE    ADR23A                   YES-PUT IN ADR OF (L)           00008170
         LH    R4,ADRK                  LOAD REG 4 WITH K ADR           00008180
         B     ADR24                    GO VALIDATE LENGTH              00008190
ADR23    LH    R4,ADRJ                  LOAD REG 4 WITH J ADR           00008200
         B     ADR24                    GO VALIDATE LENGTH              00008210
ADR23A   LH    R4,ADRL                  LOA REG  4 WITH L ADR           00008220
ADR24    CLC   ADRWK+1(3),=C'899'    Q. IS LENGTH VALID (MAX REC 900)   00008230
         BH    ADR27                    NO-INVALID                      00008240
         MVC   SIZEWK+1(3),ADRWK+1      MOVE RELATIVE ADR TO WORK       00008250
         BAL   R14,CNVRTN               VALIDATE AND CONVERT TO BINARY  00008260
         C     R3,FFCON              Q. WAS ADR VALID                   00008270
         BE    ADR27                    NO                              00008280
         B     ADR04                    YES-GO ADD REL ADR TO LHE ADR   00008290
ADR27    MVI   ADRERR,C'E'              FLAG ADR ERROR                  00008300
         MVI   NOGOSW,C'1'              FLAG NO GO SWITCH (ABORT EXEC)  00008310
ADR0X    L     R14,ADRSV                LOAD RETURN ADR                 00008320
         BR    R14                      BRANCH BACK                     00008330
ADR28    CLC   ADRWK(3),=CL3'INX'       ADDR = INDEX                 ** 00008340
         BNE   ADR27                     ERROR                       ** 00008350
         CLC   CARD+12(2),=C'4 '     Q. SIZE = 4                    *** 00008360
         BNE   SZERR                     ERROR                       ** 00008370
         CLI   ADRWK+3,C'1'             INDEX = 1                    ** 00008380
         BNE   ADR30                     NO                          ** 00008390
         LH    R4,INDEX1                GET ADDR OF INDEX1           ** 00008400
ADR29    N     R4,=X'0000FFFF'          CLEAR HIGH HALFWORD IN R4.   ** 00008410
         B     ADR0X                                                 ** 00008420
ADR30    CLI   ADRWK+3,C'2'             INDEX = 2                    ** 00008430
         BNE   ADR27                     NO,ERROR                    ** 00008440
         LH    R4,INDEX2                GET ADR OF INDEX2.           ** 00008450
         B     ADR29                                                 ** 00008460
ADR31    CLC   ADRWK,CRTCD    Q.  RETURN CODE                           00008470
         BNE   ADR32               NO-SEE IF RSXX(RESULT OF X OR /)     00008480
         CLC   CARD+12(2),SP4  Q.  SIZE = 4                             00008490
         BNE   SZERR             NO                                     00008500
         LH    R4,ACRTCD       LOAD R4 WITH B/D ADR OF RETURN CODE      00008510
         B     ADR29                                                    00008520
ADR32    CLC   ADRWK(2),CRS        Q-RSXX(RESULT OF MULTIPLY/DISVDE)    00008530
         BNE   ADR27               A-NO                                 00008540
         LH    R4,ARESULT          A-YES/LOAD R4 W/ LHE ADDRESS OF RS   00008550
         MVC   SIZEWK+2(2),ADRWK+2      MOVE RELATIVE ADDR OF SIZE WK   00008560
         BAL   R14,CNVRTN               GO CONVERT TO BINARY NR         00008570
         C     R3,FFCON            Q-WAS ADDR VALID                     00008580
         BE    ADR27               A-NO                                 00008590
         CLC   ADRWK+2(2),=C'29'   A-YES/BUT IS IT > 29                 00008600
         BH    ADR27               A/YES/INVALID ADDR                   00008610
         B     ADR04               A-NO/VALID ADDR (RS00-RS29)          00008620
INDEX1   DC    S(INX1)                                               ** 00008630
INDEX2   DC    S(INX2)                                               ** 00008640
ADRCD    DC    S(CARD)                                                  00008650
ADRPC    DC    S(PCHREC)                                                00008660
ADRPT    DC    S(PRTAREA+1)                                             00008670
ADRDT    DC    S(DATE)                                                  00008680
ADRCON   DC    S(CONS)                                                  00008690
ADRWORK  DC    XL2'A000'                                                00008700
ADRWK    DS    CL4                                                      00008710
ADRSV    DS    F                                                        00008720
BIN2000  DC    XL4'000007D0'                                            00008730
DATENU6  DC    S(DATE6)                                                 00008740
DATEAL9  DC    S(DATE9)                                                 00008750
DATEJU5  DC    S(DATE5)                                                 00008760
CRTCD    DC    CL4'RTCD'                                                00008770
SP4      DC    CL2'4 '                                                  00008780
ACRTCD   DC    S(RTCD)                                                  00008790
CRS      DC    C'RS'                                                    00008800
ARESULT  DC    S(RESULT)                                                00008810
SORTTAGS DC    CL9'0'                                                   00008820
         DS    0F                                                       00008830
         EJECT                                                          00008840
ADDRTN   MVC   ADDGEN+18(1),OP                                          00008850
SUBRTN   EQU   ADDRTN                                                   00008860
         MVI   ADDGEN+3,X'80'    * INIT                                 00008870
         MVI   ADDGEN+11,X'80'   *   LENGTH                             00008880
         MVI   ADDGEN+39,X'08'    *       FIELDS                        00008890
         MVC   ADDGEN+6(2),B1D1                                         00008900
         MVC   ADDGEN+14(2),B2D2                                        00008910
         MVC   ADDGEN+40(2),B1D1                                        00008920
         OC    ADDGEN+3(1),SIZEHLD+3                                    00008930
         OC    ADDGEN+11(1),SIZEHLD+3                                   00008940
         MVO   SIZEHLD+1(1),SIZEHLD+3(1)                                00008950
         OC    ADDGEN+39(1),SIZEHLD+1                                   00008960
         LR    R4,R10                                                   00008970
         AH    R4,=H'26'                                                00008980
         STH   R4,ADDGEN+28                                             00008990
         MVC   INSHOLD(8),INSTA1                                        00009000
         MVC   INSHOLD+8(8),INSTA2                                      00009010
         MVC   INSHOLD+16(8),INSTA3                                     00009020
         MVC   INSHOLD+24(6),INSTA4                                     00009030
         MVC   INSHOLD+32(6),INSTA5                                     00009040
         MVC   INSHOLD+40(8),INSTA6                                     00009050
         B     PARPRT                                                   00009060
ADDGEN   DS    0CL44                                                    00009070
INSTA1   DC    XL2'05'                                                  00009080
         PACK  AUGSUM,B2D2(1)           B-ADR = B-ADR OF ADD OR SUB     00009090
INSTA2   DC    XL2'05'                                                  00009100
         PACK  ADDEND,B1D1(1)           B-ADR = A-ADR OF ADD OR SUB     00009110
INSTA3   DC    XL2'05'                                                  00009120
         AP    AUGSUM,ADDEND            AP OR SP                        00009130
INSTA4   DC    XL2'03'                                                  00009140
         BM    *+8                      BRANCH ADR MUST BE FILLED IN    00009150
INSTA5   DC    XL2'03'                                                  00009160
         OI    AUGSUM+8,X'0F'           THIS CHGS C TO F ON POSITIVE    00009170
INSTA6   DC    XL2'05'                                                  00009180
         UNPK  B2D2(1),AUGSUM                                           00009190
         EJECT                                                          00009200
APRTN    EQU   *                                                        00009210
CPRTN    EQU   *                                                        00009220
MVORTN   EQU   *                                                        00009230
SPRTN    EQU   *                                                        00009240
*  THIS WILL MAKE SIZES COMPAT WITH ADDRESS  EG. 'B-ADR TO A-ADR        00009250
         L     R3,SIZEHLD        LOAD SIZE INTO R3                      00009260
         NI    SIZEHLD+3,X'0F'  REMOVE HIGH ORDER SIZE IN SHIEHLD       00009270
         SRA   R3,4(0)           SHIFT TO REMOVE LOW ORDER SIZE IN R3   00009280
         L     R4,SIZEHLD         LOAD SIZE INTO R4                     00009290
         SLA   R4,4(0)             MOVE SIZE TO HIGH ORDER BITS-        00009300
         OR    R3,R4            PUT SIZES TOGETHER                      00009310
         ST    R3,SIZEHLD        STORE REVERSED SIZE                    00009320
MVNRTN   EQU   *                                                        00009330
MVZRTN   EQU   *                                                        00009340
NCRTN    EQU   *                                                        00009350
XCRTN    EQU   *                                                        00009360
OCRTN    EQU   *                                                        00009370
TRRTN    EQU   *                                                        00009380
COMRTN   EQU   *                                                        00009390
**** THIS ROUTINE PUTS LENGTH INTO COMPARE INSTRUCTION.          ****** 00009400
         MVC   LEN(1),SIZEHLD+3                                         00009410
         LH    R2,B1D1           *REVERSE                               00009420
         MVC   B1D1,B2D2         * ADDRESS ON COM INST                  00009430
         STH   R2,B2D2           * (ADR-RTN PUTS A IN B2D2 & B IN B1D1  00009440
         MVC   INSHOLD+2(6),SSINST                                      00009450
         MVI   INSHOLD+1,X'05'                                          00009460
         B     PARPRT                                                   00009470
         EJECT                                                          00009480
CONSRTN  EQU   *                                                        00009490
**** THIS RTN PLACE CONSTANT FROM CONS PARAMETER INTO PROGRAM    ****** 00009500
*****  CONSTANT AREA.                                            ****** 00009510
         CLI   CARD+19,X'F0'        Q ADR IN CON AREA                   00009520
         BL    MVERR                     NO-BELOW-INVALID               00009530
         CLI   CARD+19,X'F2'   Q. ADR OUTSIDE CON AREA (1999)           00009540
         BNL   MVERR              YES-INVALID                           00009550
         MVC   CONS01+1(1),SIZEHLD+3    MOVE SIZE TO MOVE INS.          00009560
         MVC   CONS01+2(2),B2D2                                         00009570
CONS01   MVC   CONS01,CARD+33           MOVE CONSTANT TO MEMORY.        00009580
         MVC   CONS02+2(2),B2D2  PUT BASE DISP ADR IN LOAD ADR INST     00009590
CONS02   LA    R5,CONS02         LOAD R5 WITH ACTUAL ADR OF CON ADR     00009600
         ST    R5,HEXHLD         STOR CON ADR                           00009610
         BAL   R14,HEXRTN        GO HAVE HEX RTN CONVERT IT TO ZONE     00009620
         MVC   PRTAREA+111(6),CONVHEX+2   PUT ACTUAL CON ADR IN PRTAREA 00009630
         B     PARPRT                                                   00009640
B1D1LHE  DC    XL2'682F'      LHE CONS AREA / BASE DISPLACEMENT FORMAT  00009650
         EJECT                                                          00009660
ENTRTN   EQU   *                                                        00009670
****  THIS RTN GENERATES ENTER CODING. (I HOPE)                  ****** 00009680
         XR    R4,R4                                                    00009690
         IC    R4,=X'16'                                                00009700
         BAL   R14,TGRTN                PERFORM TAG ROUTINE             00009710
         MVC   INSTE5+4(2),B1D1                                         00009720
         XR    R4,R4                                 ,                  00009730
         IC    R4,=X'18'                                                00009740
         AR    R4,R10                   R4 POINTS TO NEXT.              00009750
         STH   R4,INSTE4+6                                              00009760
         XR    R5,R5                                 ,                  00009770
         IC    R5,=X'02'                             ,                  00009780
         AR    R4,R5                    R4 POINTS TO NEXT USER INSR.    00009790
         STH   R4,NEXT+2                STORE USER RETURN ADDR IN LINE  00009800
         MVC   INSHOLD(6),INSTE1        *                               00009810
         MVC   INSHOLD+8(8),INSTE2      * MOVE GENERATE INST. TO HOLD . 00009820
         MVC   INSHOLD+16(6),INSTE3     *                               00009830
         MVC   INSHOLD+24(8),INSTE4                                     00009840
         MVC   INSHOLD+32(6),INSTE5                                     00009850
         MVC   INSHOLD+40(4),NEXT                                       00009860
         B     PARPRT                                                   00009870
***** ENTER ROUTINE TO BE TAILORED AND PLACED IN USER CODE.      ****** 00009880
         DS    0F                                                       00009890
INSTE1   DC    XL2'03'                  COUNT FIELD.                    00009900
         AH    R4,CON2        BUMP REG4 TO NEXT STACK POSITION.         00009910
INSTE2   DC    XL2'05'                                                  00009920
         CLC   0(2,R4),FCON                                             00009930
INSTE3   DC    XL2'03'                                                  00009940
         BE    USERR                                                    00009950
INSTE4   DC    XL2'05'                                                  00009960
         MVC   0(2,R4),NEXT                                             00009970
INSTE5   DC    XL2'03'                                                  00009980
         B     ENTRTN                                                   00009990
NEXT     DC    XL4'00010000'            1ST 2 BYTES=COUNT,2ND 2=RETURN  00010000
         EJECT                                                          00010010
EXRTN    EQU   *                                                        00010020
****** THIS RTN GENERATES EXIT CODING. (I HOPE)                  ****** 00010030
         XR    R4,R4                                                    00010040
         IC    R4,=X'0C'                                                00010050
         AR    R4,R10                   R4 POINTS TO GEN. BRANCH INST.  00010060
         STH   R4,INSTX1+4              MOVE BRANCH ADDR TO MOVE INST.  00010070
         MVC   INSHOLD(8),INSTX1        *                               00010080
         MVC   INSHOLD+8(6),INSTX2      *MOVE GEN INST. TO HOLD AREA.   00010090
         MVC   INSHOLD+16(6),INSTX3     *                               00010100
         B     PARPRT                                                   00010110
**** EXIT ROUTINE TO BE TAILORED AND PLACED IN USER CODE.        ****** 00010120
         DS    0F                                                       00010130
INSTX1   DC    XL2'05'                  COUNT FIELD                     00010140
         MVC   *+12(2),0(R4)  MOVE ADDR FROM RETURN STACK TO BRANCH.    00010150
INSTX2   DC    XL2'03'                                                  00010160
         SH    R4,CON2        ADJ R4 TO NEXT RETURN ADD.                00010170
INSTX3   DC    XL2'03'                                                  00010180
         B     EXRTN                    BRANCH TO STACK ADR .           00010190
         EJECT                                                          00010200
MOVERTN  EQU   *                                                        00010210
**** THIS GENERATES MULTIPLE MOVE INSTRUCTIONS IF THE SIZE OF THE****** 00010220
***** IS GREATER THAN 256. IF GENERATED DISPLACEMENT EXCEEDS BASE****** 00010230
****** REG LIMITS(4096) AN ADDRESS ERROR OCCURS.                 ****** 00010240
         LA    R8,INSHOLD                                               00010250
         LH    R9,=H'8'                                                 00010260
         L     R3,SIZEHLD                                               00010270
         LH    R4,=H'256'                                               00010280
         MVZ   BASE1(1),B1D1                                            00010290
         MVZ   BASE2(1),B2D2                                            00010300
         MVC   AHLD+2(2),B1D1                                           00010310
         MVC   BHLD+2(2),B2D2                                           00010320
MV01     CR    R3,R4                                                    00010330
         BL    MV02                                                     00010340
         MVI   LEN,X'FF'                                                00010350
         SR    R3,R4                                                    00010360
         MVC   0(2,R8),=XL2'05'                                         00010370
         MVC   B1D1(2),AHLD+2                                           00010380
         MVC   B2D2(2),BHLD+2                                           00010390
         MVC   2(6,R8),SSINST                                           00010400
         AR    R8,R9                                                    00010410
         L     R2,AHLD                                                  00010420
         AR    R2,R4                                                    00010430
         ST    R2,AHLD                                                  00010440
         L     R2,BHLD                                                  00010450
         AR    R2,R4                                                    00010460
         ST    R2,BHLD                                                  00010470
         B     MV01                                                     00010480
MV02     STC   R3,LEN                                                   00010490
         MVC   B1D1(2),AHLD+2                                           00010500
         MVC   B2D2(2),BHLD+2                                           00010510
         MVC   0(2,R8),=XL2'05'                                         00010520
         MVC   2(6,R8),SSINST                                           00010530
         B     PARPRT                                                   00010540
MVERR    MVI   ADRERR,C'E'                                              00010550
         MVI   NOGOSW,C'1'                                              00010560
         B     PARPRT                                                   00010570
         DS    0F                                                       00010580
AHLD     DC    F'0'                                                     00010590
BHLD     DC    F'0'                                                     00010600
BASE1    DC    XL1'0F'                                                  00010610
BASE2    DC    XL1'0F'                                                  00010620
         EJECT                                                          00010630
TAGRTN   EQU   *                                                        00010640
**** THIS RTN DEFINES TAG ADDRESSES. IF TAG HAS BEEN REFENCED    ****** 00010650
***** BEFORE IT HAS BEEN DEFINED THE RTN INSERTS THE TAG ADDRESS ****** 00010660
***** WHERE IT IS NEEDED USING THE CHAIN SET IN TGRTN.           ****** 00010670
         ST    R14,TAGSAVE              SAVE RETURN                     00010680
         L     R5,ADRUBASE                                              00010690
         LA    R9,TAGTAB                                                00010700
         CLC   CARD(2),=C'TG'          Q.VALID LOC ENTRY.               00010710
         BNE   TAGERR                   A.NO                            00010720
         MVC   SIZEWK+2(2),CARD+2                                       00010730
         BAL   R14,CNVRTN               PERFORM BINARY CONVERSION .     00010740
         C     R3,FFCON                Q. CONVERSION GOOD.              00010750
         BE    TAGERR                                                   00010760
         C     R3,ZERO                 Q. TAG # VALID.                  00010770
         BE    TAGERR                                                   00010780
         SLA   R3,2(0)                  MULTIPLY TAG# BY 4.             00010790
         AR    R3,R9                    R9 HAS LHE TAG TABLE.           00010800
         CLC   0(2,R3),=C'00'                                           00010810
         BNE   TAGERR                   A.YES,DUPLICATE TAG.            00010820
         CLI   NOGOSW,C'0'      Q. NO GO SWITCH OFF                     00010830
         BNE   TAGEXIT            NO'IT'S ON' -BYPASS RESOLVING TG ADRS 00010840
         MVC   0(2,R3),CARD+2           MOVE TAG # TO TAG TABLE.        00010850
         CLC   2(2,R3),=C'00'                                           00010860
         BNE   TAG01                    A. YES                          00010870
         STH   R10,2(R3)                PUT TAG ADR IN TABLE.           00010880
         B     TAGEXIT                                                  00010890
TAG01    MVC   TAG02+2(2),2(R3)         MOVE CHAIN ADR TO COMPARE INS.  00010900
         LA    R6,USERBASE+4095                                         00010910
         LA    R6,1(0,6)                                                00010920
         STH   R10,2(R3)                PUT TAG ADR IN TABLE.           00010930
TAG02    CLC   2(2,R3),=C'00'                                           00010940
         BE    TAG05                    A.YES                           00010950
         MVC   TAG03+2(2),TAG02+2       SET TAG03 TO CHAIN ENTRY        00010960
         MVC   TAG04+4(2),TAG02+2       SET TAG04 TO CHAIN ENTRY        00010970
TAG04    MVC   TAG02+2(2),TAG04         SET TAG02 TO NEXT CHAIN ENTRY.  00010980
TAG03    STH   R10,TAG03                INSERT TAG ADR IN GENERATED INS 00010990
         B     TAG02                                                    00011000
TAG05    MVC   TAG06+2(2),TAG02+2       SET TAG06 TO CHAIN ENTRY.       00011010
TAG06    STH   R10,TAG06                INSERT TAG ADR IN LAST ENTRY    00011020
TAGEXIT  L     R14,TAGSAVE              RETURN                          00011030
         L     R6,AOURCODE                                              00011040
         BR    R14                                                      00011050
TGERR    EQU   *                                                        00011060
TAGERR   L     R6,AOURCODE                                              00011070
         MVI   LOCERR,C'E'                                              00011080
         MVI   NOGOSW,C'1'                                              00011090
         B     PARPRT                                                   00011100
         DS    0F                                                       00011110
TAGSAVE  DC    CL4' '                                                   00011120
TAGTAB   DC   80C'00000'                                                00011130
         EJECT                                                          00011140
TGRTN    EQU   *                                                        00011150
*** THIS ROUTINE MUST BE PERFORMED (BAL). THIS ROUTINE RESOLVES ******  00011160
*** TAG ADDRESSES. IF TAG IS UNDEFINED,REFERENCES ARE CHAINED FOR ****  00011170
*** RESOLUTION AT TIME TAG IS DEFINED.  REG 4 CONTAIN REL ADR OF BRANCH 00011180
*   ADDRESS EG  GO TGXX 4 WOULD = 2 (OP/CODE +  MASK = 2)               00011190
         ST    R14,TGSAVE                                               00011200
         L     R5,ADRUBASE                                              00011210
         LA    R9,TAGTAB                                                00011220
         CLC   CARD+19(2),=C'TG'                                        00011230
         BNE   TG07                                                     00011240
         MVC   SIZEWK+2(2),CARD+21      MOVE TG# TO SIZE WORK FOR CONV. 00011250
         BAL   R14,CNVRTN               PERFORM BINARY CONVERSION.      00011260
         C     R3,FFCON                Q. CONVERSION GOOD.              00011270
         BE    TGERR                    A. NO.                          00011280
         C     R3,ZERO                 Q. TAG # = ZERO                  00011290
         BE    TGERR                    A. YES                          00011300
         SLA   R3,2(0)                  MULTIPLY R3 BY 4.               00011310
         AR    R3,R9                    R4 NOW HAS TAG TABLE ENTRY ADR. 00011320
         CLC   0(2,R3),=C'00'          Q. HAS TAG BEEN DEFINED.         00011330
         BE    TG01                     A. NO.                          00011340
         MVC   B1D1(2),2(R3)              YES,MOVE TAG ADR TO INS.      00011350
TGEXIT   L     R14,TGSAVE                EXIT                           00011360
         L     R6,AOURCODE                                              00011370
         BR    R14                                                      00011380
TG01     AR    R4,R10                                                   00011390
         L     R5,ADRUBASE                                              00011400
         LA    R6,USERBASE+4095    *POINT REG 6                         00011410
         LA    R6,1(0,6)           * TO USER CODE + 4096                00011420
         CLC   2(2,R3),=C'00'          Q. ANY REFERENCE TO TAG.         00011430
         BNE   TG02                     A. YES                          00011440
         STH   R4,2(0,R3)                                               00011450
TG08     L     R6,AOURCODE                                              00011460
         MVC   B1D1(2),=C'00'           SET END OF CHAIN                00011470
         B     TGEXIT                                                   00011480
TG02     MVC   TG03+4(2),2(R3)          POINT COMPARE TO NEXT CHAIN ENT 00011490
TG03     CLC   =CL2'00',TG03           Q.END OF CHAIN.                  00011500
         BNE   TG05                     A. NO                           00011510
         MVC   TG04+2(2),TG03+4          ADJUST STORE HALFWORD ADR.     00011520
TG04     STH   R4,TG04                                                  00011530
         B     TG08                                                     00011540
TG05     MVC   TG06+4(2),TG03+4         SET UP TO CHECK NEXT ENTRY      00011550
TG06     MVC   TG03+4(2),TG06               FOR END OF CHAIN.           00011560
         B     TG03                                                     00011570
TG07     CLC   CARD+19(3),=C'EOJ'                                       00011580
         BE    TG09                                                     00011590
         CLC   CARD+19(4),CSORT  Q.  IS IT SORT                         00011600
         BNE   TGERR                    NO - ERROR                      00011610
         L     R6,AOURCODE        GET 6 POINT CORRECTLY B1D1 USES R6    00011620
         MVC   B1D1(2),SORTBD   YES - MOVE IN BASE DISP OF SORT         00011630
         B     TGEXIT                   GO EXIT RTN                     00011640
TG09     L     R6,AOURCODE                                              00011650
         MVC   B1D1(2),EOJADR                                           00011660
         B     TGEXIT                                                   00011670
         DS    0F                                                       00011680
ADRUBASE DC    A(USERBASE)                                              00011690
TGSAVE   DS    CL4                                                      00011700
ZERO     DC    XL4'00'                                                  00011710
CSORT    DC    CL4'SORT'                                                00011720
SORTBD   DC    S(SORTBR)                                                00011730
         EJECT                                                          00011740
SELF01   ST    R14,SLFSV                SAVE RETURN ADDRESS             00011750
SLFSW    BC    0,SELF05                                                 00011760
         CLC   SIZEHLD,=X'00000028'  Q. IS SIZE > 40 DEC                00011770
         BH    SELF04A               YES-MAYBE INVALID                  00011780
         L     R8,SIZEHLD            PUT BINARY SIZE IN R8              00011790
SELF01A  LH    R4,SLFBD              LOAD BASE DISP ADR OF SELF         00011800
         SR    R4,R8                                                    00011810
         S     R4,=F'1'                                                 00011820
         L     R5,SLFACT             LOAD ACTUAL ADR OF SELF            00011830
         STH   R4,SLFBD                                                 00011840
         A     R4,=F'1'                                                 00011850
         CLC   SLFBD,SLFBEG                                             00011860
         BH    SELF02                                                   00011870
         BE    SELF02                                                   00011880
         MVI   SLFSW+1,X'F0'                                            00011890
         B     SELF05                                                   00011900
SELF02   SR    R5,R8                                                    00011910
         STC   R8,SELF03+1                                              00011920
SELF03   MVC   0(1,R5),CARD+33                                          00011930
         S     R5,=F'1'                 POINT TO NEXT AVAIL POS OF SELF 00011940
         ST    R5,SLFACT                SAVE ACT ADR OF SELF            00011950
SELF04   L     R14,SLFSV                LOAD RETURN ADR                 00011960
         BR    R14                      GO BACK                         00011970
SELF04A  CLI   PRTAREA+31,C','   Q.  IS THERE 2 SIZES                   00011980
         BE    SELF04B               YES                                00011990
         CLI   PRTAREA+32,C','       CHECK NEXT POS EG X,X OR XX,X      00012000
         BNE   SELF05                NO-FLAG AS ERROR                   00012010
SELF04B  LA    R8,15(0)              YES-FORCE SIZE TO 16 (F) LENGTH    00012020
         B     SELF01A               GO FINISH UP SELF GENERATION       00012030
SELF05   MVI   ADRERR,C'E'              FLAG AS ADR ERROR               00012040
         MVI   NOGOSW,C'1'              FLAG NO GO SWITCH               00012050
         B     SELF04                   GO EXIT RTN                     00012060
SLFBEG   DC    S(SELF)                                                  00012070
SLFBD    DC    S(SELF+1771)                                             00012080
EOJADR   DC    S(EOJRTN)                                                00012090
SLFACT   DC    A(SELF+1771)                                             00012100
AOURCODE DC    A(OURCODE)                                               00012110
SLFSV    DS    F                                                        00012120
         EJECT                                                          00012130
CNVRTN   EQU   *                                                        00012140
**** THIS ROUTINE PACKS AND CONVERTS TO BINARY THE FULLWORD AT   ****** 00012150
***** SIZEWK. THE RESULT IS PLACED IN R3.                        ****** 00012160
         ST    R2,CVREG2     STORE REG 2 (REG2 IS USED AS BASE          00012170
*                            FOR I/O RTNS AND THE TRT USES REG 2)       00012180
         TRT   SIZWK(8),DECTAB         Q. ALL NUMERIC.                  00012190
         BC    6,CV02                   A. NO BRANCH.                   00012200
         PACK  SIZWK(8),SIZWK(8)                                        00012210
         CVB   R3,SIZWK                 CONVERT TO BINARY IN REG 3.     00012220
CV01     MVC   SIZWK(8),CONF0                                           00012230
         L     R2,CVREG2     RELOAD REG 2 / IN CASE WE CAME FROM I/O    00012240
         BR    R14                                                      00012250
CV02     L     R3,FFCON                                                 00012260
         B     CV01                                                     00012270
         DS    0F                                                       00012280
CVREG2   DS    1F             HOLD AREA FOR REG 2                       00012290
CONF0    DC    CL8'00000000'                                            00012300
DECTAB   DC    CL16' '                                                  00012310
HEXTAB   DC    CL224' '                                                 00012320
         DC    XL10'00'                                                 00012330
         DC    CL6' '                                                   00012340
         DC    CL16'0123456789ABCDEF'                                   00012350
         EJECT                                                          00012360
CVBINRTN EQU   *                                                        00012370
*  THIS RTN GENERATES THE CODE TO CONVERT ZONED TO BINARY               00012380
         L     R3,SIZEHLD        LOAD SIZE INTO R3                      00012390
         NI    SIZEHLD+3,X'0F'  REMOVE HIGH ORDER SIZE IN SIZEHOLD      00012400
         CLI   SIZEHLD+3,X'0A' Q.  SIZE FOR A-ADR 10 OR LESS            00012410
         BH    SZERR              NO - SIZE ERROR                       00012420
         SRA   R3,4(0)           SHIFT TO REMOVE LOW ORDER SIZE IN R3   00012430
         C     R3,CVB4         Q. SIZE FOR B-ADR 4 OR LESS              00012440
         BH    SZERR              NO - SIZE ERROR                       00012450
         MVI   CVBIPACK+1,X'70'                                         00012460
         OC    CVBIPACK+1(1),SIZEHLD+3  PUT SIZE ON PACK INST           00012470
         MVC   CVBIPACK+4(2),B2D2      PUT ADR OF DATA TO BE PACKED     00012480
         MVC   CVBIMVC+2(2),B1D1   PUT ADR TO RECEIVE DATA INLINE       00012490
         STH   R3,SIZEHLD              STORE SIZE OF RECEIVING FIELD    00012500
         MVC   CVBIMVC+1(1),SIZEHLD+1    MOVE SIZE IN-LINE              00012510
         LH    R4,CVDCON         POINT 4 AT BINARY RESULTS              00012520
         LA    R2,3                 LOAD 2 WITH MAX SIZE OF RESULT      00012530
         SR    R2,R3                   SUB SIZE FROM MAX SIZE           00012540
         AR    R4,R2                   ADD RESULTS TO ADJUST ADR        00012550
         STH   R4,CVBIMVC+4            STORE RESULTS IN LINE            00012560
         MVC   INSHOLD(8),CVBIN1       *  MOVE GEN-ED                   00012570
         MVC   INSHOLD+8(6),CVBIN2     *  INST                          00012580
         MVC   INSHOLD+16(6),CVBIN3    *   INLINE                       00012590
         MVC   INSHOLD+24(8),CVBIN4    *                                00012600
         B     PARPRT                                                   00012610
         DS    0F                                                       00012620
CVB4     DC    XL4'04'                                                  00012630
CVB10    DC    XL4'0A'                                                  00012640
*  THIS IS THE GENERATED CODE TO CONVERT ZONED TO BINARY (CVBIN)        00012650
*                                                                       00012660
CVBIN1   DC    XL2'05'                                                  00012670
CVBIPACK PACK  CVDWORD(8),*+0(1)   PACK ZONED FIELD (A-ADR)             00012680
CVBIN2   DC    XL2'03'                                                  00012690
         CVB   R2,CVDWORD          CONVERT PACK TO BINARY               00012700
CVBIN3   DC    XL2'03'                                                  00012710
         ST    R2,CVDWORD+4        STORE BINARY NUMBER                  00012720
CVBIN4   DC    XL2'05'                                                  00012730
CVBIMVC  MVC   *+0(1),CVDWORD+4    MOVE BINARY # TO B-ADR               00012740
         EJECT                                                          00012750
CVBZNRTN EQU   *                                                        00012760
*  THIS RTN GENERATES THE CODE TO CONVERT BINARY TO ZONED               00012770
*                                                                       00012780
         L     R3,SIZEHLD      LOAD SIZE INTO R3                        00012790
         NI    SIZEHLD+3,X'0F'  REMOVE HIGH ORDER SIZE IN SIZEHLD       00012800
         SRA   R3,4(0)           SHIFT TO REMOVE LOW ORDER SIZE IN R3   00012810
         CLI   SIZEHLD+3,X'04'  Q.  SIZE OF BINARY FIELD= OR < 4        00012820
         BH    SZERR              NO SIZE ERROR                         00012830
         MVC   CVBZMVC+1(1),SIZEHLD+3  PUT SIZE INTO MOVE               00012840
         LH    R2,CVDCON         * ADJUST ADR (RECEIVING)               00012850
         LA    R4,3           *  OF MOVE                                00012860
         ST    R11,SYSAVE+64  *   INST FIELD                            00012870
         L     R11,SIZEHLD    *     TO BE                               00012880
         SR    R4,R11         *       CONVERTED                         00012890
         L     R11,SYSAVE+64 *                                          00012900
         AR    R2,R4          *                                         00012910
         STH   R2,CVBZMVC+2         *                                   00012920
         MVC   CVBZMVC+4(2),B2D2    PUT ADR TO MOVE FROM INLINE         00012930
         C     R3,CVB10          Q. SIZE OF ZONED FIELD= OR < 10        00012940
         BH    SZERR               NO SIZE ERROR                        00012950
         MVC   CVBZUNPK+2(2),B1D1  PUT ADR OF WHERE TO UNPK AT INLINE   00012960
         LA    R2,3       LOAD R2 WITH MAX SIZE-1 FOR RESULTS           00012970
         SLA   R3,4(0)    SHIFT SIZE TO HI ORDER BITS                   00012980
         STH   R3,SIZEHLD               * PUT SIZE OF UNPACKED          00012990
         MVI   CVBZUNPK+1,X'07'  PUT SIZE OF CVDWORD INTO UNPK INST     00013000
         OC    CVBZUNPK+1(1),SIZEHLD+1  PUT 2 SIZES TOGETHER            00013010
         SRA   R3,4(0)   SHIFT SIZE BACK TO LOWER BYTE                  00013020
         LH    R2,B1D1                   * COMPUTE RHE                  00013030
         AR    R2,R3                   *  TO CHG UNPKED DATA (LAST      00013040
         STH   R2,CVBZOI+2           * POS) TO DISPLAY                  00013050
         MVC   INSHOLD(8),CVBZN1   * MOVE GENERATED INST INLINE         00013060
         MVC   INSHOLD+8(8),CVBZN2  *                                   00013070
         MVC   INSHOLD+16(6),CVBZN3  *                                  00013080
         MVC   INSHOLD+24(6),CVBZN4  *                                  00013090
         MVC   INSHOLD+32(8),CVBZN5   *                                 00013100
         MVC   INSHOLD+40(6),CVBZN6  *                                  00013110
         B     PARPRT                                                   00013120
*                THIS IS THE GENERATED CODE    TO CONVERT BINARY        00013130
*                  TO ZONED (CVBZN)                                     00013140
CVBZN1   DC    XL2'05'                                                  00013150
         MVC   CVDWORD(8),CVDWORD-1  CLEAR WORK AREA                    00013160
CVBZN2   DC    XL2'05'                                                  00013170
CVBZMVC  MVC   CVDWORD(1),*+0       *A-ADR MUST BE ADJUSTED BY A-ADR    00013180
CVBZN3   DC    XL2'03'              *SIZE(E.G. SIZE= 2/A-ADR IS +6)     00013190
        L      R2,CVDWORD+4          LOAD BINARY # INTO REG2            00013200
CVBZN4   DC    XL2'03'                                                  00013210
         CVD   R2,CVDWORD        CONVERT BINARY # TO DECIMAL            00013220
CVBZN5   DC    XL2'05'                                                  00013230
CVBZUNPK UNPK  *+0(1),CVDWORD        UNPACK DECIMAL INTO B-ADR          00013240
CVBZN6   DC    XL2'03'                                                  00013250
CVBZOI   OI    *+0,X'F0'             CHG SIGN TO F (RHE B-ADR)          00013260
CVDCON   DC    S(CVDWORD+4)                                             00013270
         EJECT                                                          00013280
PACKRTN  EQU   *                                                        00013290
         MVC   LEN(1),SIZEHLD+3         MOVE SIZE TO INST               00013300
         MVC   INSHOLD+2(6),SSINST      MOVE INST TO HOLD AREA          00013310
         MVI   INSHOLD+1,X'05'     MOVE SIZE OF INSTRUCTION -1          00013320
         B     PARPRT                   GO PRT & PUT INST INLINE        00013330
         EJECT                                                          00013340
UNPKRTN  EQU   *                                                        00013350
         MVC   LEN(1),SIZEHLD+3         MOVE SIZE TO UNPK INST          00013360
         MVC   INSHOLD+2(6),SSINST      MOVE INST TO HOLD AREA          00013370
         MVI   INSHOLD+1,X'05'          MOVE SIZE OF INST -1            00013380
         L     R3,SIZEHLD               LOAD SIZE                       00013390
         SRA   R3,4(0)                  SHIFT TO REMOVE SENDING SIZE    00013400
         MVC    SIZEWK+2(2),B1D1                                        00013410
         LH    R2,SIZEWK+2                                              00013420
         AR    R2,R3                                                    00013430
         STH   R2,UNPKOR+2     STORE RHE ADR IN OR INSTRUCTION          00013440
         MVC   INSHOLD+8(6),UNPKCODE    MOVE 'OI' INST TO HOLD          00013450
         MVC   SIZEWK,SZZERO  CLEAR SIZE WORK AREA                      00013460
         B     PARPRT                   'THIS ELIM C ON LAST POS        00013470
UNPKCODE DC    XL2'03'                                                  00013480
UNPKOR   OI    *+0,X'F0'                                                00013490
         EJECT                    CONVERT SYSTEMS DATE TO YYMMDD, ETC   00013500
DATERTN  EQU   *                  CONVERT SYSTEMS DATE TO YYMMDD        00013510
         CNOP  0,4                                                      00013520
         TIME  DEC                GET THE TIME                          00013530
         ST    R1,DATESY          SAVE IN FORMAT '00YYJJJF'             00013540
         UNPK  DATEYJ,DATESY+1(3)  GET YYJJJ IN UNPACKED FORMAT         00013550
         UNPK  DATEYMD(3),DATESY+1(2)  GOT YEAR IN 'FYFYXX' FORMAT      00013560
         PACK  DATEWK(2),DATEYMD(2)    PACK YEAR INTO '0YYC' FORMAYY    00013570
DATETG1  SP    DATEWK(2),DATE4         SUBTRACT 4 FROM YEAR TRYING TO   00013580
         BH    DATETG1                 FIGURE OUT IF IT WAS LEAP YEAR   00013590
         BL    DATETG2                 NO -JULIAN DAY TABLE WAS OKAY    00013600
        MVC   DATEJDAY(84),DATEJDAY+84 YES-SUBSTITUTE LEAP YEAR TABLE   00013610
DATETG2  LA    R2,DATEJDAY             POINT R2 TO JULIAN DAY TABLE     00013620
DATETG3  CLC   DATESY+2(2),2(R2)   COMPARE SYSTEMS 'JJJF' TO TABLE      00013630
         BNH   DATETG4  SYSTEMS JJJ = OR < TABLE ENTRY-SEARCH COMPLETE  00013640
         LA    R2,7(R2)            POINT TO NEXT TABLE ENTRY            00013650
         SP    DATETLY,DATE1    Q-HAVE WE SEARCHED ALL ENTRIES          00013660
         BNZ   DATETG3          NO-GO BACK AND COMPARE TO NEXT ENTRY    00013670
         MVC   DATEYMD,DATEUNK YES-SYSTEMS DATE IS BAD                  00013680
         B     DATEXIT             GO BACK TO USER                      00013690
DATETG4  MVC   DATEYMD+2(2),0(R2)  GET MONTH IN 'MM' FORMAT FROM TABLE  00013700
         S     R2,DATEBUMP         BUMP BACK ONE ENTRY                  00013710
         SP    DATESY+2(2),2(2,R2) SUBTRACT LAST JJJ OF LAST MONTH FROM 00013720
         UNPK  DATEYMD+4(2),DATESY+2(2)  SYSTEM JJJ & UNPK IT TO 'FJFJ' 00013730
         MVZ   DATEYMD+5(1),DATEYMD+4                                   00013740
         MVC   DATEDMY(2),DATEYMD+4  BUILD SYSTEMS DATE IN DD           00013750
         MVC   DATEDMY+3(3),11(R2)                         MMM(ALPHA)   00013760
         MVC   DATEDMY+7(2),DATEYMD                        YY  FORMAT   00013770
DATEXIT  BR    R14                 GO BACK TO USER                      00013780
         DC    X'000F000000'                                            00013790
DATEJDAY DC    X'F0F1031FD1C1D5F0F2059FC6C5C2F0F3090FD4C1D9'            00013800
         DC    X'F0F4120FC1D7D9F0F5151FD4C1E8F0F6181FD1E4D5'            00013810
         DC    X'F0F7212FD1E4D3F0F8243FC1E4C7F0F9273FE2C5D7'            00013820
         DC    X'F1F0304FD6C3E3F1F1334FD5D6E5F1F2365FC4C5C3'            00013830
         DC    X'F0F1031FD1C1D5F0F2060FC6C5C2F0F3091FD4C1D9'            00013840
         DC    X'F0F4121FC1D7D9F0F5152FD4C1E8F0F6182FD1E4D5'            00013850
         DC    X'F0F7213FD1E4D3F0F8244FC1E4C7F0F9274FE2C5D7'            00013860
         DC    X'F1F0305FD6C3E3F1F1335FD5D6E5F1F2366FC4C5C3'            00013870
DATESY   DC    F'0'                                                     00013880
DATEYMD  DC    C'      '                                                00013890
DATEDMY  DC    C'XX XXX XX'                                             00013900
DATEYJ   DC    C'XXXXX'                                                 00013910
DATEWK   DC    C'  '                                                    00013920
DATE1    DC    P'1'                                                     00013930
DATE4    DC    P'4'                                                     00013940
DATETLY  DC    PL2'12'                                                  00013950
DATEUNK  DC    C'UNKNOW'                                                00013960
DATEBUMP DC    F'7'                                                     00013970
         CNOP  0,4                                                      00013980
         EJECT                                                          00013990
MPYRTN   EQU   *    MULTIPLY ROUTINE                                    00014000
*    MPY  XX,YY  A-ADDRESS BY B-ADDRESS  PRODUCT IN RESULT - 30 BYTES   00014010
         MVN   MPYGEN1+3(1),SIZEHLD+3  -MULTIPLIER SIZE                 00014020
         L     R3,SIZEHLD                                               00014030
         SRA   R3,4(0)                                                  00014040
         ST    R3,SIZEHLD                                               00014050
         MVN   MPYGEN2+3(1),SIZEHLD+3  -MULTIPLICAND SIZE               00014060
         MVC   MPYGEN1+6(2),B2D2       -MULTIPLIER ADDRESS              00014070
         MVC   MPYGEN2+6(2),B1D1       -MULTIPLICAND ADDRESS            00014080
         LR    R3,R10                                                   00014090
         AH    R3,=H'30'                                                00014100
         STH   R3,MPYGEN5+4                                             00014110
         MVC   INSHOLD+00(8),MPYGEN1   *MOVE GENERATED INSTRS INLINE    00014120
         MVC   INSHOLD+08(8),MPYGEN2   *                                00014130
         MVC   INSHOLD+16(8),MPYGEN3   *                                00014140
         MVC   INSHOLD+24(6),MPYGEN4   *                                00014150
         MVC   INSHOLD+32(6),MPYGEN5   *                                00014160
         MVC   INSHOLD+40(6),MPYGEN6   *                                00014170
         MVC   INSHOLD+48(8),MPYGEN7   *                                00014180
         MVC   INSHOLD+56(8),MPYGEN8   *                                00014190
         B     PARPRT                                                   00014200
********* THEIR GENERATED CODE                                          00014210
MPYGEN1  DC    XL2'05'                                                  00014220
         PACK  FIELD8(8),*+0(1)         PACK THEIR MULTIPLIER           00014230
MPYGEN2  DC    XL2'05'                                                  00014240
         PACK  FIELD16,*+0(1)           PACK THEIR MULTIPLICAND         00014250
MPYGEN3  DC    XL2'05'                                                  00014260
         MP    FIELD16,FIELD8           MULTIPLY                        00014270
MPYGEN4  DC    XL2'03'                                                  00014280
         TM    FIELD16+15,X'01'         Q-NEGATIVE PRODUCT              00014290
MPYGEN5  DC    XL2'03'                                                  00014300
         BO    *+8                      A-YES/LEAVE NEGATIVE BITS ON    00014310
MPYGEN6  DC    XL2'03'                                                  00014320
         OI    FIELD16+15,X'0F'         A-NO/MAKE PRODUCT DISPLAYABLE   00014330
MPYGEN7  DC    XL2'05'                                                  00014340
         UNPK  RESULT(16),FIELD16(9)    UNPACK                          00014350
MPYGEN8  DC    XL2'05'                         PRODUCT INTO             00014360
         UNPK  RESULT+15(15),FIELD16+8(8)           RESULT   - 30 BYTES 00014370
         EJECT                                                          00014380
DVDRTN   EQU   *    DIVIDE ROUTINE                                      00014390
*   DVD  XX,YY  A-ADDRESS INTO B-ADDRESS   QUOTENT IN RESULT - 15 BYTES 00014400
*                                          REMAINDER IN RESULT+15 - 15B 00014410
         MVN   DVDGEN1+3(1),SIZEHLD+3  -DIVIDEND SIZE                   00014420
         L     R3,SIZEHLD                                               00014430
         SRA   R3,4(0)                                                  00014440
         ST    R3,SIZEHLD                                               00014450
         MVN   DVDGEN2+3(1),SIZEHLD+3  -DIVISOR SIZE                    00014460
         MVC   DVDGEN1+6(2),B2D2       -DIVISOR ADDRESS                 00014470
         MVC   DVDGEN2+6(2),B1D1       -DIVIDEND ADDRESS                00014480
         LR    R3,R10                                                   00014490
         AH    R3,=H'34'                                                00014500
         STH   R3,DVDGEN5+4                                             00014510
         MVC   INSHOLD+00(8),DVDGEN1   *MOVE GENERATED INST INLINE      00014520
         MVC   INSHOLD+08(8),DVDGEN2   *                                00014530
         MVC   INSHOLD+16(8),DVDGEN3   *                                00014540
         MVC   INSHOLD+24(6),DVDGEN4   *                                00014550
         MVC   INSHOLD+32(6),DVDGEN5   *                                00014560
         MVC   INSHOLD+40(6),DVDGEN6   *                                00014570
         MVC   INSHOLD+48(6),DVDGEN7   *                                00014580
         MVC   INSHOLD+56(8),DVDGEN8   *                                00014590
         MVC   INSHOLD+64(8),DVDGEN9   *                                00014600
         B     PARPRT                                                   00014610
********* THEIR GENERATED CODE                                          00014620
DVDGEN1  DC    XL2'05'                                                  00014630
         PACK  FIELD8(8),*+0(1)         PACK  THEIR DIVISOR             00014640
DVDGEN2  DC    XL2'05'                                                  00014650
         PACK  FIELD16,*+0(1)   1)      PACK  THEIR DIVIDEND            00014660
DVDGEN3  DC    XL2'05'                                                  00014670
         DP    FIELD16,FIELD8           DIVIDE                          00014680
DVDGEN4  DC    XL2'03'                                                  00014690
         TM    FIELD16+7,X'01'          Q-NEGATIVE QUOTENT              00014700
DVDGEN5  DC    XL2'03'                                                  00014710
         BO    *+12                     A-YES/LEAVE NEGATIVE BITS ON    00014720
DVDGEN6  DC    XL2'03'                                                  00014730
         OI    FIELD16+7,X'0F'          A-NO/MAKE POSITIVE QUOTENT      00014740
DVDGEN7  DC    XL2'03'                       DISPLAYABLE                00014750
         OI    FIELD16+15,X'0F'              MAKE POSITIVE REMAINDER    00014760
DVDGEN8  DC    XL2'05'                       DISPLAYABLE                00014770
         UNPK  RESULT(15),FIELD16(8)    UNPACK QUOTENT INTO RESULT      00014780
DVDGEN9  DC    XL2'05'                                                  00014790
         UNPK  RESULT+15(15),FIELD16+8(8) UNPK REMAINDER INTO RESULT+15 00014800
         EJECT                                                          00014810
PRINTER  DCB   DDNAME=SYSOUT,DSORG=PS,MACRF=PM,RECFM=U,                C00014820
               LRECL=120,BLKSIZE=120                                    00014830
INCARD   DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,EODAD=PAREND              00014840
         EJECT                                                          00014850
         DS    0D                                                       00014860
DISKWRT  EQU   *                                                        00014870
DISKRD   EQU   *                                                        00014880
PAREND   EQU   *                                                        00014890
         L     R5,ADRUBASE                                              00014900
SORTSW   B     SORTBP                   / NOP IF SORT WAS CALLED        00014910
         MVC   CARD+19(4),SORTTAGS      /GET ADDR                       00014920
         LA    R4,2(0)  ONLY NEED TO MEET TGRTN REQUIREMENTS            00014930
         BAL   R14,TGRTN                / OF  INPUT                     00014940
         MVC   INPROC+2(2),RXINST+2     / AND OUT PUT                   00014950
         MVC   CARD+19(4),SORTTAGS+5    / PROCEDURE TAGS                00014960
         LA    R4,2(0)  ONLY NEED TO MEET TGRTN REQUIREMENTS            00014970
         BAL   R14,TGRTN                / AND PUT IN                    00014980
         MVC   OUTPROC+2(2),RXINST+2    / COMM AREA FOR SORT            00014990
SORTBP   LA    R9,TAGTAB          * R9=LHE TAG TABLE                    00015000
PAR01    MVC   PRTAREA(133),PRTAREA-1   CLEAR PRT AREA                  00015010
PAR02    LA    R9,4(R9)                                                 00015020
         CP    TGCNT(2),=PL2'100' *ANY MORE TAGS ?                      00015030
         BE    PAR10          00' *NO                                   00015040
         MVC   PRTAREA+1(4),TGO1  *MOVE TAG ID TO PRT LINE.             00015050
         AP    TGCNT(2),ONE(1) 1' *BUMP TAG COUNT BY 1.                 00015060
         UNPK  TGO1+2(2),TGCNT(2) *UPDATE TAG ID                        00015070
         OI    TGO1+3,X'F0'   (2) *FIX ZONE                             00015080
         CLC   0(2,R9),=C'00'     *TAG DEFINED ?                        00015090
         BNE   PAR04              *YES                                  00015100
         CLC   2(2,R9),=C'00'     *TAG REFERENED?                       00015110
         BE    PAR02          (2) *NO                                   00015120
         CLI   NOGOSW,C'1'     Q. NO GO SWITCH SET                      00015130
         BE    PAR03             YES-BYPASS PRINTING UNDEFINED          00015140
         MVI   NOGOSW,C'1'    (2) *YES, ERROR.                          00015150
         MVC   PRTAREA+6(9),=C'UNDEFINED'                               00015160
PAR03    MVI   PRTAREA,X'09'      *SKIP1 TO PRT CNTL.                   00015170
         PUT   PRINTER,PRTAREA+1                                        00015180
         B     PAR01                                                    00015190
PAR04    MVC   HEXHLD(2),2(R9)    *MOVE TAG ADDR TO CONV WORKAREA.      00015200
         BAL   R14,HEXRTN         *CONVERT TO EBCDIC.                   00015210
         MVC   PRTAREA+6(4),CONVHEX    *EDCDIC TO PRT LINE              00015220
         B     PAR03                                                    00015230
TGCNT    DC    PL2'1'                                                   00015240
TGO1     DC    CL4'TG01'                                                00015250
PAR10    MVC   PRTAREA(133),PRTAREA-1                                   00015260
         MVI   PRTAREA,X'89'                                            00015270
         PUT   PRINTER,PRTAREA+1                                        00015280
         MVC   PRTAREA(133),PRTAREA-1                                   00015290
         LA    R4,EXITSK                                                00015300
         CLI   NOGOSW,C'0'      Q. ANY PARAMETERS FLAGGED               00015310
         BE    PAR20             NO-CONTINUE PROCESSING                 00015320
TAPECLSW B     BADPARMS   THIS NOP IF TAPE CLASS HAS BEEN CALLED        00015330
         ABEND 8           TO FORCE ABNORNAL TERMINATION ON BAD PARMS   00015340
         CNOP 2,4  FORCE ALIGNMENT SO FOLLOWING ACON IS FULL WORD ORIEN 00015350
PAR20    MVC   DATE6(20),DATEYMD  PUT SYSTEM DATE IN USER AREA          00015360
PAREND1  CLC   IN1MOD,ZEROS      Q. IN 1 MODULE LOADED                  00015370
         BE    PAREND2                                                  00015380
         L     15,IN1MOD             YES-LOAD 15 WITH ADR OF MODULE     00015390
         BALR  14,15                BRANCH TO MODULE TO EXEC OPEN       00015400
         DC    A(OURCODE)    USED BY READ DIRECT (AREA ADDRESS)       * 00015410
         DC    XL2'7000'                                              * 00015420
         DS    CL6                                                      00015430
PAREND2  CLC   IN2MOD,ZEROS                                             00015440
         BE    PAREND3                                                  00015450
         L     15,IN2MOD                                                00015460
         BALR  14,15                                                    00015470
         DC    A(OURCODE)                                             * 00015480
         DC    XL2'8000'                                              * 00015490
         DS    CL6                                                      00015500
PAREND3  CLC   IN3MOD,ZEROS                                             00015510
         BE    PAREND4                                                  00015520
         L     15,IN3MOD                                                00015530
         BALR  14,15                                                    00015540
         DC    A(OURCODE)                                             * 00015550
         DC    XL2'9000'                                              * 00015560
         DS    CL6                                                      00015570
PAREND4  CLC   OT1MOD,ZEROS                                             00015580
         BE    PAREND5                                                  00015590
         L     15,OT1MOD                                                00015600
         BALR  14,15                                                    00015610
         DC    A(OURCODE)     USED BY READ DIRECT MOD FOR AREA ADR      00015620
         DC    XL2'B000'     *GIVE OUT MODULE ADR OF REC AREA           00015630
         DS    CL6           *                                          00015640
PAREND5  CLC   OT2MOD,ZEROS                                             00015650
         BE    PAREND6                                                  00015660
         L     15,OT2MOD                                                00015670
         BALR  14,15                                                    00015680
         DC    A(OURCODE)     USED BY READ DIRECT MOD FOR AREA ADR      00015690
         DC    XL2'B384'     *GIVE OUT MODULE ADR OF REC AREA           00015700
         DS    CL6           *                                          00015710
PAREND6  CLC   OT3MOD,ZEROS                                             00015720
         BE    PAREND7                                                  00015730
         L     15,OT3MOD                                                00015740
         BALR  14,15                                                    00015750
         DC    A(OURCODE)     USED BY READ DIRECT MOD FOR AREA ADR      00015760
         DC    XL2'B708'     *GIVE OUT MODULE ADR OF REC AREA           00015770
         DS    CL6           *                                          00015780
PAREND7  CLC   PRTMOD,ZEROS                                             00015790
         BE    PAREND8                                                  00015800
         L     15,PRTMOD                                                00015810
         BALR  14,15                                                    00015820
         DC    S(PRTAREA)                                               00015830
PAREND8  CLC   RDCDMOD,ZEROS                                            00015840
         BE    PAREND9                                                  00015850
         L     15,RDCDMOD                                               00015860
         BALR  14,15                                                    00015870
         DS    CL4             * DUMMY CODE NEEDED FOR RD MODULE        00015880
         DC    S(CARD)      REC AREA ADR NEEDED BY RD MODULE            00015890
         DS    CL6             NEEDED BY RD CD MODULE                   00015900
PAREND9  B     DEBUGAID                                                 00015910
ZEROS    DC    1F'0'                                                    00015920
         EJECT                                                          00015930
         ORG   OURCODE+7700            *                                00015940
CLEAR01  MVI   OURCODE,X'40'           * CLEAR                          00015950
         CLOSE (INCARD,,PRINTER)                                        00015960
         LA    R2,28(0,0)              *   7680                         00015970
         LA    R1,OURCODE+256          *     POS OF OUR CODE            00015980
         MVI   OURCODE,X'40'           * TO BE USED BY USER             00015990
         MVC   OURCODE+1(256),OURCODE  *  FOR WORK AREA (2000/5999)     00016000
CLEAR02  MVC   0(256,1),OURCODE        *   AND FOR OUTPUT REC AREAS     00016010
         LA    R1,256(0,1)             *                                00016020
         BCT   R2,CLEAR02              *                                00016030
         MVI   0(R11),X'00'      PUT ZEROS AFTER LAST USER INSTRUCT     00016040
         LA    R10,OURCODE         SET 10 TO WORK AREA                  00016050
         LA    R11,OURCODE+4096    SET 11 TO LHE OF OUT1 REC AREA       00016060
         LA    R9,PUNCHID+60    * THIS IS DONE IN CASE ONE OF THE       00016070
         LA    R8,PUNCHID+30    * INPUT FILE ARE DA / OTHERWISE         00016080
         LA    R7,PUNCHID       * REGS WILL BO RELOADED BY THE I/O MOD  00016090
         LA    R6,USERBASE+4095                                         00016100
         LA    R6,1(0,6)                                                00016110
         B     USERCODE                 GO EXEC USER CODE               00016120
SYSAVE   DS    18F                                                      00016130
         EJECT                                                          00016140
RDRTN    L     R2,OUR8192     LOAD BASE REG FOR RTN                     00016150
         B     RDRTN1                                                   00016160
WRTRTN   L     R2,OUR8192     LOAD BASE REG FOR RTN                     00016170
         B     WRTRTN1                                                  00016180
PRTRTN   L     R2,OUR8192     LOAD BASE REG FOR RTN                     00016190
         B     PRTRTN1                                                  00016200
CALLRTN  L     R2,OUR8192    LOAD BASE REG FOR RTN                      00016210
         B     CALL1                                                    00016220
XCONSRTN L     R2,OUR8192      LOAD BASE REG FOR RTN                    00016230
         B     XCONS1                                                   00016240
DEBUGAID L     R2,OUR8192                                               00016250
         B     DEBUGRTN    GO PRINT DEBUGGING AIDS                      00016260
OUR8192  DC    A(OURCODE+8192)                                          00016270
         EJECT                                                          00016280
         LTORG                                                          00016290
         EJECT                                                          00016300
         ORG   OURCODE+8192    PLACE AFTER LTORG                        00016310
*  R2 IS LOADED BEFORE BRANCHING TO THESE RTNS                          00016320
READCARD DC    CL8'RRDCART '                                            00016330
READINP1 DC    CL8'RRDINP1 '                                            00016340
READINP2 DC    CL8'RRDINP2 '                                            00016350
READINP3 DC    CL8'RRDINP3 '                                            00016360
OUT1MOD  DC    CL8'RROUT1MD'                                            00016370
OUT2MOD  DC    CL8'RROUT2MD'                                            00016380
OUT3MOD  DC    CL8'RROUT3MD'                                            00016390
PTMOD    DC    CL8'RRPRTMOT'       USED TO LOAD MOD (MOD NAME)          00016400
OUT1IS   DC    CL8'RROT1ISM'                                            00016410
OUT2IS   DC    CL8'RROT2ISM'                                            00016420
OUT3IS   DC    CL8'RROT3ISM'                                            00016430
INP1IS   DC    CL8'RRINP1IS'                                            00016440
INP2IS   DC    CL8'RRINP2IS'                                            00016450
INP3IS   DC    CL8'RRINP3IS'                                            00016460
INP1ISR  DC    CL8'RRIN1ISR'                                            00016470
INP2ISR  DC    CL8'RRIN2ISR'                                            00016480
INP3ISR  DC    CL8'RRIN3ISR'                                            00016490
INP1DI   DC    CL8'RRINP1DI'                                          * 00016500
INP2DI   DC    CL8'RRINP2DI'                                          * 00016510
INP3DI   DC    CL8'RRINP3DI'                                          * 00016520
INP1DK   DC    CL8'RRINP1DK'                                          * 00016530
INP2DK   DC    CL8'RRINP2DK'                                          * 00016540
INP3DK   DC    CL8'RRINP3DK'                                          * 00016550
OUT1DA   DC    CL8'RROUT1DA'                                          * 00016560
OUT2DA   DC    CL8'RROUT2DA'                                          * 00016570
OUT3DA   DC    CL8'RROUT3DA'                                          * 00016580
MODNAME1 DS    CL8                                                      00016590
MODNAME2 DS    CL8                                                      00016600
MODNAME3 DS    CL8                                                      00016610
         EJECT                                                          00016620
PRTRTN1  EQU   *                                                        00016630
**** THIS ROUTINE GENERATE LINKAGE TO PRINTER IOMODULE AND       ****** 00016640
***** CARRIAGE CONTROL INFO.                                     ****** 00016650
         L     R5,ADRUBASE NEED TO POINT TO COMM AREA                   00016660
         CLC   CARD+19(4),=CL4'SKIP'                                    00016670
         BE    PRT02                                                    00016680
         CLC   CARD+19(4),=CL4'CHAN'                                    00016690
         BNE   RDERR                                                    00016700
         CLC   CARD+23(2),=CL2'12'                                      00016710
         BH    RDERR                                                    00016720
         MVC   SIZEWK+2(2),CARD+23                                      00016730
         LA    R8,CHTAB                                                 00016740
PRT01    BAL   R14,CNVRTN                                               00016750
         C     R3,FFCON                                                 00016760
         BE    RDERR                                                    00016770
         AR    R8,R3                                                    00016780
         MVC   PRTCTL+1(1),0(R8)   MOVE CONTROL CHAR TO IN-LINE CODE    00016790
         MVC   INSHOLD(6),PRTCODE1     * MOVE                           00016800
         MVC   INSHOLD+8(6),PRTCODE2   *    IN-LINE                     00016810
         MVC   INSHOLD+16(4),PRTCODE3  *      CODE                      00016820
         MVC   INSHOLD+24(4),PRTCODE4  *        TO                      00016830
         MVC   INSHOLD+32(8),PRTCODE5  *          INST HOLD AREA        00016840
         MVC   INSHOLD+40(8),PRTCODE6  *                                00016850
PRT01A   NOP   PRT01B    USED TO BYPASS LOAD OF MOD AFTER FIRST TIME    00016860
         LOAD  EPLOC=PTMOD     LOAD PRT MODULE AND STORE                00016870
         ST    R0,PRTMOD              ADR OF MOD                        00016880
         MVI   PRT01A+1,X'F0'     TURN ON SN TO BYPASS RELOADING MOD    00016890
PRT01B   B     PARPRT                                                   00016900
PRT02    CLI   CARD+23,C'3'                                             00016910
         BH    RDERR                                                    00016920
         LA    R8,SKTAB                                                 00016930
         MVC   SIZEWK+3(1),CARD+23                                      00016940
         B     PRT01                                                    00016950
SKTAB    DC    XL4'01091119'                                            00016960
CHTAB    DC    XL13'01899199A1A9B1B9C1C9D1D9E1'                         00016970
         DS    0F                                                       00016980
*INLINE CODE FOR  PRINT INST                                            00016990
*   I/O MOD MUST RETURN CONTROL VIA REG-14 + 2                          00017000
*    (SKIP PRT AREA ADR)                                                00017010
PRTCODE1 DC    XL2'03'                                                  00017020
PRTCTL   MVI   PRTAREA,C'1' * MOVE IN PRT CONTROL CHAR                  00017030
PRTCODE2 DC    XL2'03'                                                  00017040
         L     R15,PRTMOD     *  LOAD 15 WITH ADR OF PRTMOD             00017050
PRTCODE3 DC    XL2'01'                                                  00017060
         BALR  R14,R15        *  BR TO PRTMOD                           00017070
PRTCODE4 DC    XL2'01'                                                  00017080
         DC    S(PRTAREA)     * ADR OF PRINT ATEA                       00017090
PRTCODE5 DC    XL2'05'                                                  00017100
         AP    PRCNT,ONE      *  ADD 1  TO REC COUNT                    00017110
PRTCODE6 DC    XL2'05'                                                  00017120
         MVC   PRTAREA(133),PRTAREA-1  * CLEAR PRINT AREA               00017130
         EJECT                                                          00017140
WRTRTN1  EQU   *                                                        00017150
*                                                                       00017160
*                                                                       00017170
*                                                                       00017180
         L     R5,ADRUBASE NEED TO POINT TO COMM AREA                   00017190
WRT01    CLC   CARD+19(4),=CL4'OUT1'   Q. OUT1                          00017200
         BNE   WRT05                       NO                           00017210
WRT02    NOP   WRT03                      YES-1 TIME SWITCH TO BY PASS  00017220
         MVC   WRT02(2),WRT04           CHG NOP TO B INST               00017230
         CLC   CARD+12(2),ISCON   Q. IS THIS AN INDEX SEQ DATA SET      00017240
         BNE   WRT0201A                                               * 00017250
         MVC   OUT1MOD(8),OUT1IS YES-CHG TO LOAD ISAM MODULE            00017260
         B     WRT0201                                                * 00017270
WRT0201A CLC   CARD+12(2),DACON   Q. IS THIS A DIRECT WRT             * 00017280
         BNE   WRT0201                                                * 00017290
         MVC   OUT1MOD(8),OUT1DA                                      * 00017300
WRT0201  LOAD  EPLOC=OUT1MOD   LOAD OF MODULE AND STORING               00017310
WRT02A   ST    R0,OT1MOD    ENTRY POINT ADR OF I/O MODULE               00017320
WRT03    MVC   IOREC,ADRJ     PUT REC AREA ADR IN                       00017330
         MVC   IOCODE+4(2),WRT02A+2  PUT ADR OF LOADED MOD INLINE       00017340
         MVC   IOADD+2(2),ADROCT1    PUT ADR OF CT IN GEN CODE          00017350
WRT03A   MVC   INSHOLD(6),IOCODE   * MOVE                               00017360
         MVC   INSHOLD+8(4),IOCODE1    *   INLINE INST                  00017370
         MVC   INSHOLD+16(6),IOCODE2   *     TO INST HOLD               00017380
         MVC   INSHOLD+24(4),IOCODE3   *       AREA FOR  PRINT          00017390
         MVC   INSHOLD+32(8),IOCODE4   *         AND BEING              00017400
         MVC   INSHOLD+40(8),IOCODE5   *           MOVED INLINE         00017410
WRT04    B     PARPRT                                                   00017420
WRT05    CLC   CARD+19(4),=CL4'OUT2'   Q. OUT2                          00017430
         BNE   WRT07                      NO- CK TO SEE IF OUT 3        00017440
WRT06    NOP   WRT06B                     YES - 1 TIME SWITCH           00017450
         MVI   WRT06+1,X'F0'                CHG SW TO BRANCH AROUND     00017460
         CLC   CARD+12(2),ISCON   Q. IS THIS AN INDEX SEQ DATA SET      00017470
         BNE   WRT0601A       NO                                        00017480
         MVC   OUT2MOD(8),OUT2IS    YES-CHG TO LOAD ISAM                00017490
         B     WRT0601       LOAD MODULE                                00017500
WRT0601A CLC   CARD+12(2),DACON   Q. IS THIS DIRECT                     00017510
         BNE   WRT0601               NO - LOAD SEQ                      00017520
         MVC   OUT2MOD(8),OUT2DA  YES-SET TO LOAD WRT DIRECT MODULE     00017530
WRT0601  LOAD  EPLOC=OUT2MOD       LOAD OUT 2 MODULE                    00017540
WRT06A   ST    R0,OT2MOD         SAVE ENTRY POINT ADR OF OUT 2 MODULE   00017550
WRT06B   MVC   IOREC,ADRK                                               00017560
         MVC   IOCODE+4(2),WRT06A+2  PUT ADR OF LOADED MOD INLINE       00017570
         MVC   IOADD+2(2),ADROCT2    PUT ADR OF COUNT IN CODE           00017580
         B     WRT03A                GO MOVE IT ALL INLINE              00017590
WRT07    CLC   CARD+19(4),=CL4'OUT3'   Q. OUT 3                         00017600
         BNE   RDERR                       NO- FLAG AS ADR ERROR        00017610
WRT08    NOP   WRT08B                     YES                           00017620
         MVI   WRT08+1,X'F0'               CHG SW TO BRANCH AROUND LOAD 00017630
         CLC   CARD+12(2),ISCON   Q. IS THIS AN INDEX SEQ DATA SET      00017640
         BNE   WRT0801A       NO                                        00017650
         MVC   OUT3MOD(8),OUT3IS     YES-CHG TO LOAD ISAM               00017660
         B     WRT0801                                                  00017670
WRT0801A CLC   CARD+12(2),DACON   Q. IS THIS DIRECT                     00017680
         BNE   WRT0801              NO - LOAD SEQ                       00017690
         MVC   OUT3MOD(8),OUT3DA YES-SET TO LOAD WRT DIRECT MODULE      00017700
WRT0801  LOAD  EPLOC=OUT3MOD        LOAD OUT 3 MODULE                   00017710
WRT08A   ST    R0,OT3MOD                  SAVE ENTRY POINT OF MODULE    00017720
WRT08B   MVC   IOREC,ADRL                                               00017730
         MVC   IOCODE+4(2),WRT08A+2       PUT ADR OF LOADED MOD INLINE  00017740
         MVC   IOADD+2(2),ADROCT3         PUT ADR OF COUNT IN CODE      00017750
         B     WRT03A                     GO MOVE IT ALL INLINE         00017760
ADROCT1  DC    S(O1CNT)                                                 00017770
ADROCT2  DC    S(O2CNT)                                                 00017780
ADROCT3  DC    S(O3CNT)                                                 00017790
REG10    DC    XL2'A000'    REG 10 FOR WRITE OUT 1  REC AREA            00017800
REG11    DC    XL2'B000'           REG 11 FOR OUT 2                     00017810
REG12    DC    XL2'C000'           REG 12 FOR OUT 3                     00017820
DACON    DC    CL2'DA'                                                * 00017830
         EJECT                                                          00017840
** INLINE CODING FOR USER READ AND WRITES OF PS DATA SETS               00017850
*   I/O MOD MUST ADD 12 TO R14 TO BY PASS PARMS                         00017860
IOCODE   DC    XL2'03'                                                  00017870
         L     R15,SIZEWK   * LOAD ADR OF I/O MOD  *VTO BE FILLED IN    00017880
IOCODE1  DC    XL2'01'                                                  00017890
         BALR  R14,R15            BRANCH TO I/O MOD                     00017900
IOCODE2  DC    XL2'03'                                                  00017910
INPEOF   B     *+0              * BRANCH TO EOF  (FOR READ ONLY)        00017920
IOCODE3  DC    XL2'01'                                                  00017930
IOREC    DC    XL2'0000'        * REC AREA ADDRESS OR REG               00017940
IOCODE4  DC    XL2'05'                                                  00017950
         DC    XL6'FFFFFFFFFFFF'  FIRST 2 POS KEY ADR BISAM/  4  FUTURE 00017960
IOCODE5  DC    XL2'05'                                                  00017970
IOADD    AP    *+0(4),ONE  * ADD 1 TO RECORD COUNT                      00017980
         EJECT                                                          00017990
RDRTN1   EQU   *                                                        00018000
*  THIS RTN SETS UP THE CODE                                            00018010
*   NECESSARY TO READ CARDS                                             00018020
*                                                                       00018030
         L     R5,ADRUBASE NEED TO POINT TO COMM AREA                   00018040
         CLC   CARD+19(4),=CL4'CARD'  Q. READ CARD PARM                 00018050
         BE    RDCARD                    YES                            00018060
         CLC   CARD+19(3),=CL3'INP'    Q.READ INPUT                     00018070
         BE    RDINPUT                   YES                            00018080
         B     RDERR                     NO- FLAG AS ADR ERR            00018090
RDINPUT  CLC   CARD+12(3),ISCON    Q. SEQ IS READ  (IS)                 00018100
         BNE   RDINPUT3                                                 00018110
         MVC   MODNAME1(24),INP1IS    SET MOD NAMES TO IS               00018120
         B     RDINPUT6               GO CONV                           00018130
RDINPUT3 CLC   CARD+12(3),ISRCON   Q. INDEX SEQ/RANDOM (ISR)            00018140
         BNE   RDINPUT5                                                 00018150
         MVC   MODNAME1(24),INP1ISR   SET MOD NAMES TO ISR              00018160
RDINPUT4 BAL   R14,RDISR01            CONVERT KEY  ADDRESS              00018170
         B     RDINPUT9                                                 00018180
RDINPUT5 CLC   CARD+12(2),DICON    Q. RD DIRECT USING BLK ADR (DI)      00018190
         BNE   RDINPT5A                                                 00018200
         MVC   MODNAME1(24),INP1DI    SET MOD NAMES TO DI               00018210
         B     RDINPUT6                                                 00018220
RDINPT5A CLC   CARD+12(2),DKCON    Q. RD DIRECT USING KEY  (DK          00018230
         BNE   RDINPT5B                                                 00018240
         MVC   MODNAME1(24),INP1DK    SET MOD NAMES TO DK               00018250
         B     RDINPUT4                                                 00018260
RDINPT5B CLI   CARD+12,X'40'       Q. PS OR PO READ                     00018270
         BNE   RDERR                  NO ERROR                          00018280
         MVC   MODNAME1(24),READINP1  SET MOD NAMES TO PS/PO            00018290
RDINPUT6 LA    R4,8(0)                *CONV-EOF ADR/ GIVE TAGRTN REL    00018300
         MVC   CARD+60(4),CARD+19     * LOC OF WHERE INST WILL BE AT    00018310
         MVC   CARD+19(4),CARD+24        *  MOVE TAG TO A-ADR-FOR TAGRT 00018320
         BAL   R14,TGRTN              *  PERFORM RTN                    00018330
         MVC   INPEOF+2(2),RXINST+2   * MOVE EOF ADR TO GEN CODE        00018340
         MVC   CARD+19(4),CARD+60    * PUT ORIGINAL A-ADR BACK          00018350
RDINPUT9 CLI   CARD+22,C'1'         Q. INP 1                            00018360
         BE    RDINP1                     YES                           00018370
         CLI   CARD+22,C'2'            Q. INP 2                         00018380
         BE    RDINP2                     YES                           00018390
         CLI   CARD+22,C'3'            Q. INP 3                         00018400
         BE    RDINP3                     YES                           00018410
         B     RDERR                      NO-ADR ERR                    00018420
RDCARD   NOP   RDCARD01                                                 00018430
         LOAD  EPLOC=READCARD      LOAD CARD READ MODULE                00018440
         ST    R0,RDCDMOD           SAVE ADR OF MOD                     00018450
         MVI   RDCARD+1,X'F0'   * SET TO BYPASS LOADING MOD AGAIN       00018460
RDCARD01 MVC   IOREC,ACONCARD     * PUT LHE ADR OF RECORD AREA          00018470
         MVC   IOADD+2(2),CDCNT   * PUT ADR OF COUNT IN CODE            00018480
         MVC   IOCODE+4(2),RDCDADR * PUT ADR OF LOAD MOD ADR IN CODE    00018490
         LA    R4,8(0)                *CONV-EOF ADR/ GIVE TAGRTN REL    00018500
         MVC   CARD+19(4),CARD+24        *  MOVE TAG TO A-ADR-FOR TAGRT 00018510
         BAL   R14,TGRTN              *  PERFORM RTN                    00018520
         MVC   INPEOF+2(2),RXINST+2   * MOVE EOF ADR TO GEN CODE        00018530
         B     RDMOVE01            * GO GET EOF ADR & MOVE INST IN      00018540
RDMOVE01 MVC   INSHOLD(6),IOCODE   * MOVE                               00018550
         MVC   INSHOLD+8(4),IOCODE1  *  CODE                            00018560
         MVC   INSHOLD+16(6),IOCODE2  * TO BE                           00018570
         MVC   INSHOLD+24(4),IOCODE3 *     PRINTED                      00018580
         MVC   INSHOLD+32(8),IOCODE4 *       AND                        00018590
         MVC   INSHOLD+40(8),IOCODE5 *        INSERTED IN LINE          00018600
         B     PARPRT    GO PRINT + INSERT CODE                         00018610
RDERR    MVI   ADRERR,C'E'        FLAG AS ADDRESS ERROR                 00018620
         MVI   NOGOSW,C'1'       SET NO GO SWITCH                       00018630
         B     PARPRT                                                   00018640
ACONCARD DC    S(CARD)                                                  00018650
CDCNT    DC    S(CRDCNT)                                                00018660
RDCDADR  DC    S(RDCDMOD)                                               00018670
INP1CT   DC    S(IN1CNT)                                                00018680
INP1ADR  DC    S(IN1MOD)                                                00018690
INP2CT   DC    S(IN2CNT)                                                00018700
INP2ADR  DC    S(IN2MOD)                                                00018710
INP3CT   DC    S(IN3CNT)                                                00018720
INP3ADR  DC    S(IN3MOD)                                                00018730
RDINP1   NOP   RDINP101             ONE TIME SWITCH                     00018740
         LOAD  EPLOC=MODNAME1                                           00018750
         ST    R0,IN1MOD            SAVE ADR OF MOD                     00018760
         MVI   RDINP1+1,X'F0'       SET TO BYPASS LOADING OF MOD AGAIN  00018770
RDINP101 MVC   IOADD+2(2),INP1CT    PUT ADR OF COUNT IN - INLINE CODE   00018780
         MVC   IOCODE+4(2),INP1ADR  PUT ADR OF LOAD MOD ADR IN  CODE    00018790
         MVC   IOREC,ADRA      PUT REC AREA ADR INLINE                  00018800
         B     RDMOVE01          GO GET EOF ADR & MOVE INST INLINE      00018810
RDINP2   NOP   RDINP201            ONE TIME SW                          00018820
         LOAD  EPLOC=MODNAME2                                           00018830
         ST    R0,IN2MOD           SAVE ADR OF MOD                      00018840
         MVI   RDINP2+1,X'F0'      SET TO BYPASS LOADING OF MOD AGAIN   00018850
RDINP201 MVC   IOADD+2(2),INP2CT   PUT ADR OF COUNT IN INLINE CODE      00018860
         MVC   IOCODE+4(2),INP2ADR PUT ADR OF LOAD  MOD ADR IN CODE     00018870
         MVC   IOREC,ADRB      PUT ADR OF REC AREA INLINE               00018880
         B     RDMOVE01            GO GET EOF ADR & MOVE INST INLINE    00018890
RDINP3   NOP   RDINP301            ONE TIME SW                          00018900
         LOAD  EPLOC=MODNAME3                                           00018910
         ST    R0,IN3MOD           SAVE ADR OF MOD                      00018920
         MVI   RDINP3+1,X'F0'      SET TO BYPASS LOADING OF MOD AGAIN   00018930
RDINP301 MVC   IOADD+2(2),INP3CT   PUT ADR OF COUNT IN INLINE CODE      00018940
         MVC   IOCODE+4(2),INP3ADR PUT ADR OF LOAD MOD ADR IN CODE      00018950
         MVC   IOREC,ADRC      PUT REC AREA ADR INLINE                  00018960
         B     RDMOVE01            GO GET EOF ADR & MOVE INST INLINE    00018970
RDISR01  EQU   *  THIS RTN HANDLES RANDOM READS TO AN ISAM DATA SET     00018980
*                 BY CONV OF KEY ADR (COL 24)                           00018990
         ST    R14,RD14HOLD     SAVE RETURN ADR                         00019000
         MVC   ADR2,RDISR1AC        PUT RETURN ADR IN ADR RTN           00019010
         MVC   CARD+60(4),CARD+19   SAVE A ADR                          00019020
         MVC   CARD+19(4),CARD+24   MOVE KEY ADR TO A-ADR               00019030
         B     AADRRTN              CONV KEY ADR                        00019040
RDISR01A MVC   IOCODE4+2(2),B2D2    MOVE ADR OF KEY TO INLINE CODE      00019050
         MVC   CARD+19(4),CARD+60   PUT A-ADR BACK                      00019060
         L     R14,RD14HOLD         RETURN                              00019070
         BR    R14                                                      00019080
RD14HOLD DC    1F'0'                HOLD AREA FOR RETURN ADR            00019090
RDISR1AC DC    S(RDISR01A)                                              00019100
AMSW     DC    CL1'0'    ACCESS METHOD SW 0=PS 1=IS 2=ISR               00019110
DICON    DC    CL2'DICON'                                             * 00019120
DKCON    DC    CL2'DKCON'                                             * 00019130
         EJECT                                                          00019140
         DS    0F                                                       00019150
CALL1    EQU   *                                                        00019160
* THIS RTN GENERATES THE CODE TO CALL LOAD MODULES                      00019170
*   THIS RTN IS RESPONSIBLE FOR LOADING THE MODULE & MAKING SURE THE    00019180
*     MODULE IS ONLY LOADED ONE TIME.                                   00019190
* FORMAT OF LIST STORED AT END OF USERCODE                              00019200
*         0000-0031 = PARM LIST ADRS (8)                                00019210
*         0032-0035 = ACT LIST ADR                                      00019220
*         0036-0039 = ACT EPLOC                                         00019230
*         0040-0047 = MOD NAME                                          00019240
*         0048-0049 = BASE/DISP OF LIST STORED AT END OF USERCODE       00019250
*                                                                       00019260
         MVI   CALL02A+1,X'00'   * RESETS SWS THAT MAY HAVE BEEN SET    00019270
         MVI   CALL02AA+1,X'00'   * BY SORT OR BINARY BUT NOT RESET     00019280
CALLSR01 CLC   RRGENSRT,CARD+19   Q. CALL OF RRGEN SORT                 00019290
         BE    CALLSR10              YES                                00019300
         CLC   RELEASE,CARD+19    Q. CALL OF RELEASE FOR SORT           00019310
         BE    CALLSR20              YES                                00019320
         CLC   RETURNC,CARD+19    Q. CALL OF RETURN FOR SORT            00019330
         BE    CALLSR30              YES                                00019340
         CLC   RRBINARY,CARD+19    Q. CALL OF RRBINARY                  00019350
         BNE   CALL01                 NO                                00019360
         MVC   BINPARMS,CARD+44   YES-STORE PARMS PASSED        C9 (-)  00019370
         MVI   CALL02AA+1,X'F0'      SET SW FOR RRBINARY                00019380
         MVI   CARD+43,X'40'      ONLY LET IT CK FOR 2 PARMS            00019390
CALL01   MVC   MODULENA,CARD+19  MOVE IN MODULE NAME FOR LOAD INST      00019400
         CLI   CARD+27,X'40'   Q.ARE THE ANY PARAMETERS TO PASS         00019410
         BE    CALL01AA          NO-BYPASS CREATING PARAM LIST          00019420
         CLC   CARD+27(7),USINGCON    Q. IS ',USING,' IN CARD           00019430
         BNE   RDERR                     NO- GO TO FLAG AS ERROR        00019440
CALL01AA CLC   ENDUSER,CENDUSER    Q. FIRST MODULE TO BE CALLED         00019450
         BE    CALL01B                YES                               00019460
         L     R4,ENDUSER                                               00019470
CALL01A  CLC   40(8,R4),CARD+19   Q.  MODULE CALLED BEFORE              00019480
         BE    CALL0105               YES                               00019490
         LA    R4,52(R4)       NO - BUMP TO LOOK AT NEXT ENTRY          00019500
         C     R4,CENDUSER          Q. HAVE WE LOOKED AT ALL MOD CALLED 00019510
         BNE   CALL01A                NO-TRY AGAIN                      00019520
         B     CALL01B                NEVER USED BEFORE                 00019530
CALL0105 MVI   CALL05+1,X'F0'         BRANCH AROUND LOAD OF MOD         00019540
         MVC   CARD(4),36(R4)    SAVE EPLOC FOR MODILE                  00019550
CALL01B  LH    R4,BDLIST      * KEEP BASE/DISP                          00019560
         LA    R5,52(0)      * ADR POINT TO LIST                        00019570
         SR    R4,R5          *  BEING CREATED                          00019580
         STH   R4,BDLIST      *                                         00019590
         L     R4,ENDUSER      *PARMS LIST ARE STORE AT END             00019600
         LA    R5,52(0)        * OF USERCODE                            00019610
         SR    R4,R5           * FORMAT             32POS/PARM-ADR      00019620
         ST    R4,ENDUSER      *  4POS/EPLOC 4POS/LIST ADR  8POS-MODID  00019630
         LA    R5,CARD+33       *    2POS/BD-OF-LIST-ADR  2POS FILLER   00019640
         LA    R9,8(0)          *TALLY CT 8 PARMS MAX                   00019650
CALL02   CLI   0(R5),C','       * Q. LAST PARM                          00019660
         BE    CALL03           *    NO                                 00019670
CALL02A  NOP   CALLSR12   THIS BR IS EXEC WHEN CALL OF RRGEN SORT MOD   00019680
CALL02AA NOP   CALLBIN1   THIS BR EXEC WHEN CALL OF RRBINARY            00019690
         LA    R3,4(0)       ***POINT R4                                00019700
         SR    R4,R3         ***BACK TO LAST PARM IN LIST               00019710
CALL02B  MVI   0(R4),X'80'    * YES FLAG AS LAST ONE                    00019720
         L     R4,ENDUSER                                               00019730
         B     CALL04                                                   00019740
CALL03   MVC   CARD+19(4),1(R5)   MOVE IN NEXT PARM                     00019750
         BAL   R14,CALLST01         GO CONVERT IT TO ACTUAL             00019760
         ST    R3,0(R4)             STORE ACTUAL ADR IN LIST            00019770
         LA    R4,4(R4)         POINT R4 TO ADR TO STORE NEXT PARM ADR  00019780
         LA    R5,5(R5)             BUMP 5 TO POINT TO NEXT PARM IN CD  00019790
         BCT   R9,CALL02          Q. END OF PARM (MAX 8)                00019800
         B     CALL02A            A-YES                                 00019810
CALL04   MVC   40(8,R4),MODULENA     YES-PUT MOD NAME AT END            00019820
         LH    R5,BDLIST     * BUMP BASE/DISP OF LIST BY 1              00019830
         LA    R5,1(R5)      *  TO ADJUST FOR IT BEING OFF              00019840
         STH   R5,48(R4)     *    STORE RESULT                          00019850
         CLI   CARD+27,X'40'  Q. WERE ANY PARMS PASSED                  00019860
         BE    CALL09A            NO - GO PUT ZEROS IN ACTUAL LIST ADR  00019870
         ST    R4,32(R4)         PUT ACTUAL LIST ADR IN                 00019880
CALL04A  ST    R4,BINLISTA   STORE ACTUAL LIST ADR FOR BINARY SCH RTN   00019890
CALL05   NOP   CALL07              SW TO BYPASS CALLING MOD AGAIN       00019900
CALL06   LOAD  EPLOC=MODULENA       LOAD MODULE                         00019910
         ST    R0,36(R4)  STORE ENTRY POINT LOC                         00019920
         CLC   MODULENA,RRGENSRT  Q. IS IT CALL OF RRGEN SORT           00019930
         BNE   CALL08                NO                                 00019940
         L     R5,ADRUBASE  MUST BE LOADED, SRT4,8,12 IN COMM AREA      00019950
         L     R3,36(R4)             YES-GET ACT ADR                    00019960
         LA    R3,10(R3)             BUMP ACT BY 10                     00019970
         ST    R3,SRT4               STORE FOR RELEASE ADR              00019980
         LA    R3,14(R3)           BUMP ACT BY 14                       00019990
         ST    R3,SRT8               STORE FOR  SORT ADR                00020000
         LA    R3,14(R3)           BUMP ACT BY 14                       00020010
         ST    R3,SRT12              STORE FOR RETURN ADR               00020020
CALL08   CLC   MODULENA,TAPECLAS       Q. TAPECLASS                     00020030
         BNE   CALL08A                     NO                           00020040
         MVI   TAPECLSW+1,X'00'  TURN ON SW TO TAKE ABEND IF PARMS BAD  00020050
         L     R1,32(R4)                   YES - LOAD LIST ADR          00020060
         L     R15,36(R4)                      LOAD EPLOC               00020070
         BALR  R14,R15                   GO TO TAPECLASS                00020080
         LA    R14,0(0,0)                                               00020090
         CR    R14,R15                 Q. GOOD RETURN                   00020100
         BNE   RDERR                       NO - GO FLAG AS ERROR        00020110
         B     PARPRT                      YES - GO PRINT               00020120
CALL08A  CLC   MODULENA,RRBINARY       Q. IS IT THE BINARY SEARCH       00020130
         BNE   CALL09                    NO                             00020140
         MVC   BINADR,36(R4)    YES MOVE IN EPA OF RRBINARY MODULE      00020150
CALL09   MVC   CALLINST+2(2),48(R4)      BASE/DISP ADR TO GEN CODE      00020160
         MVI   CALL05+1,X'00'        NOP BYPASSING LOAD INST            00020170
         MVC   INSHOLD(6),CALLGEN1    * MOVE                            00020180
         MVC   INSHOLD+8(6),CALLGEN2  *  GENERATED                      00020190
         MVC   INSHOLD+16(6),CALLGEN3 *   CODE                          00020200
         MVC   INSHOLD+24(4),CALLGEN4 *    IN-LINE                      00020210
         MVC   INSHOLD+32(6),CALLGEN5                                   00020220
         MVC   INSHOLD+40(4),CALLGEN6                                   00020230
         MVC   INSHOLD+48(6),CALLGEN7                                   00020240
         MVC   INSHOLD+56(8),CALLGEN8                                   00020240
         MVC   INSHOLD+64(6),CALLGEN9                                   00020240
         CLC   MODULENA,RRBINARY   Q. IS THIS RRBINARY SEARCH           00020250
         BNE   PARPRT                 NO-GO PRT & INSERT CODE           00020260
         L     R1,BINLISTA     ACTUAL LIST ADR                          00020270
         L     R15,BINADR      EPA OF BINARY SEARCH                     00020280
         BALR  R14,R15         GO LET HIM DO HSKING                     00020290
         LA    R14,0(0,0)      SET 14 TO ZEROS                          00020300
         CR    R14,R15      Q. WAS PARMS VALID                          00020310
         BNE   RDERR           NO-GO TO FLAG AS ERROR                   00020320
         B     PARPRT         YES- GO PRT & INSERT CODE                 00020330
CALL09A  MVC   32(4,R4),CHEXZERO    R1 WILL EQ ZEROS IF NO PARMS        00020340
         B     CALL04A                WERE PASSED                       00020350
CHEXZERO DC    XL4'00'                                                  00020360
CALL07   MVC   36(4,R4),CARD   PUT EPLOC IN FOR PREVIOUSLY LOADED       00020370
         MVI   CALL05+1,X'00'    NOP BYPASSING LOAD INST                00020380
         B      CALL08                                                  00020390
* GEN CODE FOR CALL MACRO                                               00020400
CALLGEN1 DC    XL2'03'                                                  00020410
CALLINST LA    R2,0(0)            LOAD ADR OF INFO ABOUT MOD            00020420
CALLGEN2 DC    XL2'03'                                                  00020430
         L     R1,32(R2)      LOAD ACTUAL LIST ADR                      00020440
CALLGEN3 DC    XL2'03'                                                  00020450
         L     R15,36(R2)     LOAD ACTUAL EPLOC                         00020460
CALLGEN4 DC    XL2'01'                                                  00020470
         BASSM R14,R15            GO TO MOD IN ITS ADDRESSING MODE      00020480
CALLGEN5 DC    XL2'03'
         LA    R14,6(R14)         POINT PAST BSM
CALLGEN6 DC    XL2'01'
         BSM   0,R14              BRANCH TO NEXT AND FIX ADDRESS MODE
CALLGEN7 DC    XL2'03'                                                  00020490
         CVD   R15,RTCD       CONVERT RETURN CODE TO DEC                00020500
CALLGEN8 DC    XL2'05'                                                  00020510
         UNPK  RTCD(4),RTCD+4(4)      CONVERT RETURN CODE TO ZONED      00020520
CALLGEN9 DC    XL2'03'                                                  00020530
         OI    RTCD+3,X'F0'  ELIM C ON LAST POS                         00020540
* THIS RTN CONVERTS LIST ADR  WHICH SHOULD BE IN CARD+19 TO:1ST         00020550
*  BASE/DISP AND THEN TO ACTUAL                                         00020560
CALLST01 ST    R14,CALLHOLD  SAVE RETURN ADR                            00020570
         CLC   CARD+19(4),C0000    Q. IS ADR > OR = 0000                00020580
         BL    RDERR                  NO . ERROR                        00020590
         CLC   CARD+19(4),C5999    Q. IS ADR < 5999                     00020600
         BH    RDERR                  YES - ERROR                       00020610
         MVC   ADR2,CALST03A         *PUT RTN ADR IN ADRRTN AND GO LET  00020620
         ST    R4,CALLWK       SAVE 4                                   00020630
         B     AADRRTN               *ADRRTN CONV IT TO BASE/DISP       00020640
CALLST03 L     R4,CALLWK          RELOAD 4 AFTER ADR RTN                00020650
         ST    R10,CALLWK                                               00020660
         LA    R10,OURCODE   CHG 10 TO WHAT IT WILL BE AT USER TIME     00020670
         MVC   CALLST04+2(2),B2D2    /CHG BASE/DISP                     00020680
CALLST04 LA    R3,*+0                /  TO ACTUAL                       00020690
         L     R10,CALLWK           RELOAD REG 10                       00020700
         L     R14,CALLHOLD         (RETURN                             00020710
         BR    R14                    TO USER)                          00020720
CALLHOLD DC    1F'0'       HOLD AREA FOR RETURN ADR                     00020730
CALLWK   DC    1F'0'                                                    00020740
CALST03A DC    S(CALLST03)    THE ADR WHERE WE WANT THE ADRRTN TO RETN  00020750
USINGCON DC    CL7',USING,'                                             00020760
         DS    0F                                                       00020770
C0000    DC    CL4'0000'                                                00020780
C5999    DC    CL4'5999'                                                00020790
MODULENA DC    CL8' '                                                   00020800
TAPECLAS DC    CL8'TAPECLAS'                                            00020810
CALLSR10 NOP   RDERR            *CAN ONLY CALL RRGENSRT                 00020820
         MVI   CALLSR10+1,X'F0'   * ONE TIME                            00020830
         MVC   SORTTAGS,CARD+44    SAVE TGS FOR END OF PARS LOGIC       00020840
*  VALID AT TAGS FOR IN + OUT PROCEDURES                                00020850
         CLC   CARD+44(2),=C'TG'       Q. VALID TAG , IN ADR            00020860
         BNE   RDERR                      NO                            00020870
         CLC   CARD+49(2),=C'TG'       Q. VALID TAG , OUTPUT PROC ADR   00020880
         BNE   RDERR                      NO                            00020890
         MVC   SIZEWK+2(2),CARD+46                                      00020900
         BAL   R14,CNVRTN                 *CONVERT TG # TO BINARY       00020910
         C     R3,FFCON                Q.          WAS IT VALID         00020920
         BE    RDERR                      NO                            00020930
         C     R3,ZERO                 Q  TAG # ZERO                    00020940
         BE    RDERR                         YES-INVALID                00020950
         MVI   SORTSW+1,X'00'  SET SORT SW IN PAREND LOGIC              00020960
         MVC   SIZEWK+2(2),CARD+51                                      00020970
         BAL   R14,CNVRTN                                               00020980
         C     R3,FFCON                Q. VALID TG #                    00020990
         BE    RDERR                             NO-INVALID             00021000
         C     R3,ZERO                 Q. TAG # ZERO                    00021010
         BE    RDERR                         YES-INVALID                00021020
         MVI   CARD+43,C' '        CLEAR COMMA BEFORE TAGS IN CARD      00021030
*  ELIMINATES CALL RTN LOOKING AT 2 TG ADR IN CALL OF RRGEN SRT CARD '  00021040
         MVI   CALL02A+1,X'F0'  THIS WILL SET A SWITCH TO BRANCH BACK   00021050
*                               TO CALLSR12 BEFORE CALL RTN FLAGS       00021060
*                               LAST PARM IN LIST. WE MUST ADD TWO ADRS 00021070
*                               TO LIST(INPUT + OUTPUT PROCEDURE ADRS)  00021080
*                NOTE: REG 4 WILL POINT TO WHERE NEXT PARM ADR IS TO    00021090
*                      BE STORED                                        00021100
         B     CALL01           GO BACK TO NORMAL CALL LOGIC            00021110
CALLSR12 MVC   0(4,R4),INADR    MOVE ACT ADR OF INPUT PROC TO LIST      00021120
         LA    R4,4(R4)         BUMP BY 4                               00021130
         MVC   0(4,R4),OUTADR   MOVE ACT ADR OF OUTPUT PROC TO LIST     00021140
         LA    R4,4(R4)     BUMP BY 4                                   00021150
         MVC   0(4,R4),SORTREC   MOVE SORT REC ACT ADR INTO LIST        00021160
         B     CALL02B          GO BACK TO NORMAL LOGIC                 00021170
CALLSR20 MVC   SORTRI1+2(2),BDSRT4  MOVE BD ADR OF EPA OF RELEASE       00021180
         B     CALLSR32                                                 00021190
CALLSR30 MVC   SORTRI1+2(2),BDSRT12 MOVE BD ADR OF EPA OF RETURN        00021200
CALLSR32 MVC   INSHOLD(6),SORTRS1   *MOVE GEN CODE                      00021210
         MVC   INSHOLD+8(4),SORTRS2    IN-LINE                          00021220
         B     PARPRT               GO PRINT AND INSERT CODE            00021230
CALLBIN1 L     R5,ADRUBASE   MUST BE LOADED                             00021240
         MVC   0(4,R4),INX1ADRB     MOVE ACT ADR OF INX1 TO LIST        00021250
         LA    R4,4(R4)             BUMP 4 BY 4                         00021260
         MVC   0(4,R4),BINPMADR   MOVE ADR OF PARMS IN       PARENDS    00021270
         B     CALL02B            GO BACK TO NORMAL       LOGIC         00021280
INADR    DC    A(INPROC)                                                00021290
OUTADR   DC    A(OUTPROC)                                               00021300
SORTREC  DC    A(OURCODE+3000)     SORT RECORD AREA 5000                00021310
RRBINARY DC    CL8'RRBINARY'                                            00021320
BINADR   DC    1F'0'       ENTRY POINT ADR OF RRBINARY STORED HERE      00021330
BINPARMS DC    CL20'0'                                                  00021340
BINPMADR DC    A(BINPARMS)                                              00021350
BINLISTA DC    1F'0'                                                    00021360
INX1ADRB DC    A(INX1)                                                  00021370
SORTRS1  DC    XL2'03'                                                  00021380
SORTRI1  L     R15,HEXWORK LOAD ADR OF ENTRY POINT                      00021390
SORTRS2  DC    XL2'01'                                                  00021400
         BALR  R14,R15     BR TO IT                                     00021410
BDSRT4   DC    S(SRT4)                                                  00021420
BDSRT12  DC    S(SRT12)                                                 00021430
RRGENSRT DC    CL8'RRGENSRT'                                            00021440
RELEASE  DC    CL8'RELEASE '                                            00021450
RETURNC  DC    CL8'RETURN  '                                            00021460
         EJECT                                                          00021470
XCONS1   EQU   *                                                        00021480
* THIS RTN CONVERTS HEX DIGITS TO BYTES  EG C1 ON CARD = A IN STORAGE   00021490
*   AFTER  CONVERSION TO BYTES CONTROL IS PASSED TO CONSRTN TO PLACE    00021500
*    CONSTANT IN MEMORY                                                 00021510
         L     R3,SIZEHLD    *LOAD BINARY SIZE                          00021520
         AR    R3,R3         *ADD IT TO ITSELF                          00021530
         LA    R3,1(R3)      *ADD 1 TO IT = # OF HEX DIGITS             00021540
         ST    R3,HEXWORK     STORE IT                                  00021550
         MVC   XCONS02+1(1),HEXWORK+3  MOVE COMPUTED SIZE TO TRANSLATE  00021560
         MVC   XCONS03+1(1),HEXWORK+3                                   00021570
         MVC   HEXTR(40),HEXTR+50    CLEAR FIRST 40 POSITIONS           00021580
XCONS02  TR    CARD+33(40),HEXTR     TRANSLATE  F0=00 F9=09 C1=0A C6=0F 00021590
XCONS03  NC    HEXTR(40),CARD+33    Q.  ALL TOP BITS OFF                00021600
         BM    ML04A                    NO-BAD HEX DIGIT - GO FLAG ERR  00021610
         MVC   HEXTR(40),CARD+33     MOVE CARD FOR PACKING              00021620
         PACK  CARD+33(8),HEXTR(15)    * CONVERT                        00021630
         PACK  CARD+40(8),HEXTR+14(15) *  DIGITS TO                     00021640
         PACK  CARD+47(7),HEXTR+28(13) *   CHARACTERS                   00021650
         B     CONSRTN         GO LET CONSTANT RTN STORE IT             00021660
HEXWORK  DC    1F'0'                                                    00021670
HEXTR    DC    CL193' '                                                 00021680
         DC    XL6'0A0B0C0D0E0F'                                        00021690
         DC    CL41' '                                                  00021700
         DC    XL10'00010203040506070809'                               00021710
         DC    CL6' '                                                   00021720
         EJECT                                                          00021730
DEBUGRTN EQU   *                                                        00021740
         L     R5,UBASE      SET 5 TO USER BASE                         00021750
         ST    R5,HEXHLD               STORE ADR                        00021760
         BAL   R14,HEXRTN              CONVERT TO HEX  A=C1             00021770
         MVC   RECCTCON+30(6),CONVHEX+2                                 00021780
         LA    R5,4(R5)                POINT 5 TO INP1 REC COUNT        00021790
         ST    R5,HEXHLD                                                00021800
         BAL   R14,HEXRTN                                               00021810
         MVC   RECCTCON+42(6),CONVHEX+2                                 00021820
         LA    R5,4(R5)                5=INP2                           00021830
         ST    R5,HEXHLD                                                00021840
         BAL   R14,HEXRTN                                               00021850
         MVC   RECCTCON+54(6),CONVHEX+2                                 00021860
         LA    R5,4(R5)                INP3                             00021870
         ST    R5,HEXHLD                                                00021880
         BAL   R14,HEXRTN                                               00021890
         MVC   RECCTCON+66(6),CONVHEX+2                                 00021900
         LA    R5,4(R5)                OUT1                             00021910
         ST    R5,HEXHLD                                                00021920
         BAL   R14,HEXRTN                                               00021930
         MVC   RECCTCON+78(6),CONVHEX+2                                 00021940
         LA    R5,4(R5)                OUT2                             00021950
         ST    R5,HEXHLD                                                00021960
         BAL   R14,HEXRTN                                               00021970
         MVC   RECCTCON+90(6),CONVHEX+2                                 00021980
         LA    R5,4(R5)                OUT3                             00021990
         ST    R5,HEXHLD                                                00022000
         BAL   R14,HEXRTN                                               00022010
         MVC   RECCTCON+102(6),CONVHEX+2                                00022020
      LA       R5,4(R5)                CARD                             00022030
         ST    R5,HEXHLD                                                00022040
         BAL   R14,HEXRTN                                               00022050
         MVC   RECCTCON+114(6),CONVHEX+2                                00022060
         MVC   HEXHLD(4),P000           CONVERT                         00022070
         BAL   R14,HEXRTN                  ACTUAL PRT ADR               00022080
         MVC   AREALCON+30(6),CONVHEX+2                                 00022090
         MVC   HEXHLD(4),CD00                                           00022100
         BAL   R14,HEXRTN               CARD ADR                        00022110
         MVC   AREALCON+114(6),CONVHEX+2                                00022120
         MVC   HEXHLD(4),CONSACT                                        00022130
         BAL   R14,HEXRTN              CONS ADR                         00022140
         MVC   AREALCO2+52(6),CONVHEX+2                                 00022150
         LA    R10,OURCODE+4096         R10=LHE OUT 1                   00022160
         ST    R10,HEXHLD                                               00022170
         BAL   R14,HEXRTN                                               00022180
         MVC   AREALCON+78(6),CONVHEX+2                                 00022190
         LA    R10,900(R10)             OUT I                           00022200
         ST    R10,HEXHLD                                               00022210
         BAL   R14,HEXRTN                                               00022220
         MVC   AREALCON+90(6),CONVHEX+2                                 00022230
         LA    R10,900(R10)            OUT 3                            00022240
         ST    R10,HEXHLD                                               00022250
         BAL   R14,HEXRTN                                               00022260
         MVC   AREALCON+102(6),CONVHEX+2                                00022270
         MVC   HEXHLD(4),INX1ACON                                       00022280
         BAL   R14,HEXRTN                                               00022290
         MVC   AREALCO2+10(6),CONVHEX+2                                 00022300
         MVC   HEXHLD(4),INX2ACON                                       00022310
         BAL   R14,HEXRTN                                               00022320
         MVC   AREALCO2+24(6),CONVHEX+2                                 00022330
         MVC   HEXHLD(4),RESULTAC                                       00022340
         BAL   R14,HEXRTN                                               00022350
         MVC   AREALCO2+38(6),CONVHEX+2                                 00022360
         MVC   PRTAREA(133),PRTAREA-1                                   00022370
         PUT   PRINTER,PRTAREA+1                                        00022380
         MVC   PRTAREA+50(14),DEBUGCON   MOVE IN DEBUG HDR              00022390
         PUT   PRINTER,PRTAREA+1                                        00022400
         MVC   PRTAREA+1(120),RECCTCON  RECORD COUNT LOC                00022410
         PUT   PRINTER,PRTAREA+1                                        00022420
         MVC   PRTAREA+1(120),AREALCON   AREA LOCATIONS                 00022430
         PUT   PRINTER,PRTAREA+1                                        00022440
         MVC   PRTAREA(133),PRTAREA-1                                   00022450
         MVC   PRTAREA+16(58),AREALCO2                                  00022460
         PUT   PRINTER,PRTAREA+1                                        00022470
         L     R5,UBASE      SET 5 TO USER BASE                         00022480
         MVC   PRTAREA(133),PRTAREA-1                                   00022490
         PUT   PRINTER,PRTAREA+1    SPACE 1 LINE                        00022500
         B     CLEAR01                                                  00022510
UBASE    DC    A(USERBASE)                                              00022520
P000     DC    A(PRTAREA+1)                                             00022530
CD00     DC    A(CARD)                                                  00022540
CONSACT  DC    A(CONS)                                                  00022550
INX1ACON DC    A(INX1)                                                  00022560
INX2ACON DC    A(INX2)                                                  00022570
RESULTAC DC    A(RESULT)                                                00022580
DEBUGCON DC    CL14'DEBUGGING AIDS'                                     00022590
RECCTCON DC    CL49'RECORD COUNT LOCATIONS  PRINT=XXXXXX INP1=XXXXXX '  00022600
         DC    CL48'INP2=XXXXXX INP3=XXXXXX OUT1=XXXXXX OUT2=XXXXXX '   00022610
         DC    CL23'OUT3=XXXXXX CARD=XXXXXX'                            00022620
AREALCON DC    CL50'AREA LOCATIONS          P000 =XXXXXX A000=REG7   B' 00022630
ARE      DC    CL50'000=REG8   C000=REG9   J000=XXXXXX K000=XXXXXX L00' 00022640
         DC    CL20'0=XXXXXX CD00=XXXXXX'                               00022650
AREALCO2 DC    CL47'     INX1=XXXXXX   INX2=XXXXXX   RS00=XXXXXX   '    00022660
         DC    CL11'0000=XXXXXX'                                        00022670
         EJECT                                                          00022680
REGS     DSECT                                                          00022690
R0       EQU   0                                                        00022700
R1       EQU   1                                                        00022710
R2       EQU   2                                                        00022720
R3       EQU   3                                                        00022730
R4       EQU   4                                                        00022740
R5       EQU   5                                                        00022750
R6       EQU   6                                                        00022760
R7       EQU   7                                                        00022770
R8       EQU   8                                                        00022780
R9       EQU   9                                                        00022790
R10      EQU   10                                                       00022800
R11      EQU   11                                                       00022810
R12      EQU   12                                                       00022820
R13      EQU   13                                                       00022830
R14      EQU   14                                                       00022840
R15      EQU   15                                                       00022850
         END   OURCODE                                                  00022860
