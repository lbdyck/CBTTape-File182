)F Function -

 This application supports PDSE V2 member generations and is the
 critically acclaimed Lionel B. Dyck PDSEGEN dialog which runs
 under the ISPF Dialog Manager.

 ---
 Copyleft (C) 2020, Lionel B. Dyck

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

   http://www.gnu.org/licenses/
)X Syntax -
     %PDSEGEN dataset-name filter
  or
     %PDSEGEN dataset-name(filter)

 Aliases  - none.
 Required - dataset-name
)O Operands -
  dataset-name - A PDSE dataset name or *

                 If * then a selection list of previously
                 used datasets will be presented.

                 If blank then a prompting panel will
                 be presented to enter a dataset name.

                 The PDSE dataset must be cataloged.

  filter       - An optional member filter
                 (see the Filter tutorial for more info)

)S Subcommands:
   <PRIMARY>
   Age      - Display member age metrics
   Backup   - Backup a V2 PDSE to a PDSEGEN backup file
   Browse   - Browse member
   C        - Change datasets
   Compare  - Compare members
   Copy     - Copy members
   Edit     - Edit member
   Filter   - Filter member list (MEMList and ML are aliases)
   Find     - Find string in members
   Genonly  - Hide     0 generations (toggle)
   Hide     - Hide non-0 generations (toggle)
   HIGen    - Display dummy members
   ID xxx   - Display only members with xxx anywhere in the ID field
   INfo     - Data set information
   Isplist  - Output member table to LIST dataset (see usermod below)
   Locate   - Locate member name
   MINE     - Display only members with active userid
   MODel    - Allocate a new dataset based on the active dataset
   Options  - Display a Primary Command prompting panel
   Output   - Output member table to temp dataset
   Prune    - Remove old generations and retain a number of gens 0-n
   REFList  - List last 30 data sets used in ISPF to switch to
   REFResh  - Refresh the member list
   RESTore  - Restore a V2 PDSE from a PDSEGEN backup file
   Set      - Set default select option
   SETMacro - Set initial edit macro for a dataset suffix
   Sort     - Sort member list
   Submit   - Submit member to internal reader
   Validate - Validate PDSE with IEBPDSE utility
   View     - View member
   Left     - Scroll member list left  (toggle yy and yyyy dates)
   Right    - Scroll member list right (toggle yy and yyyy dates)

   Today    - Display all members changed today
   Week     - Display all members changed in the last 7 days
   Month    - Display all members changed in the last 30 days
   Year     - Display all members changed this year
   Since -nn
            - Display all members updated since the previous nn days
   Since yy/mm/dd
            - Display all members updated since the provided date

   <LINE>
   A Attrib  ** Change attributes (Version, Modification Level, Userid)
   B Browse  ** Browse the member
   C COPy       Copy a member to another PDSE or PDS
                Along with all generations
   D Delete     Delete a member or generation (if delete is for gen 0)
                then the member and all generations are deleted)
   E Edit    ** Edit the member (Converted to View for non-0 gens)
   G RECover *  Recover a generation to a new member
   H Hide       Hide the current row
                This only works to exclude the member from the display
                and from being accessed using Browse/Edit/View
                This will NOT exclude the member/gen from
                Backup/Restore/Copy
   I Info       Display ISPF Statistics about the member or generation
   J SUbmit     Submit the member to the internal reader
   K Klone   ** Clone the member (gen 0 only)
     Clone      generations are not cloned
   M MAil       Mail the member$m1
   O or /       Display a member/generation sensitive popup of commands
   P Promote *  Promote a generation to generation 0
                Copies a non-0 generation into gen 0 and leaves the
                user in Edit.  If you issue Edit Save, then gen 0 will
                be replaced.
   Q RENSwap ** Rename and swap the members and all generations
   R REName  ** reName the member and all generations
   S SElect     Select the member using the default set action (B, E, V)
   T Tryit      Edit with the TRYIT Edit Macro
   U User       User command
   V View       View the member
   X EXecute    eXecute the member (REXX or CLIST)
   Z COMpare *  Compare generation 0 to non-0 generation member
   =            Repeat prior line command

             *  = Non-0 Generations Only
             ** = Generation 0 Only

=ATTRIBUTE
)F Function - Line command

   Review/Change the Version, Modification Level, and Userid of the
   selected member.

   This only works for base (generation 0) members and does not work for
   non-0 generations.

=INFO
)F Function - Line command

   Display ISPF Statistics (if available) for the selected member or
   generation.

=BROWSE=EDIT=VIEW
)F Function - Line command

   Browse and View will invoke the ISPF Browse or View interface for the
   base member (generation 0) and non-0 generations.

   Edit will invoke the ISPF Edit interface for gen 0 members only.
   If requested for a non-0 generation, the request will be converted
   to View.

=DELETE
)F Function - Line command

   Delete will delete an individual member, an individual generation, or
   if requested on the base member (gen 0), then the member and all
   generations will be deleted. Optionally the base member will be
   deleted and the generations promoted up.

=RENAME
)F Function - Line command

   Rename will rename the base member and all generations.

=RENSWAP
)F Function - Line command

   Rename swap the two members and all related generations.

=COMPARE
)F Function - Line command and Primary command

   Compare may be requested as a member selection or on Command line.

      Primary command syntax is:  COMPARE member from-gen to-gen

          Example:  Compare member1 -3 -1

   Abbreviation is COM

   As a line command generation 0 will be compared to the non-0
   generation.

      Line command syntax:  COMpare or Z

   Notes: During the compare any changes can be saved by using ISPF Edit
          Create or Replace commands. The new/updated member will not be
          in the member list display until after a Refresh is performed.

          If Compare/Z is on a base (generation 0) row then the Compare
          ISPF prompt will be displayed.

=EXECUTE
)F Function - Line command

   Member selection X will cause the selected member, which should be a
   REXX EXEC or a CLIST, to be executed.

   If the member is a generation then it will be copied to a temporary
   dataset prior to execution.

=SUBMIT
)F Function - Line command

   SUbmit (J)

   Submit the selected member or generation to the internal reader.

=PROMOTE=RECOVER
)F Function - Line command

   Promote and Recover are designed to take a non-0 generation and make
   it a generation 0 member so that it can be used by other programs.

   Promote will take the non-0 generation member and replace the base
   generation 0 member with the non-0 generation. This will push the
   current generation 0 member to the -1 generation.

   Recover will prompt the user for a new member name and then copy all
   records from the non-0 generation to the new member.

=HIDE
)F Function - Line command

   The H line selection will hide the current row (member generation).

   This is to remove the member/generation from the display and also
   prevents the Browse *, Edit *, Sub *, and View * commands from
   processing the member/generation.

   Hiding a member/generation does not hide the member/generation from
   the Backup, Restore, or Copy functions.

=COPY
)F Function - Line command

To copy the selected member to another PDSE or PDS.

Only base (generation 0) members may be selected and then the
base, and ALL generations, will be copied to an existing PDSE or
PDS.

To copy a generation alone then it must first be Recovered to
a base member.

The target PDSE or PDS must already exist.

=KLONE
)F Function - Line command

   To copy the selected member to another PDSE or PDS.

   Only base (generation 0) members may be selected and then the
   base, and ALL generations, will be copied to an existing PDSE or
   PDS.

   To copy a generation alone then it must first be Recovered to
   a base member.

   The target PDSE or PDS must already exist.

   Klone or K or CLone

   K will clone base, generation 0, members by making a full copy of
   them within the existing PDSE.  Their generations, if any, will
   NOT be copied.

=USER
)F Function - Line command

   Enter any command (TSO command, CLIST, or REXX EXEC) and a /
   to indicate where the 'dataset(member)' will be in the command.

   Examples:   LIST /
               XMIT node.userid DS(/) NoLog

   Note: The user command field is scrollable to allow up to 255
         characters in the user command. Use the Left and Right
         PF Keys. ZEXPAND also works with that field.

=MAIL
)F Function - Line command

   E-Mail the member using the XMITIP e-mail application.

   The XMITIP ISPF dialog will allow the member to be sent as
   plain text, HTML, PDF, or RTF.

=LINE/SELECTION/PROMPTING
)F Function - Line command

   A line selection of O or / will bring up a prompting popup
   panel with the line selection options to select from.

=OPTIONS
)F Function - Line command

)X Syntax -
     O or /

   Display a member/generation sensitive popup of commands.

=SELECT
)F Function - Line command

)X Syntax -
     S

   Select the member using the default set action (B, E, V).

=EQUAL
)F Function - Line command

)X Syntax -
     =

   Repeat prior line command action (B, E, V).

=TRYIT
)F Function - Line command

)X Syntax -
     Tryit

   TRYIT will invoke the ISPF Edit interface for generation 0 members
   only.  If requested for a non-0 generation then the request will be
   converted to View.

   Enter TRYIT ? to view the tutorial on the TRYIT Edit/View Command.

=BACKUP
)F Function - Primary command

   The BACKUP Command will display a panel that provides the ability to
   backup the specified PDSE dataset with all members and generations to
   a new PDSE that can be easily backed up or copied with all
   generations intact.

   Each member and generation will be copied into the backup PDS, or
   PDSE, as a unique member and will retain all ISPF statistics. The
   generation (both absolute and relative) information will be stored in
   the $INDEX member so that the relative generation numbers can be
   retained.  Unfortunately the absolute generation cannot be retained
   at this time.

   The from PDSE must be a PDSE with generations enabled or an error
   message will be generated.

   The to PDSE must not exist as it will be allocated based on the DCB,
   etc. of the from PDSE.

   When using PDSEGEN on a PDSEGBAK PDS:

   Unfortunately the absolute generation cannot be retained at this
   time.

   The from PDSE must be a PDSE with generations enabled or an error
   message will be generated.

   The to PDSE must not exist as it will be allocated based on the DCB,
   etc. of the from PDSE.

   When using PDSEGEN on a PDSEGBAK PDS:

   1. The $ALLOC member contains the MAXGEN specification for the
      original PDSE. It may be changed prior to a RESTORE but it must
      never be more than the system limit

   2. ISPF Edit command GNAME can be used in Edit or View on a backup
      member (members that start with @) to get information on the
      real member name and generation information.
   3. Member $BACKUP is the PDSEGBAK backup report
   4. Member $INDEX is used during the RESTORE, and by the GNAME
      command, to map the backup member name and generation to the real
      member


=BROWSE=EDIT=VIEW
)F Function - Primary command

)X Syntax -
     Browse member generation
     Edit  member generation
     View  member generation

   member
          May be * for all members in the table display or a member name
          If using * then use filter, find, and hide to limit the member
          list Or use filtering for member-name (e.g. A*C).  If Edit *
          and member does not exist then it will be created.

          Note: * valid only if the filter is not a mask.

   generation
          May be blank for generation 0 or -nn for a valid relative
          generation.

   Browse and View will invoke the ISPF Browse or View interface for the
   base member (generation 0) and non-0 generations.

   Edit will invoke the ISPF Edit interface for generation 0 members
   only.  If requested for a non-0 generation then the request will be
   converted to View. If the Edit member does not exist then it will be
   created.

=C
)F Function - Primary command

   C will change to another PDSE dataset.

)X Syntax -
     C dataset-name filter

             Where dataset-name is optional (if not specified then the
             initial entry panel will be displayed to prompt for a
             dataset name).

             If dataset-name is * then the change will be back to the
             prior dataset.

             If dataset-name is ? then a list of up to 25 previous
             datasets will be presented for selection. With an option to
             enter a new dataset-name.

             If dataset-name is a number then it will be used as a index
             into the 25 previously used datasets.

             If dataset-name is > then the dataset that was the target
             for the most recent COPY (command or line selection), or
             the most recent MODEL command, will become the new active
             dataset.

             Filter is optional and if specified will override any
             existing filter.

             The Dataset List Panel supports point and shoot for
             many of the panel fields and each dataset field is
             scrollable using the left (F10) and right (F11) keys.

             Rnn (or R nn) to remove an entry or use point and shoot on
             the R next to the dataset name.

             Use Mnn (or M nn) to move an entry to the top of the list,
             or use point and shoot on the M next to the dataset name.

             The CLEAR command will empty the list of datasets.
             Or click on the CLEAR point and shoot field.

             Rnn (or R nn) to remove an entry or use point and shoot on
             the R next to the dataset name.

             Use Mnn (or M nn) to move an entry to the top of the list,
             or use point and shoot on the M next to the dataset name.

             The CLEAR command will empty the list of datasets.
             Or click on the CLEAR point and shoot field.

             The SORT command will sort the list of datasets in
             ascending order.  Or click on the SORT point and shoot
             field.

             The SORT command with a D parm will sort the list of
             dataset in descending order.  Or click on the SORTD point
             and shoot field.

             END, EXIT, and QUIT will all close the panel.
             Each of these have a point and shoot field.

=COPY
)F Function - Primary command

)X Syntax -
     COPY to-pdse

   The to-pdse is optional

   The COPY Command will display a popup panel asking for:

         # ---------------------------------------- #
         |   Target PDSE dataset name               |
         |   Member name or mask                    |
         |   Create the target dataset (yes or no)  |
         |   Replace members on copy   (yes or no)  |
         |   Show a Progress Meter     (yes or no)  |
         # ---------------------------------------- #

       The Member name mask uses the same PDSEGEN member pattern
       filtering options.

       Create will create the target dataset using the same allocation
       information as the current dataset, including the same PDSE
       parameters.

       information as the current dataset, including the same PDSE
       parameters.

       When Create is specified you can change the space allocation
       and the maxgen.

       Replace does not apply if Create is specified.

       Note that the copy will copy the member and generations while
       retaining the relative generation order but the absolute
       generation numbers will be lost and start over at 1.

       The copy operation will copy from the oldest generation to
       the newest and then the base member.  It does this to retain
       the relative generation sequence (the absolute generation
       number will be lost as there is no way to retain it). This
       process also assures that the base member is retained along
       with the most recent generations if copying to a PDSE with a
       smaller MAXGEN value.

=INFO
)F Function - Primary command

   INFO will display summary information on the PDSE, including how many
   members and how many generation members.

   Abbreviation is I

=AGE
)F Function - Primary command

   AGE

   Display age metrics for the members in the PDS/PDSE.

   Abbreviation is AG

=SETMACRO
)F Function - Primary command

   SETMACRO

   The SetMacro command enables the definition and management of ISPF
   Edit Initial Edit macros. These are defined based on the dataset
   suffix and will only be invoked if the defined suffix matches the
   active dataset.

   The definition includes:

       Dataset Suffix
       Edit Macro Name
       Edit Macro Parm (optional)

   Abbreviation is SM

=DATE
)F Function - Primary command

   TODAY will display all members and generations changed today.
   WEEK  will display all members and generations changed in the last 7
         days.
   MONTH will display all members and generations changed in the last 30
         days.
   YEAR  will display all members and generations changed this year.
   SINCE -nn
         will display all members and generations updated
         since the previous nn days.
   SINCE yy/mm/dd
         will display all members and generations updated
         since the provided date. The date MUST be in the format of
         yy/mm/dd.

   All date filters are toggles. To toggle SINCE off just enter SINCE.
=FILTER
)F Function - Primary command

)X Syntax -
     FILter xxx

   Where xxx is the filter or OFF to turn off filtering

   Abbreviation: FIL        Alias: MEMList or ML

   Filter will limit the member, with their generations, that are
   displayed in the member list.

   Valid filters are:

       ABC  member ABC
       ABC: members starting with ABC
       ABC* for members starting with ABC
       *ABC members ending with ABC
       ABC/ members with ABC anywhere
       /ABC members with ABC anywhere
       *    for any number of characters(A*E)
       ABC  member ABC
       ABC: members starting with ABC
       ABC* for members starting with ABC
       *ABC members ending with ABC
       ABC/ members with ABC anywhere
       /ABC members with ABC anywhere
       *    for any number of characters(A*E)
       %    for any single character (A%B)
       A:C  members starting with A thru C
       (mem1 mem2 mem3) for individual members or member masks

   Performance Tips (depending on the number of members/generations)

   Good      Not as Fast         Good      Not as Fast
   ABC*      A*C                 /ABC      A%C*
   ABC:      A%C                 *         *A*
   ABC/      AB%                 ABC       *A%C
   *ABC      A*C%                (ABC DEF) (AB% D%F)

=FIND
)F Function - Primary command

)X Syntax -
     FIND string

   Search all members, including within member names, and generations
   for the specified string. Then update the display to remove all
   members that do not match.

   Abbreviation is F
   Aliases: SRCh and SEArch

   To limit the search to specific members use Filter prior to Find.

   To limit the find string enclose the string in quotes: ' JOB ' will
   find the string space-JOB-space which will not be found in the member
   name.

   If used on a PDSEGEN Backup PDS then a different search is performed
   which will identify the backup member where the string is found and
   the real member name and relative generation for that backup member.

=GENONLY=HIDE
)F Function - Primary command

   GENONLY will hide all base members leaving only the generations
   displayed.

   HIDE will hide all generations in the member list leaving only
   the base (generation 0) members.

   Both are toggle commands. The 1st use will hide the base or
   generations and the next use will unhide.

   When GENOnly or HIDE mode are active, Delete, Prune, and Rename
   are not available.

=HIGEN
)F Function - Primary command

   HIGEN will add to the member list all High Water Gen (dummy) members.

   A Dummy member is a member that holds information about a previously
   deleted member. That information includes the highest absolute
   generation that was used for the member before it, or its
   generations, were deleted.

   After using the HIGEN command the member name will be added to the
   member list with the date fields set to blank and the user set to
   HIGen.  The relative generation will be '-' and the absolute
   generation will be the highest absolute generation that was used when
   the member, and/or all its generations, were deleted.

   HIGEN ? will display this tutorial panel.

   Fun aliases:  Achmed, Casper, Zombie

=ID=MINE
)F Function - Primary command

   ID followed by 1 to 8 characters will be used to filter the displayed
   member list to only those members where the provided characters are
   found in the userid.

)X Syntax -
     ID xxxx

   MINE will display only those members that have a userid the same as
   the active userid.

)X Syntax -
     MINE

   Note: These act as toggles to filter or not to filter.

=LOCATE
)F Function - Primary command

   Locate will locate the requested value in the most recently sorted
   column (default column is Name).  The locate will be positioned to
   the closest matching row.

)X Syntax -
     Locate value

=MODEL
)F Function - Primary command

)X Syntax -
     MODel new-dsname

   new-dsname is optional and will be used for the new dataset name
   if one is provided on the command.

   This command is used to allocate a new dataset (PDS or PDSE) dataset
   using the characteristics of the existing dataset.

   A popup prompt is provided with all of the current allocation
   information allowing all allocation parameters to be changed.

   The Dataset name must be changed to a new dataset name before
   proceeding.

   The Volser field can be blanked out to allow SMS allocation to manage
   the target location.

   The Copy-To dataset name will be updated with the Model dataset name
   to facilitate using Copy from the current to the newly allocated
   dataset.

=OPTIONS
)F Function - Primary command

   Will  present the user with a selection panel of all available
   primary commands from which a command may be selected.

   A field is provided to enter both required and optional parameters
   for the selected command. Some commands (e.g. Browse) require a
   parameter, others will prompt if a parameter is required but not
   provided.

   A command may be selected by number, or by using the ISPF Point and
   Shoot feature.

   Optionally any valid PDSEGEN command, with parameters, may be entered
   on the command line. Note: Any parameters entered in the optional
   field will be appended to the command.

=OUTPUT
)F Function - Primary command

   OUTPUT will write the member list to a sequential dataset.

    BROWSE    USERID.PDSEGEN.REPORT          Line 0000000000 Col 001 072
    Command ===>                                        Scroll ===> CSR
   ********************************* Top of Data ***********************
   DSN=USERID.MBRGEN.LIONEL32 - MaxGens=5
   Date: 11 Oct 2017 Time: 06:47:20
   Name      Gen  Abs Created      Changed        VV.MM  Size    ID
   BIGUNS      0    0 2016/07/01 2016/07/01 11:50 01.01     1    USERID
   BIGUNS     -1    1 2016/07/01 2016/07/01 11:50 01.00     1    USERID
   INFO        0    0 2017/09/18 2017/09/18 10:11 01.04    25    USERID
   INFO       -1    8 2017/09/18 2017/09/18 10:01 01.04    25    USERID
   INFO       -2    7 2017/09/18 2017/09/18 09:55 01.03    25    USERID
   INFO       -3    6 2017/09/18 2017/09/18 09:54 01.03    25    USERID
   INFO       -4    5 2017/09/18 2017/09/18 09:53 01.02    25    USERID
   INFO       -5    4 2017/09/18 2017/09/18 09:49 01.01    26    USERID

=PRUNE
)F Function - Primary command

   Prune will remove old member generations and retain the number
   of generations specified (from 0 to nn).

   If 2 is specified then all generations beyond generation -2 will
   be deleted.

   If 0 is specified than all generations will be removed leaving
   only generation 0 (the base member).

   If RESET is specified then it must be in UPPER CASE and it will
   remove ALL members and generations that are in the member list.

   NOTE: To limit the Prune operation use the FILTER command before
         using the Prune command.

=REFLIST
)F Function - Primary command

   The Reflist command will display the last 30 data sets that ISPF has
   referenced. The user may select one, or none, to switch to.

)X Syntax -
     REFList

=REFRESH
)F Function - Primary command

   The Refresh command will refresh the member/generation list and reset
   all filters with an option to define a new filter.

)X Syntax -
     REFresh filter

=RESTORE
)F Function - Primary command

   The RESTORE Command will display a panel that provides the ability to
   RESTORE the specified PDSE backup dataset with all members and
   generations to a new PDSE or existing PDSE.

  Panel fields:

  # ----------------------------------------------------------- #
  |   PDSE Generation Backup: <pdsegen backup pds>              |
  |   PDSE Target:            <target pdse to restore into>     |
  |   Allocate Target:            (Y or N)                      |
  |                                                             |
  |   Optional fields:                                          |
  |                                                             |
  |   Member Name: <member name or member mask>                 |
  |   Generation:  <generation selection using either absolute  |
  |                 or relative> (e.g. 0, -5, 47)               |
  # ----------------------------------------------------------- #

   If the New option is selected then the backup PDSE will be restored
   to a NEW PDSE that will be allocated based on the DCB, etc. of the
   backup (e.g. 0, -5, 47).

   If the New option is selected then the backup PDSE will be restored
   to a NEW PDSE that will be allocated based on the DCB, etc. of the
   backup PDSE but will have the generations re-enabled. All members and
   generations will be restored. The original absolute generation number
   will be lost but the relative generation will be retained.

   When using PDSEGEN on a PDSEGBAK PDS:

   1. The $ALLOC member contains the MAXGEN specification for the
      original PDSE. It may be changed prior to a RESTORE but it must
      never be more than the system limit
   2. ISPF Edit command GNAME can be used in Edit or View on a backup
      member (members that start with @) to get information on the
      real member name and generation information.
   3. Member $BACKUP is the PDSEGBAK backup report
   4. Member $INDEX is used during the RESTORE, and by the GNAME macro,
      to map the backup member name and generation to the real member

=EDIT=SELECT
)F Function - Primary command

)X Syntax -
     E member gen

   Select (S) and Edit (E) can be used a commands to select, or Edit,
   an existing or new member.

   If gen is specified then it must be a valid relative or absolute gen
   If the member does not exist then it will be created using Edit.  An
   * may be used to Edit the last selected member.

   Valid abbreviations are:  E and S

=SET
)F Function - Primary command

   SET will prompt to change the default action of the line selection
   options S and Point and Shoot if option is blank.

   Valid options are:   B - Browse      V - View
                        E - Edit        / - Prompt popup

   Default Member Position options are:
                        0 - Do Not reposition the table to place
                            the last selected member at the top
                            * Except for Edit processing
                        1 - Reposition the table to place
                            the last selected member at the top

   Color options on the next tutorial panel

   SET allows the user to change the default color options for the
   PDSEGEN application and tutorial panels.

   Valid color options are:
         B - Blue    R - Red    Y - Yellow
         G - Green   T - Turq
         P - Pink    W - White

   The Header row color and the option to reverse the color are
   supported.

   The member table display column colors may also be changed:

        Sorted is the color of the column last sorted
        UnSorted is the color of the other columns

=SORT
)F Function - Primary command

)X Syntax -
     SORT column order

   Sort Columns:   Field      Abbreviation    Field      Abbreviation
                   Name       N               Size       S
                   Created    CR              Init       I
                   Changed    CH              Mod        M
                   ID         ID

   Sort ? will display a popup to select the column to sort.

   Order may be A for Ascending or D for Descending. If the order is not
   specified then the 1st sort will be Descending and the next
   Ascending.

   To make things 'modern' the column headers may have the cursor placed
   on them and ENTER pressed for a point and shoot sort.

   Abbreviation is SO

=SUBMIT
)F Function - Primary command

)X Syntax -
     SUBmit member generation

   member
          May be * for all members in the table display or a member name
          Or the member name may be a filter (e.g. A*C).

   generation
          May be blank for generation 0 or -nn for a valid relative
          generation.

   Notes: Member may not contain any wild/filter characters
          If using a member name of *, use filter, find, and hide to
          limit the member list.

=VALIDATE
)F Function - Primary command

   Validate (abbreviation VA) will validate the integrity of the PDSE
   using the IEBPDSE utility. The IEBPDSE report will be opened in
   View after processing.

   Abbreviation is VA

   Note: Validate will also force a clean for all pending deletes.

=BATCH=JCL
)F Function -
   1. BACKUP and RESTORE

   PDSEGBAK may be run in batch to Backup or Restore PDSE.

   Differences from the ISPF Dialog:

      1. The copy will also generate a report in SYSTSPRT for each
         copied member and generation

   Sample JCL is provided below. The JOB card and dataset names
   are examples. The sample includes an example of how to allocate
   the target PDSE before doing the copy.

   //USERIDT JOB XXXXXXXX,USERID,
   //          NOTIFY=USERID,MSGCLASS=A
   //OUT       OUTPUT DEFAULT=YES,JESDS=ALL,OUTDISP=(HOLD,HOLD)
   //* ------------------------------------------------------ *
   //* THIS IS A SAMPLE BATCH JOB TO DEMONSTRATE HOW TO RUN   *
   //* THE PDSEGBAK ROUTINE TO BACKUP AND THEN RESTORE A      *
   //* PDSE WITH MEMBER GENERATIONS.                          *
   //*                                                        *
   //* THE PDSEBAK SYNTAX IS:                                 *
   //*                                                        *
   //* %PDSEGBAK  INPUT TARGET OPTION                         *
   //*                                                        *
   //* WHERE INPUT IS THE SOURCE PDSE                         *
   //*       TARGET IS THE TARGET PDSE                        *
   //*       OPTION IS EITHER BACKUP OR RESTORE               *
   //* ------------------------------------------------------ *
   //ALLOC    EXEC PGM=IKJEFT01,DYNAMNBR=50
   //SYSTSPRT DD   SYSOUT=*
   //SYSTSIN  DD   *
    PROFILE PREFIX(HLQ)
    DELETE TEST.N.BACKUP
    DELETE TEST.N.PDSE
    DELETE TEST.N.PDSE
   /*
   //PDSEGBAK EXEC PGM=IKJEFT01,DYNAMNBR=50
   //SYSEXEC  DD  DISP=SHR,DSN=HLQ.PDSEGEN.EXEC
   //STEPLIB  DD  DISP=SHR,DSN=HLQ.PDSEGEN.LOAD
   //ISPTLIB DD  DISP=SHR,DSN=SYS1.SISPTENU
   //ISPPROF DD  DISP=(,DELETE),SPACE=(TRK,(1,1,1)),UNIT=SYSDA,
   //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)
   //ISPPLIB DD  DISP=(,DELETE),SPACE=(TRK,(1,1,1)),UNIT=SYSDA,
   //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)
   //ISPSLIB DD  DISP=(,DELETE),SPACE=(TRK,(1,1,1)),UNIT=SYSDA,
   //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)
   //ISPMLIB  DD DISP=SHR,DSN=SYS1.SISPMENU
   //SYSTSPRT DD   SYSOUT=*
   //SYSTSIN  DD   *
    PROFILE PREFIX(HLQ)
    ISPSTART CMD(%PDSEGBAK TEST.PDSE TEST.N.BACKUP BACKUP)
    ISPSTART CMD(%PDSEGRST TEST.N.BACKUP TEST.N.PDSE / NEW)
   /*

   2. COPY

   PDSEGENC may be run in batch to copy a PDSE to another PDSE.

   Differences from the ISPF Dialog:

      1. The target PDSE must be pre-allocated.
      2. The copy will generate a report in SYSTSPRT for each
         copied member and generation.

   Sample JCL is provided below. The JOB card and dataset names
   are examples. The sample includes an example of how to allocate
   the target PDSE before doing the copy.

   //USERIDT JOB XXXXXXXX,USERID,
   //          NOTIFY=USERID,MSGCLASS=A
   //OUT       OUTPUT DEFAULT=YES,JESDS=ALL,OUTDISP=(HOLD,HOLD)
   //* ------------------------------------------------------ *
   //* THIS IS A SAMPLE BATCH JOB TO DEMONSTRATE HOW TO RUN   *
   //* THE PDSEGENC ROUTINE TO COPY A PDSE TO ANOTHER PDSE.   *
   //*                                                        *
   //* THE PDSEGENC SYNTAX IS:                                *
   //*                                                        *
   //* %PDSEGENC  FROMPDSE TOPDSE MEMBER-FILTER ( OPTIONS     *
   //*                                                        *
   //* WHERE FROMPDSE IS THE SOURCE PDSE                      *
   //*       TOPDSE IS THE TARGET PDSE                        *
   //*       MEMBER-FILTER IS * FOR ALL                       *
   //*                 * TO FILTER ON MULTIPLE CHARACTERS     *
   //*                 % TO FILTER ON A SINGLE CHARACTERS     *
   //*                 SPECIFIC MEMBER NAME                   *
   //*                 MEM/ TO COPY ALL MEMBERS WITH MEM      *
   //*                     ANYWHERE IN THE NAME               *
   //*       ( REQUIRED IF ANY OPTION IS SPECIFIED            *
   //*                                                        *
   //* OPTIONS MAY BE:                                        *
   //*                                                        *
   //*       BATCH TO BYPASS THE ISPF PROGRESS POPUP          *
   //*       NEW TO CREATE THE TARGET PDSE USING ALLOC INFO   *
   //*           FROM THE FROM PDSE                           *
   //*       REPLACE TO REPLACE SAME MEMBER (AND GENERATIONS) *
   //* ------------------------------------------------------ *
   //ALLOC    EXEC PGM=IKJEFT1B,DYNAMNBR=50
   //SYSTSPRT DD   SYSOUT=*
   //SYSTSIN  DD   *
   PROFILE PREFIX(HLQ)
    DELETE TEST.N.PDSE
    ALLOC DS(TEST.N.PDSE) NEW SPA(30,30) DSNTYPE(LIBRARY,2)
       MAXGEN(10) LIKE(TEST.PDSE)
    FREE DS(TEST.N.PDSE)
   /*
   //COPY     EXEC PGM=IKJEFT1B,DYNAMNBR=50
   //SYSEXEC  DD  DISP=SHR,DSN=USERID.PDSEGEN.EXEC
   //STEPLIB  DD  DISP=SHR,DSN=USERID.PDSEGEN.LOAD
   //ISPTLIB DD  DISP=SHR,DSN=SYS1.SISPTENU
   //ISPPROF DD  DISP=(,DELETE),SPACE=(TRK,(1,1,1)),UNIT=SYSDA,
   //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)
   //ISPPLIB DD  DISP=(,DELETE),SPACE=(TRK,(1,1,1)),UNIT=SYSDA,
   //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)
   //ISPSLIB DD  DISP=(,DELETE),SPACE=(TRK,(1,1,1)),UNIT=SYSDA,
   //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)
   //ISPMLIB  DD DISP=SHR,DSN=SYS1.SISPMENU
   //SYSTSPRT DD   SYSOUT=*
   //SYSTSIN  DD   *
   PROFILE PREFIX(HLQ)
   ISPF CMD(%PDSEGENC TEST.PDSE TEST.N.PDSE *)
   /*

=ISPF/EDIT/VIEW/COMPARE
)F Function -

   The COMPare command in ISPF Edit and View has been extended to allow
   the ability to compare to another member generation within the
   current PDSE. The traditional COMPARE syntax still works.

   The new syntax to use this extension is:

          Syntax:    COMPare member new-gen old-gen
          Examples:  COMPare abc -2 0
                     COMPare -3

   If the generation is 0 then the command is the same as a compare
   without the generation.

   It is possible to compare other generations with the same member
   name using this extension.

   Note: All standard Compare functions continue to work with this
   extension.

=LEFT=RIGHT
)F Function -

   The LEFT and RIGHT commands (or F10 and F11) can be used to change
   the member list display from a 2 digit year to a 4 digit year
   display, and from a 1 character line selection to 9 characters.

   There are two sets of panels, one with the Absolute generation number
   and one set without. This is to support sites/users where the
   Absolute and/or Relative generation numbers may exceed the column
   size on the panels with the Absolute generation column.

   Note that the member list display that is last used will be
   remembered for the next PDSEGEN session.

=NOTES
)F Function -

  1.  Browse works as you would expect it to on both normal members
      and member generations.

  2.  Using Edit or View you can use all normal edit commands,
      including edit macros. However commands that reference other
      members can only reference the base, or generation 0 member.

  3.  Multiple members may be selected for Browse or View but Edit
      will only work if the member IS NOT saved or updated.  If a
      member is saved or updated then all rows for that member are
      deleted and re-added to include the updated generation info.

  4.  It shouldn't have to be stated but generations are only
      supported for PDSE Version 2 datasets where generations have
      been enabled when the dataset was allocated.

  5.  Edit will be converted to View for non-0 generation members.

  6.  The Compare command only accepts relative generation numbers.

  7.  The Compare line option will compare the base generation (gen 0)
      to the selected non-0 generation.

  8.  It is possible to allow Edit to edit a generation BUT when that
      happens only the generation is updated and the base member is
      NOT updated. Thus the generation with the update could be lost
      and/or hidden since it is not possible to access a generation
      using Dynamic Allocation or JCL.

      This application has been configured to prevent editing non-0
      generations.

  9.  The e-mail option utilizes XMITIP using the XMITIPFE (front end)
      exec. This option is only available if the mail variable is
      customized to 1.

  10. Aliases are NOT supported by this application at this time and
      they are not displayed in the member list.

  11. If using FIND you can improve the performance by reducing the
      number of members to search by using Filter before Find.

  12. Prune operates on only the members in the display list so
      using Filter before Prune is a good way to limit the members
      that Prune will clean up.

  13. Before using Prune a Backup is recommended (CYA).

  14. PDSEGEN supports extended statistics. If a member has more than
      64K (65535) records then the only way to display the actual record
      count is to turn on extended statistics using the ISPF Edit
      command STATS EXT.

  15. The ISPF Edit COMPARE command has been changed to use the PDSEGCPR
      edit macro. This allows the ability to still do all the normal
      compares AND adds the ability to, while in Edit or View, to
      compare to other member generations.

  16. If you see a member with a -1 generation and there is no 0
      generation that indicates that the member was deleted outside of
      PDSEGEN. The normal ISPF member delete will delete the base member
      but leave the generations and the base member will become the -1
      generation.  PDSE pending delete processing should clean this up
      at some point.

  17. The Member list display defaults to a 2 digit year display. Using
      the Left or Right keys (F10 or F11) will shift to use the 4 digit
      year display by removing the Initial size field from the table.
      This view is remembered across sessions.

  18. When Hide is active, Delete, Prune, and Rename are not available.

  19. PDSEGEN supports up to approximately 42000 members, or members and
      generations. Any member, or generation, beyond that will not be
      processed, even if filtering is used.

  20. The more members, or members and generations, in a PDS/PDSE the
      more processing is required to read the information and build the
      ISPF table. Just be aware if the PDS/PDSE has a large number of
      members, or members and generations.

  21. Dummy members are those members that are displayed using the HIGEN
      command. These members are actually small pseudo-members in the
      PDSE directory that contain the highest absolute generation number
      used by the member when the member had generations. If a member
      has at least one generation then there will be no dummy member. If
      a member has never had any generations there will be no dummy
      member.  If all members generations are deleted then a dummy
      member will be created.  If a member and all of its generations
      are deleted then a dummy member is created. This member is used to
      restart the absolute generation counter when generations are once
      again created for that member name.

=OVERVIEW
)F Function -

  PDSEGEN is an ISPF dialog designed to enable the ISPF user to exploit
  the PDSE Member Generations capability that IBM introduced with z/OS
  2.1 with the introduction of PDSE Version 2 Libraries. This dialog
  uses only IBM documented interfaces and services to provide all of the
  functions that you will find when you use it.

  Background

  IBM introduced PDSE Version 2 with z/OS 2.1 and included member
  generations as part of that release. With this the IBM ISPF product
  provided very basic access to member generations, leaving it up to
  others to provide the means to fully exploit them.

  PDSEGEN was developed to allow the author to work with PDSE member
  generations after seeing a SHARE presentation by IBM on the topic.
  This small project evolved into a tool for use by others as the
  benefit became very apparent. With the assistance and advice or
  several other ISPF experts around the country the tool has developed
  into what you are using today. It is released as open source under


  into what you are using today. It is released as open source under
  the GPL V3 license - which means it's free and all source is provided
  with the distribution.

  What are Member Generations

  A Member Generation is to a PDS member what a Generation Data Set is
  to a dataset. When a PDSE is allocated it is the responsibility of the
  individual performing the allocation to define how many generations to
  allow, up to the installation defined maximum (use the Info command to
  view information about the active PDS/PDSE and included in that
  display will be the MaxGen for the current PDS/PDSE and the System
  MaxGen value.

  The original member will always be relative, and absolute, generation
  0.  Each time a member is updated (saved) a new generation is created
  (unless Save NoGen is used). The new generation will be the original
  member prior to the updates. As generations are created the absolute
  generation number will be incremented, up to the maximum value of
  2,000,000,000, while the relative generation will decrement (from -1
  to -nn, where nn is the installation MaxGens limit). Once the
  generations reach the installation limit, the oldest will be deleted.

  Be very aware that member generations are outstanding as they provide
  a way to find the last working member if changes are made that break
  something, BUT they are also useless outside of the PDSEGEN dialog for
  the simple reason that neither JCL or Dynamic Allocation can access
  them. If you want to work with a member generation then you have to
  copy it into a non-generation member.

  Of Note

  - Space Allocations

  Because a member can have multiple generations the space allocation
  for the PDSE needs to factor in that additional space.

  - Backup, Copy, and Restore

  PDSEGEN fully supports making usable backup copies of any PDSE with
  member generations, something that IEBCOPY and a majority of other
  programs do not. The backup is a normal PDS without member generations

  PDSEGEN fully supports making usable backup copies of any PDSE with
  member generations, something that IEBCOPY and a majority of other
  programs do not. The backup is a normal PDS without member generations
  that can then be copied or backed up using standard utilities. The
  Restore process converts the backup PDS into a PDSE with member
  generations restored. During the backup/restore process the relative
  generation number will be retained, unfortunately the absolute
  generation number will be lost (not that the absolute generation is
  all that useful).

  - Compare

   PDSEGEN also provides the ability to compare a generation to it's
   base member, or to compare two different generations of a member.

  More Information

  This TSO Help member covers all of the PDSEGEN dialog, including
  some functions that can be performed in Batch (i.e. Backup, Restore,
  and Copy).

=IEBPDSE
)F Function -

   IEBPDSE is used to validate a PDSE data set and determine whether it
   is valid or corrupted.  IEBPDSE produces a message data set that
   contains informational messages (for example if the data set was
   found to be corrupted), the results of the validation check, and
   error messages.

   The PDSEGEN VALIDATE command uses utility program  IEBPDSE with the
   PERFORMPENDINGDELETE option.

   Sample JCL:

   //ST01    EXEC PGM=IEBPDSE,PARM='PERFORMPENDINGDELETE'
   //SYSPRINT DD SYSOUT=*
   //SYSLIB DD DISP=SHR,DSN=hlq.pdse.dsname
   /*

=RESTRICTIONS
)F Function -

   1. The MAXGENS option defines the number of generations plus 1 for
      the base or generation 0 member.  Thus a MAXGENS of 10 yields
      11 members.

   2. You can delete an individual generation and that will leave a
      gap in the generations. This is not critical but is curious.

   3. Use of TSO DELETE will delete the base member BUT will NOT
      Delete any generations. The ISPF LMMDEL service will delete
      the base member and ALL generations. This application uses
      its own routine, PDSEGDEL, that uses the STOW delete generation
      interface for delete processing.

      - If you delete a member and all generations and then create a
        new member with the same name. All generations for the new
        member will start with the previous members generation next
        high generation number.

      - Some ISPF applications do not use LMMDEL to delete members
        but use the equivalent of the TSO DELETE, with the same
        results.

   4. The use of ISPF copy services, including 3.3, will NOT copy
      any generations. Nor will IEBCOPY. The only tool to copy
      generations is DFDSS (a full dataset dump/restore/copy). This
      application does not support copying at this time.

   5. If you Edit a generation other than 0 and save it then no new
      generation is generated. That only happens when editing
      generation 0.

      This option is not available with this application.

   6. You CANNOT access any generations using JCL or Dynamic
      Allocation.

   7. You can force a new generation, when editing generation 0, by
      using the Edit command SAVE NEWGEN.

   8. You can prevent the creation of a new generation by using the
      Edit command SAVE NOGEN

   9. FTP (IBM's) does not support PDSE Member Generations.

  10. The system PARMLIB and SYS1.PROCLIB must be a PDS and NOT a PDSE.
      This is also true for all datasets referenced in MSTJCLxx.
      (other proclib's may be PDSE)

=HINTS=TIPS
)F Function -

   1. Using Member Generations *will* increase the space requirements
      for the PDSE (generations take space).
   2. Use The Copy option to create a PDSE with member generations from
      a non-generation enabled PDS.
   3. Use Prune when you're happy with the current gen 0.
      a.  perhaps prune 1 or 2 so there is fallback but you don't need
          all generations.
   4. Use Filter and/or Hide to limit the display of members to a
      manageable number.
   5. Remember the generations are NOT accessible from JCL or Dynamic
      Allocation which precludes 99% (99.999%) of all TSO commands,
      CLISTs, REXX, and ISPF dialogs.
      a.  Use Promote or Recover to access the generations you need to
          access.
   6. Use Backup (PDSEGBAK) to make a portable copy of your PDSE with
      generations.
      a.  Use Restore (PDSEGRST) to restore the copy.
   7. You can Edit and change backup members.
      a.  This will change the contents of the generations and their
          ISPF Stats.
      b.  Do so with CAUTION.
   8. The MOD column shows the number of records that were changed
      (modified) when the member/generation was saved. This
      information is only available when the member has both STATS and
      NUMBERS enabled.
   9. Create a portable copy (pdsegbak) for backup
      and transfer to other locations then use pdsegbak
      to restore.
  10. Change the maxgen value using pdsegenc (copy)
      or pdsegbak (backup then restore).
  11. A PDSE will retain member information so that if a member is
      deleted and then later recreated then the generation count will
      pick up from where it was. This information is retained what IBM
      refers to as 'dummy' members. These members cannot be processed
      in anyway.

=FEATURES
)F Function -

   1. Find a string of text in all members and generations.
   2. Protection from editing a non-0 generation.
      a.  ISPF allows this (bozo no no).
   3. Promote a non-0 generation to the base generation.
      a.  The base will become generation -1 so it isn't lost.
      b.  This allows it to be accessed using JCL, Dynamic Allocation,
          or other dialogs.
   4. Recover a non-0 generation to a base (generation 0) member.
      a.  This allows it to be accessed using JCL, Dynamic Allocation,
          or other dialogs.
   5. Compare a base generation (gen 0) to a non-0 generation member.
   6. Compare two non-0 generations.
   7. Delete an individual generation that you no longer want.
   8. Use the Prune command to clean up obsolete generations to
      conserve space. Use FILTER to limit the members in the display
      list as those are the only members Prune will operate on.
      HINT: Do a Backup before using Prune (just in case).
